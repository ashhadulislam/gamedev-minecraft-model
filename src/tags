!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	R2/R2Line.h	/^A(void) const$/;"	f	class:R2Line
A	R3/R3Plane.h	/^A (void) const$/;"	f	class:R3Plane
A	jpeg/Makefile	/^A = a$/;"	m
ADDON_MESSAGE_CODE	jpeg/cderror.h	/^} ADDON_MESSAGE_CODE;$/;"	t	typeref:enum:__anon49
ALIGN_TYPE	jpeg/jmemmgr.c	73;"	d	file:
AM_MEMORY_MANAGER	jpeg/jmemmgr.c	28;"	d	file:
ANSI2KNRFLAGS	jpeg/Makefile	/^ANSI2KNRFLAGS= $/;"	m
APIENTRY	GLUT.windows/glut.h	152;"	d
APIENTRY	GLUT.windows/glut.h	24;"	d
APIENTRY	GLUT.windows/glut.h	26;"	d
APIENTRY	GLUT.windows/glut.h	699;"	d
APP0_DATA_LEN	jpeg/jdmarker.c	578;"	d	file:
APP14_DATA_LEN	jpeg/jdmarker.c	579;"	d	file:
APPN_DATA_LEN	jpeg/jdmarker.c	580;"	d	file:
APPSOURCES	jpeg/Makefile	/^APPSOURCES= cjpeg.c djpeg.c jpegtran.c rdjpgcom.c wrjpgcom.c cdjpeg.c \\$/;"	m
AR	R2/Makefile	/^  AR=ar -rcs$/;"	m
AR	R2/Makefile	/^  AR=libtool -static -o$/;"	m
AR	jpeg/Makefile	/^  AR=ar -rcs$/;"	m
AR	jpeg/Makefile	/^  AR=libtool -static -o$/;"	m
AR2	jpeg/Makefile	/^AR2= touch$/;"	m
ASCII_device_name	jpeg/jmemdosa.asm	/^ASCII_device_name	db	"EMMXXXX0"$/;"	d
ASSIGN_STATE	jpeg/jchuff.c	41;"	d	file:
ASSIGN_STATE	jpeg/jchuff.c	44;"	d	file:
ASSIGN_STATE	jpeg/jdhuff.c	40;"	d	file:
ASSIGN_STATE	jpeg/jdhuff.c	43;"	d	file:
ASSIGN_STATE	jpeg/jdphuff.c	43;"	d	file:
ASSIGN_STATE	jpeg/jdphuff.c	46;"	d	file:
Add	R2/R2Image.cpp	/^Add(const R2Image& image)$/;"	f	class:R2Image
Add	R3/R3Matrix.cpp	/^Add(const R3Matrix& a)$/;"	f	class:R3Matrix
AddBlock	minecraft.cpp	/^void AddBlock()$/;"	f
AddNoise	R2/R2Image.cpp	/^AddNoise(double factor)$/;"	f	class:R2Image
Adobe_transform	jpeg/jpeglib.h	/^  UINT8 Adobe_transform;	\/* Color transform code from Adobe marker *\/$/;"	m	struct:jpeg_decompress_struct
Ah	jpeg/jpeglib.h	/^  int Ah, Al;			\/* progressive JPEG successive approx. parms *\/$/;"	m	struct:__anon54
Ah	jpeg/jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_compress_struct
Ah	jpeg/jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_decompress_struct
Al	jpeg/jpeglib.h	/^  int Ah, Al;			\/* progressive JPEG successive approx. parms *\/$/;"	m	struct:__anon54
Al	jpeg/jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_compress_struct
Al	jpeg/jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_decompress_struct
Align	R3/R3Line.h	/^Align(const R3Vector& vector, bool normalized)$/;"	f	class:R3Line
Align	R3/R3Plane.h	/^Align(const R3Vector& normal) $/;"	f	class:R3Plane
Align	R3/R3Ray.h	/^Align(const R3Vector& vector, bool normalized)$/;"	f	class:R3Ray
Align	R3/R3Segment.cpp	/^Align(const R3Vector& vector)$/;"	f	class:R3Segment
AlignReticle	minecraft.cpp	/^void AlignReticle()$/;"	f
Alpha	R2/R2Pixel.h	/^Alpha(void) const$/;"	f	class:R2Pixel
AnyPoint	R2/R2Line.h	/^AnyPoint(void) const$/;"	f	class:R2Line
ApplyGamma	R2/R2Image.cpp	/^ApplyGamma(double exponent)$/;"	f	class:R2Image
Area	R3/R3Cone.cpp	/^Area(void) const$/;"	f	class:R3Cone
Area	R3/R3Cylinder.cpp	/^Area(void) const$/;"	f	class:R3Cylinder
Area	R3/R3Mesh.cpp	/^Area(void) const$/;"	f	class:R3MeshFace
Area	R3/R3Sphere.cpp	/^Area(void) const$/;"	f	class:R3Sphere
AverageEdgeLength	R3/R3Mesh.cpp	/^AverageEdgeLength(void) const$/;"	f	class:R3MeshFace
AverageEdgeLength	R3/R3Mesh.cpp	/^AverageEdgeLength(void) const$/;"	f	class:R3MeshVertex
Axis	R3/R3Cone.h	/^Axis(void) const$/;"	f	class:R3Cone
Axis	R3/R3Cylinder.h	/^Axis(void) const$/;"	f	class:R3Cylinder
AxisCenter	R3/R3Box.h	/^AxisCenter (const int axis) const$/;"	f	class:R3Box
AxisLength	R3/R3Box.h	/^AxisLength (const int axis) const$/;"	f	class:R3Box
AxisRadius	R3/R3Box.h	/^AxisRadius (const int axis) const$/;"	f	class:R3Box
B	R2/R2Line.h	/^B(void) const$/;"	f	class:R2Line
B	R3/R3Plane.h	/^B (void) const$/;"	f	class:R3Plane
BBox	R3/R3Cone.cpp	/^BBox(void) const$/;"	f	class:R3Cone
BBox	R3/R3Cylinder.cpp	/^BBox(void) const$/;"	f	class:R3Cylinder
BBox	R3/R3Segment.cpp	/^BBox(void) const$/;"	f	class:R3Segment
BBox	R3/R3Sphere.cpp	/^BBox(void) const$/;"	f	class:R3Sphere
BBox	R3Scene.h	/^BBox(void) $/;"	f	class:R3Scene
BE	jpeg/jcphuff.c	/^  unsigned int BE;		\/* # of buffered correction bits before MCU *\/$/;"	m	struct:__anon60	file:
BITMAPFILEHEADER	R2/R2Image.cpp	/^} BITMAPFILEHEADER;$/;"	t	typeref:struct:tagBITMAPFILEHEADER	file:
BITMAPINFOHEADER	R2/R2Image.cpp	/^} BITMAPINFOHEADER;$/;"	t	typeref:struct:tagBITMAPINFOHEADER	file:
BITREAD_LOAD_STATE	jpeg/jdhuff.h	107;"	d
BITREAD_SAVE_STATE	jpeg/jdhuff.h	114;"	d
BITREAD_STATE_VARS	jpeg/jdhuff.h	102;"	d
BITS_IN_JSAMPLE	jpeg/jmorecfg.h	23;"	d
BIT_BUF_SIZE	jpeg/jdhuff.h	73;"	d
BI_BITFIELDS	R2/R2Image.cpp	548;"	d	file:
BI_RGB	R2/R2Image.cpp	545;"	d	file:
BI_RLE4	R2/R2Image.cpp	547;"	d	file:
BI_RLE8	R2/R2Image.cpp	546;"	d	file:
BLOCK_SMOOTHING_SUPPORTED	jpeg/jdcoefct.c	23;"	d	file:
BLOCK_SMOOTHING_SUPPORTED	jpeg/jmorecfg.h	289;"	d
BMP_BF_OFF_BITS	R2/R2Image.cpp	551;"	d	file:
BMP_BF_TYPE	R2/R2Image.cpp	550;"	d	file:
BMP_BI_SIZE	R2/R2Image.cpp	552;"	d	file:
BOX_C0_ELEMS	jpeg/jquant2.c	628;"	d	file:
BOX_C0_LOG	jpeg/jquant2.c	624;"	d	file:
BOX_C0_SHIFT	jpeg/jquant2.c	632;"	d	file:
BOX_C1_ELEMS	jpeg/jquant2.c	629;"	d	file:
BOX_C1_LOG	jpeg/jquant2.c	625;"	d	file:
BOX_C1_SHIFT	jpeg/jquant2.c	633;"	d	file:
BOX_C2_ELEMS	jpeg/jquant2.c	630;"	d	file:
BOX_C2_LOG	jpeg/jquant2.c	626;"	d	file:
BOX_C2_SHIFT	jpeg/jquant2.c	634;"	d	file:
BSpline	R3/R3Mesh.cpp	/^BSpline(const R3Mesh& control_mesh, int M, int N)$/;"	f	class:R3Mesh
BYTESPERSAMPLE	jpeg/wrppm.c	35;"	d	file:
BYTESPERSAMPLE	jpeg/wrppm.c	40;"	d	file:
BYTESPERSAMPLE	jpeg/wrppm.c	49;"	d	file:
B_CB_OFF	jpeg/jccolor.c	74;"	d	file:
B_CR_OFF	jpeg/jccolor.c	77;"	d	file:
B_SCALE	jpeg/jquant2.c	75;"	d	file:
B_Y_OFF	jpeg/jccolor.c	71;"	d	file:
Bevel	R3/R3Mesh.cpp	/^Bevel(double t)$/;"	f	class:R3Mesh
Bezier	R3/R3Mesh.cpp	/^Bezier(const R3Mesh& control_mesh, int M, int N)$/;"	f	class:R3Mesh
BilateralFilter	R2/R2Image.cpp	/^BilateralFilter(double rangesigma, double domainsigma)$/;"	f	class:R2Image
BlackAndWhite	R2/R2Image.cpp	/^BlackAndWhite(void)$/;"	f	class:R2Image
Blue	R2/R2Pixel.h	/^Blue(void) const$/;"	f	class:R2Pixel
Blur	R2/R2Image.cpp	/^Blur(double sigma)$/;"	f	class:R2Image
Brighten	R2/R2Image.cpp	/^Brighten(double factor)$/;"	f	class:R2Image
C	R2/R2Line.h	/^C(void) const$/;"	f	class:R2Line
C	R3/R3Plane.h	/^C (void) const$/;"	f	class:R3Plane
C0_SCALE	jpeg/jquant2.c	85;"	d	file:
C0_SCALE	jpeg/jquant2.c	88;"	d	file:
C0_SHIFT	jpeg/jquant2.c	142;"	d	file:
C1_SCALE	jpeg/jquant2.c	91;"	d	file:
C1_SHIFT	jpeg/jquant2.c	143;"	d	file:
C2_SCALE	jpeg/jquant2.c	94;"	d	file:
C2_SCALE	jpeg/jquant2.c	97;"	d	file:
C2_SHIFT	jpeg/jquant2.c	144;"	d	file:
CALLBACK	GLUT.windows/glut.h	154;"	d
CALLBACK	GLUT.windows/glut.h	32;"	d
CALLBACK	GLUT.windows/glut.h	34;"	d
CAPTURE_MOUSE	minecraft.cpp	/^static bool CAPTURE_MOUSE = false;$/;"	v	file:
CBCR_OFFSET	jpeg/jccolor.c	59;"	d	file:
CC	R3/Makefile	/^CC=g++$/;"	m
CC	jpeg/Makefile	/^CC= gcc$/;"	m
CCIR601_sampling	jpeg/jpeglib.h	/^  jboolean CCIR601_sampling;	\/* TRUE=first samples are cosited *\/$/;"	m	struct:jpeg_compress_struct
CCIR601_sampling	jpeg/jpeglib.h	/^  jboolean CCIR601_sampling;	\/* TRUE=first samples are cosited *\/$/;"	m	struct:jpeg_decompress_struct
CCSRCS	R3/Makefile	/^CCSRCS=R3Distance.cpp R3Matrix.cpp R3Mesh.cpp R3Sphere.cpp R3Cone.cpp R3Cylinder.cpp R3Box.cpp R3Plane.cpp R3Segment.cpp R3Ray.cpp R3Line.cpp R3Vector.cpp R3Point.cpp $/;"	m
CDERROR_H	jpeg/cderror.h	22;"	d
CENTERJSAMPLE	jpeg/jmorecfg.h	74;"	d
CENTERJSAMPLE	jpeg/jmorecfg.h	88;"	d
CFLAGS	jpeg/Makefile	/^CFLAGS= -O2  -I$(srcdir)$/;"	m
CHAR_IS_UNSIGNED	jpeg/jconfig.h	10;"	d
CHAR_OUT	jpeg/wrgif.c	95;"	d	file:
CHECK_BIT_BUFFER	jpeg/jdhuff.h	138;"	d
CLIBOBJECTS	jpeg/Makefile	/^CLIBOBJECTS= jcapimin.$(O) jcapistd.$(O) jctrans.$(O) jcparam.$(O) \\$/;"	m
CMAPBITS	jpeg/wrrle.c	50;"	d	file:
CMAPLENGTH	jpeg/wrrle.c	51;"	d	file:
COBJECTS	jpeg/Makefile	/^COBJECTS= cjpeg.$(O) rdppm.$(O) rdgif.$(O) rdtarga.$(O) rdrle.$(O) \\$/;"	m
COMOBJECTS	jpeg/Makefile	/^COMOBJECTS= jcomapi.$(O) jutils.$(O) jerror.$(O) jmemmgr.$(O) $(SYSDEPMEM)$/;"	m
CONFIGFILES	jpeg/Makefile	/^CONFIGFILES= jconfig.cfg jconfig.bcc jconfig.mc6 jconfig.dj jconfig.wat \\$/;"	m
CONFIGUREFILES	jpeg/Makefile	/^CONFIGUREFILES= config.guess config.sub install-sh ltconfig ltmain.sh$/;"	m
CONST_BITS	jpeg/jcdctmgr.c	98;"	d	file:
CONST_BITS	jpeg/jddctmgr.c	184;"	d	file:
CONST_BITS	jpeg/jfdctfst.c	68;"	d	file:
CONST_BITS	jpeg/jfdctint.c	78;"	d	file:
CONST_BITS	jpeg/jidctfst.c	77;"	d	file:
CONST_BITS	jpeg/jidctint.c	78;"	d	file:
CONST_BITS	jpeg/jidctred.c	43;"	d	file:
CONST_SCALE	jpeg/jdct.h	132;"	d
CONTEXT_ROWS_SUPPORTED	jpeg/jcprepct.c	28;"	d	file:
CPPFLAGS	R3/Makefile	/^CPPFLAGS=-Wall -I. -I.. -g$/;"	m
CSTATE_RAW_OK	jpeg/jpegint.h	27;"	d
CSTATE_SCANNING	jpeg/jpegint.h	26;"	d
CSTATE_START	jpeg/jpegint.h	25;"	d
CSTATE_WRCOEFS	jpeg/jpegint.h	28;"	d
CTX_POSTPONED_ROW	jpeg/jdmainct.c	139;"	d	file:
CTX_PREPARE_FOR_IMCU	jpeg/jdmainct.c	137;"	d	file:
CTX_PROCESS_IMCU	jpeg/jdmainct.c	138;"	d	file:
CXX	Makefile	/^CXX=g++$/;"	m
CXX	R2/Makefile	/^CXX=g++$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS=-Wall -I. -g -DUSE_JPEG$/;"	m
CXXFLAGS	R2/Makefile	/^CXXFLAGS=-Wall -I. -g -DUSE_JPEG$/;"	m
C_ARITH_CODING_SUPPORTED	jpeg/jmorecfg.h	269;"	d
C_MAX_BLOCKS_IN_MCU	jpeg/jpeglib.h	55;"	d
C_MULTISCAN_FILES_SUPPORTED	jpeg/jmorecfg.h	270;"	d
C_PROGRESSIVE_SUPPORTED	jpeg/jmorecfg.h	271;"	d
Camera	R3Scene.h	/^Camera(void) $/;"	f	class:R3Scene
Cb_b_tab	jpeg/jdcolor.c	/^  int * Cb_b_tab;		\/* => table for Cb to B conversion *\/$/;"	m	struct:__anon38	file:
Cb_b_tab	jpeg/jdmerge.c	/^  int * Cb_b_tab;		\/* => table for Cb to B conversion *\/$/;"	m	struct:__anon7	file:
Cb_g_tab	jpeg/jdcolor.c	/^  INT32 * Cb_g_tab;		\/* => table for Cb to G conversion *\/$/;"	m	struct:__anon38	file:
Cb_g_tab	jpeg/jdmerge.c	/^  INT32 * Cb_g_tab;		\/* => table for Cb to G conversion *\/$/;"	m	struct:__anon7	file:
Center	R3/R3Cone.h	/^Center(void) const$/;"	f	class:R3Cone
Center	R3/R3Cylinder.h	/^Center(void) const$/;"	f	class:R3Cylinder
Center	R3/R3Mesh.cpp	/^Center(void) const$/;"	f	class:R3Mesh
Center	R3/R3Sphere.h	/^Center(void) const$/;"	f	class:R3Sphere
Centroid	R3/R3Box.cpp	/^Centroid (void) const$/;"	f	class:R3Box
Centroid	R3/R3Segment.h	/^Centroid(void) const$/;"	f	class:R3Segment
ChangeContrast	R2/R2Image.cpp	/^ChangeContrast(double factor)$/;"	f	class:R2Image
ChangeSaturation	R2/R2Image.cpp	/^ChangeSaturation(double factor)$/;"	f	class:R2Image
CheckOption	raypro.cpp	/^CheckOption(char *option, int argc, int minargc)$/;"	f	file:
Clamp	R2/R2Pixel.h	/^Clamp(double maximum_value)$/;"	f	class:R2Pixel
ClearCode	jpeg/wrgif.c	/^  int ClearCode;		\/* clear code (doesn't change) *\/$/;"	m	struct:__anon50	file:
ClosestPoint	R2/R2Line.h	/^ClosestPoint(const R2Point& point) const$/;"	f	class:R2Line
ClosestPoint	R3/R3Box.cpp	/^ClosestPoint(const R3Point& point) const$/;"	f	class:R3Box
ClusterVertices	R3/R3Mesh.cpp	/^ClusterVertices(double grid_cell_size)$/;"	f	class:R3Mesh
CollapseShortEdges	R3/R3Mesh.cpp	/^CollapseShortEdges(double min_edge_length)$/;"	f	class:R3Mesh
Component	R2/R2Pixel.h	/^Component(int i) const$/;"	f	class:R2Pixel
Components	R2/R2Pixel.h	/^Components(void)$/;"	f	class:R2Pixel
Composite	R2/R2Image.cpp	/^Composite(const R2Image& top, int operation)$/;"	f	class:R2Image
ComputeIrradiance	raytrace.cpp	/^static inline R3Rgb ComputeIrradiance(R3Light light, R3Intersection intersect)$/;"	f	file:
ComputeRadiance	raytrace.cpp	/^R3Rgb ComputeRadiance(R3Scene *scene, R3Ray ray, R3Intersection intersect, int depth)$/;"	f
Coord	R3/R3Box.h	/^Coord (int dir, int dim) const$/;"	f	class:R3Box
CopyChannel	R2/R2Image.cpp	/^CopyChannel(const R2Image& from_image, int from_channel, int to_channel)$/;"	f	class:R2Image
Corner	R3/R3Box.cpp	/^Corner (int xdir, int ydir, int zdir) const$/;"	f	class:R3Box
Cr_g_tab	jpeg/jdcolor.c	/^  INT32 * Cr_g_tab;		\/* => table for Cr to G conversion *\/$/;"	m	struct:__anon38	file:
Cr_g_tab	jpeg/jdmerge.c	/^  INT32 * Cr_g_tab;		\/* => table for Cr to G conversion *\/$/;"	m	struct:__anon7	file:
Cr_r_tab	jpeg/jdcolor.c	/^  int * Cr_r_tab;		\/* => table for Cr to R conversion *\/$/;"	m	struct:__anon38	file:
Cr_r_tab	jpeg/jdmerge.c	/^  int * Cr_r_tab;		\/* => table for Cr to R conversion *\/$/;"	m	struct:__anon7	file:
CreateFace	R3/R3Mesh.cpp	/^CreateFace(const vector<R3MeshVertex *>& vertices)$/;"	f	class:R3Mesh
CreateVertex	R3/R3Mesh.cpp	/^CreateVertex(const R3Point& position, const R3Vector& normal, const R2Point& texcoords)$/;"	f	class:R3Mesh
Crop	R2/R2Image.cpp	/^Crop(int x, int y, int w, int h)$/;"	f	class:R2Image
Crop	R3/R3Mesh.cpp	/^Crop(const R3Plane& plane)$/;"	f	class:R3Mesh
Cross	R2/R2Vector.h	/^Cross(const R2Vector& vector) const$/;"	f	class:R2Vector
Cross	R3/R3Vector.cpp	/^Cross(const R3Vector& vector)$/;"	f	class:R3Vector
D	R3/R3Plane.h	/^D (void) const$/;"	f	class:R3Plane
DCTELEM	jpeg/jdct.h	/^typedef INT32 DCTELEM;		\/* must have 32 bits *\/$/;"	t
DCTELEM	jpeg/jdct.h	/^typedef int DCTELEM;		\/* 16 or 32 bits is fine *\/$/;"	t
DCTELEMBITS	jpeg/jidctfst.c	143;"	d	file:
DCTSIZE	jpeg/jpeglib.h	41;"	d
DCTSIZE2	jpeg/jpeglib.h	42;"	d
DCT_FLOAT_SUPPORTED	jpeg/jmorecfg.h	265;"	d
DCT_IFAST_SUPPORTED	jpeg/jmorecfg.h	264;"	d
DCT_ISLOW_SUPPORTED	jpeg/jmorecfg.h	263;"	d
DCT_scaled_size	jpeg/jpeglib.h	/^  int DCT_scaled_size;$/;"	m	struct:__anon53
DEFAULT_FMT	jpeg/djpeg.c	70;"	d	file:
DEFAULT_MAX_MEM	jpeg/jmemansi.c	77;"	d	file:
DEFAULT_MAX_MEM	jpeg/jmemdos.c	204;"	d	file:
DEFAULT_MAX_MEM	jpeg/jmemname.c	184;"	d	file:
DEQUANTIZE	jpeg/jidctflt.c	60;"	d	file:
DEQUANTIZE	jpeg/jidctfst.c	129;"	d	file:
DEQUANTIZE	jpeg/jidctint.c	140;"	d	file:
DEQUANTIZE	jpeg/jidctred.c	109;"	d	file:
DESCALE	jpeg/jdct.h	146;"	d
DESCALE	jpeg/jfdctfst.c	97;"	d	file:
DESCALE	jpeg/jfdctfst.c	98;"	d	file:
DESCALE	jpeg/jidctfst.c	110;"	d	file:
DESCALE	jpeg/jidctfst.c	111;"	d	file:
DIRECTCOLOR	jpeg/rdrle.c	/^  { GRAYSCALE, MAPPEDGRAY, PSEUDOCOLOR, TRUECOLOR, DIRECTCOLOR } rle_kind;$/;"	e	enum:__anon37	file:
DISPLAY_BBOXES_TOGGLE_COMMAND	minecraft.cpp	/^  DISPLAY_BBOXES_TOGGLE_COMMAND,$/;"	e	enum:__anon72	file:
DISPLAY_CAMERA_TOGGLE_COMMAND	minecraft.cpp	/^  DISPLAY_CAMERA_TOGGLE_COMMAND,$/;"	e	enum:__anon72	file:
DISPLAY_EDGE_TOGGLE_COMMAND	minecraft.cpp	/^  DISPLAY_EDGE_TOGGLE_COMMAND,$/;"	e	enum:__anon72	file:
DISPLAY_FACE_TOGGLE_COMMAND	minecraft.cpp	/^  DISPLAY_FACE_TOGGLE_COMMAND,$/;"	e	enum:__anon72	file:
DISPLAY_LIGHTS_TOGGLE_COMMAND	minecraft.cpp	/^  DISPLAY_LIGHTS_TOGGLE_COMMAND,$/;"	e	enum:__anon72	file:
DISTFILES	jpeg/Makefile	/^DISTFILES= $(DOCS) $(MKFILES) $(CONFIGFILES) $(SOURCES) $(INCLUDES) \\$/;"	m
DIVIDE_BY	jpeg/jcdctmgr.c	247;"	d	file:
DLIBOBJECTS	jpeg/Makefile	/^DLIBOBJECTS= jdapimin.$(O) jdapistd.$(O) jdtrans.$(O) jdatasrc.$(O) \\$/;"	m
DOBJECTS	jpeg/Makefile	/^DOBJECTS= djpeg.$(O) wrppm.$(O) wrgif.$(O) wrtarga.$(O) wrrle.$(O) \\$/;"	m
DOCS	jpeg/Makefile	/^DOCS= README install.doc usage.doc cjpeg.1 djpeg.1 jpegtran.1 rdjpgcom.1 \\$/;"	m
DROP_BITS	jpeg/jdhuff.h	150;"	d
DSTATE_BUFIMAGE	jpeg/jpegint.h	36;"	d
DSTATE_BUFPOST	jpeg/jpegint.h	37;"	d
DSTATE_INHEADER	jpeg/jpegint.h	30;"	d
DSTATE_PRELOAD	jpeg/jpegint.h	32;"	d
DSTATE_PRESCAN	jpeg/jpegint.h	33;"	d
DSTATE_RAW_OK	jpeg/jpegint.h	35;"	d
DSTATE_RDCOEFS	jpeg/jpegint.h	38;"	d
DSTATE_READY	jpeg/jpegint.h	31;"	d
DSTATE_SCANNING	jpeg/jpegint.h	34;"	d
DSTATE_START	jpeg/jpegint.h	29;"	d
DSTATE_STOPPING	jpeg/jpegint.h	39;"	d
DST_HANDLE	jpeg/jmemdos.c	479;"	d	file:
DST_OFFSET	jpeg/jmemdos.c	480;"	d	file:
DST_PAGE	jpeg/jmemdos.c	481;"	d	file:
DST_PTR	jpeg/jmemdos.c	482;"	d	file:
DST_TYPE	jpeg/jmemdos.c	478;"	d	file:
DWordReadLE	R2/R2Image.cpp	/^static unsigned int DWordReadLE(FILE *fp)$/;"	f	file:
DWordWriteLE	R2/R2Image.cpp	/^static void DWordWriteLE(unsigned int x, FILE *fp)$/;"	f	file:
D_ARITH_CODING_SUPPORTED	jpeg/jmorecfg.h	285;"	d
D_MAX_BLOCKS_IN_MCU	jpeg/jpeglib.h	57;"	d
D_MULTISCAN_FILES_SUPPORTED	jpeg/jmorecfg.h	286;"	d
D_PROGRESSIVE_SUPPORTED	jpeg/jmorecfg.h	287;"	d
DeleteFace	R3/R3Mesh.cpp	/^DeleteFace(R3MeshFace *face)$/;"	f	class:R3Mesh
DeleteVertex	R3/R3Mesh.cpp	/^DeleteVertex(R3MeshVertex *vertex)$/;"	f	class:R3Mesh
Determinant	R3/R3Matrix.cpp	/^Determinant(void) const$/;"	f	class:R3Matrix
DiagonalLength	R3/R3Box.cpp	/^DiagonalLength (void) const$/;"	f	class:R3Box
DiagonalRadius	R3/R3Box.h	/^DiagonalRadius (void) const$/;"	f	class:R3Box
Dot	R2/R2Vector.h	/^Dot(const R2Vector& vector) const$/;"	f	class:R2Vector
Dot	R3/R3Vector.cpp	/^Dot(const R3Vector& vector) const$/;"	f	class:R3Vector
Draw	R3/R3Box.cpp	/^Draw(void) const$/;"	f	class:R3Box
Draw	R3/R3Cone.cpp	/^Draw(void) const$/;"	f	class:R3Cone
Draw	R3/R3Cylinder.cpp	/^Draw(void) const$/;"	f	class:R3Cylinder
Draw	R3/R3Mesh.cpp	/^Draw(void) const$/;"	f	class:R3Mesh
Draw	R3/R3Segment.cpp	/^Draw (void) const$/;"	f	class:R3Segment
Draw	R3/R3Sphere.cpp	/^Draw(void) const$/;"	f	class:R3Sphere
DrawNode	minecraft.cpp	/^void DrawNode(R3Scene *scene, R3Node *node)$/;"	f
DrawScene	minecraft.cpp	/^void DrawScene(R3Scene *scene) $/;"	f
DrawShape	minecraft.cpp	/^void DrawShape(R3Shape *shape)$/;"	f
EMSH	jpeg/jmemsys.h	/^typedef unsigned short EMSH;	\/* type of expanded-memory handles *\/$/;"	t
EMSPAGESIZE	jpeg/jmemdos.c	484;"	d	file:
EMSPTR	jpeg/jmemdos.c	/^typedef void far * EMSPTR;$/;"	t	file:
EMS_SUPPORTED	jpeg/jmemdos.c	38;"	d	file:
EMScontext	jpeg/jmemdos.c	/^      } EMScontext;$/;"	t	typeref:struct:__anon20	file:
EMSspec	jpeg/jmemdos.c	/^      } EMSspec;$/;"	t	typeref:union:__anon23	file:
ENTROPY_OPT_SUPPORTED	jpeg/jmorecfg.h	272;"	d
EOBRUN	jpeg/jcphuff.c	/^  unsigned int EOBRUN;		\/* run length of EOBs *\/$/;"	m	struct:__anon60	file:
EOBRUN	jpeg/jdphuff.c	/^  unsigned int EOBRUN;			\/* remaining EOBs in EOBRUN *\/$/;"	m	struct:__anon2	file:
EOFCode	jpeg/wrgif.c	/^  int EOFCode;			\/* EOF code (ditto) *\/$/;"	m	struct:__anon50	file:
EPS	raytrace.cpp	13;"	d	file:
ERREXIT	jpeg/jerror.h	205;"	d
ERREXIT	jpeg/rdjpgcom.c	68;"	d	file:
ERREXIT	jpeg/wrjpgcom.c	87;"	d	file:
ERREXIT1	jpeg/jerror.h	208;"	d
ERREXIT2	jpeg/jerror.h	212;"	d
ERREXIT3	jpeg/jerror.h	217;"	d
ERREXIT4	jpeg/jerror.h	223;"	d
ERREXITS	jpeg/jerror.h	230;"	d
EXIT_FAILURE	jpeg/cdjpeg.h	169;"	d
EXIT_FAILURE	jpeg/jerror.c	32;"	d	file:
EXIT_FAILURE	jpeg/rdjpgcom.c	45;"	d	file:
EXIT_FAILURE	jpeg/wrjpgcom.c	51;"	d	file:
EXIT_SUCCESS	jpeg/cdjpeg.h	173;"	d
EXIT_SUCCESS	jpeg/cdjpeg.h	175;"	d
EXIT_SUCCESS	jpeg/rdjpgcom.c	49;"	d	file:
EXIT_SUCCESS	jpeg/rdjpgcom.c	51;"	d	file:
EXIT_SUCCESS	jpeg/wrjpgcom.c	55;"	d	file:
EXIT_SUCCESS	jpeg/wrjpgcom.c	57;"	d	file:
EXIT_WARNING	jpeg/cdjpeg.h	180;"	d
EXIT_WARNING	jpeg/cdjpeg.h	182;"	d
EXTERN	jpeg/jmorecfg.h	190;"	d
EdgeDetect	R2/R2Image.cpp	/^EdgeDetect(void)$/;"	f	class:R2Image
Empty	R3/R3Box.cpp	/^Empty (void) $/;"	f	class:R3Box
Empty	R3/R3Cone.cpp	/^Empty(void)$/;"	f	class:R3Cone
Empty	R3/R3Cylinder.cpp	/^Empty(void)$/;"	f	class:R3Cylinder
Empty	R3/R3Sphere.cpp	/^Empty(void)$/;"	f	class:R3Sphere
End	R2/R2Segment.h	/^End (void) const$/;"	f	class:R2Segment
End	R3/R3Segment.h	/^End (void) const$/;"	f	class:R3Segment
ExtractChannel	R2/R2Image.cpp	/^ExtractChannel(int channel)$/;"	f	class:R2Image
FALSE	jpeg/jmorecfg.h	230;"	d
FAR	R2/R2Image.cpp	985;"	d	file:
FAR	jpeg/jmorecfg.h	213;"	d
FAR	jpeg/jmorecfg.h	215;"	d
FAST_FLOAT	jpeg/jmorecfg.h	357;"	d
FAST_FLOAT	jpeg/jmorecfg.h	359;"	d
FIELD_AT	jpeg/jmemdos.c	472;"	d	file:
FIX	jpeg/jccolor.c	61;"	d	file:
FIX	jpeg/jdcolor.c	62;"	d	file:
FIX	jpeg/jdct.h	139;"	d
FIX	jpeg/jdmerge.c	74;"	d	file:
FIX_0_211164243	jpeg/jidctred.c	58;"	d	file:
FIX_0_298631336	jpeg/jfdctint.c	93;"	d	file:
FIX_0_298631336	jpeg/jidctint.c	93;"	d	file:
FIX_0_382683433	jpeg/jfdctfst.c	79;"	d	file:
FIX_0_390180644	jpeg/jfdctint.c	94;"	d	file:
FIX_0_390180644	jpeg/jidctint.c	94;"	d	file:
FIX_0_509795579	jpeg/jidctred.c	59;"	d	file:
FIX_0_541196100	jpeg/jfdctfst.c	80;"	d	file:
FIX_0_541196100	jpeg/jfdctint.c	95;"	d	file:
FIX_0_541196100	jpeg/jidctint.c	95;"	d	file:
FIX_0_601344887	jpeg/jidctred.c	60;"	d	file:
FIX_0_707106781	jpeg/jfdctfst.c	81;"	d	file:
FIX_0_720959822	jpeg/jidctred.c	61;"	d	file:
FIX_0_765366865	jpeg/jfdctint.c	96;"	d	file:
FIX_0_765366865	jpeg/jidctint.c	96;"	d	file:
FIX_0_765366865	jpeg/jidctred.c	62;"	d	file:
FIX_0_850430095	jpeg/jidctred.c	63;"	d	file:
FIX_0_899976223	jpeg/jfdctint.c	97;"	d	file:
FIX_0_899976223	jpeg/jidctint.c	97;"	d	file:
FIX_0_899976223	jpeg/jidctred.c	64;"	d	file:
FIX_1_061594337	jpeg/jidctred.c	65;"	d	file:
FIX_1_082392200	jpeg/jidctfst.c	92;"	d	file:
FIX_1_175875602	jpeg/jfdctint.c	98;"	d	file:
FIX_1_175875602	jpeg/jidctint.c	98;"	d	file:
FIX_1_272758580	jpeg/jidctred.c	66;"	d	file:
FIX_1_306562965	jpeg/jfdctfst.c	82;"	d	file:
FIX_1_414213562	jpeg/jidctfst.c	93;"	d	file:
FIX_1_451774981	jpeg/jidctred.c	67;"	d	file:
FIX_1_501321110	jpeg/jfdctint.c	99;"	d	file:
FIX_1_501321110	jpeg/jidctint.c	99;"	d	file:
FIX_1_847759065	jpeg/jfdctint.c	100;"	d	file:
FIX_1_847759065	jpeg/jidctfst.c	94;"	d	file:
FIX_1_847759065	jpeg/jidctint.c	100;"	d	file:
FIX_1_847759065	jpeg/jidctred.c	68;"	d	file:
FIX_1_961570560	jpeg/jfdctint.c	101;"	d	file:
FIX_1_961570560	jpeg/jidctint.c	101;"	d	file:
FIX_2_053119869	jpeg/jfdctint.c	102;"	d	file:
FIX_2_053119869	jpeg/jidctint.c	102;"	d	file:
FIX_2_172734803	jpeg/jidctred.c	69;"	d	file:
FIX_2_562915447	jpeg/jfdctint.c	103;"	d	file:
FIX_2_562915447	jpeg/jidctint.c	103;"	d	file:
FIX_2_562915447	jpeg/jidctred.c	70;"	d	file:
FIX_2_613125930	jpeg/jidctfst.c	95;"	d	file:
FIX_3_072711026	jpeg/jfdctint.c	104;"	d	file:
FIX_3_072711026	jpeg/jidctint.c	104;"	d	file:
FIX_3_624509785	jpeg/jidctred.c	71;"	d	file:
FLOAT_MULT_TYPE	jpeg/jdct.h	/^typedef FAST_FLOAT FLOAT_MULT_TYPE; \/* preferred floating type *\/$/;"	t
FMEMCOPY	jpeg/jutils.c	100;"	d	file:
FMEMCOPY	jpeg/jutils.c	104;"	d	file:
FMEMZERO	jpeg/jutils.c	101;"	d	file:
FMEMZERO	jpeg/jutils.c	105;"	d	file:
FMT_BMP	jpeg/djpeg.c	/^	FMT_BMP,		\/* BMP format (Windows flavor) *\/$/;"	e	enum:__anon68	file:
FMT_GIF	jpeg/djpeg.c	/^	FMT_GIF,		\/* GIF format *\/$/;"	e	enum:__anon68	file:
FMT_OS2	jpeg/djpeg.c	/^	FMT_OS2,		\/* BMP format (OS\/2 flavor) *\/$/;"	e	enum:__anon68	file:
FMT_PPM	jpeg/djpeg.c	/^	FMT_PPM,		\/* PPM\/PGM (PBMPLUS formats) *\/$/;"	e	enum:__anon68	file:
FMT_RLE	jpeg/djpeg.c	/^	FMT_RLE,		\/* RLE format *\/$/;"	e	enum:__anon68	file:
FMT_TARGA	jpeg/djpeg.c	/^	FMT_TARGA,		\/* Targa format *\/$/;"	e	enum:__anon68	file:
FMT_TIFF	jpeg/djpeg.c	/^	FMT_TIFF		\/* TIFF format *\/$/;"	e	enum:__anon68	file:
FSERROR	jpeg/jquant1.c	/^typedef INT16 FSERROR;		\/* 16 bits should be enough *\/$/;"	t	file:
FSERROR	jpeg/jquant1.c	/^typedef INT32 FSERROR;		\/* may need more than 16 bits *\/$/;"	t	file:
FSERROR	jpeg/jquant2.c	/^typedef INT16 FSERROR;		\/* 16 bits should be enough *\/$/;"	t	file:
FSERROR	jpeg/jquant2.c	/^typedef INT32 FSERROR;		\/* may need more than 16 bits *\/$/;"	t	file:
FSERRPTR	jpeg/jquant1.c	/^typedef FSERROR FAR *FSERRPTR;	\/* pointer to error array (in FAR storage!) *\/$/;"	t	file:
FSERRPTR	jpeg/jquant2.c	/^typedef FSERROR FAR *FSERRPTR;	\/* pointer to error array (in FAR storage!) *\/$/;"	t	file:
FULL_COEF_BUFFER_SUPPORTED	jpeg/jccoefct.c	24;"	d	file:
FULL_COEF_BUFFER_SUPPORTED	jpeg/jccoefct.c	27;"	d	file:
FULL_MAIN_BUFFER_SUPPORTED	jpeg/jcmainct.c	23;"	d	file:
Face	R3/R3Mesh.h	/^Face(int k) const$/;"	f	class:R3Mesh
FixCracks	R3/R3Mesh.cpp	/^FixCracks(double epsilon)$/;"	f	class:R3Mesh
FixHoles	R3/R3Mesh.cpp	/^FixHoles(void)$/;"	f	class:R3Mesh
FixIntersections	R3/R3Mesh.cpp	/^FixIntersections(void)$/;"	f	class:R3Mesh
Flip	R2/R2Line.cpp	/^Flip(void)$/;"	f	class:R2Line
Flip	R2/R2Segment.cpp	/^Flip(void)$/;"	f	class:R2Segment
Flip	R2/R2Vector.cpp	/^Flip (void) $/;"	f	class:R2Vector
Flip	R3/R3Line.h	/^Flip(void)$/;"	f	class:R3Line
Flip	R3/R3Matrix.cpp	/^Flip(void)$/;"	f	class:R3Matrix
Flip	R3/R3Plane.h	/^Flip(void) $/;"	f	class:R3Plane
Flip	R3/R3Ray.h	/^Flip(void)$/;"	f	class:R3Ray
Flip	R3/R3Segment.cpp	/^Flip(void)$/;"	f	class:R3Segment
Flip	R3/R3Vector.cpp	/^Flip (void) $/;"	f	class:R3Vector
FloydSteinbergDither	R2/R2Image.cpp	/^FloydSteinbergDither(int nbits)$/;"	f	class:R2Image
Fun	R2/R2Image.cpp	/^Fun(int sampling_method)$/;"	f	class:R2Image
Fun	R3/R3Mesh.cpp	/^Fun(void)$/;"	f	class:R3Mesh
GETJOCTET	jpeg/jmorecfg.h	111;"	d
GETJOCTET	jpeg/jmorecfg.h	117;"	d
GETJOCTET	jpeg/jmorecfg.h	119;"	d
GETJSAMPLE	jpeg/jmorecfg.h	60;"	d
GETJSAMPLE	jpeg/jmorecfg.h	66;"	d
GETJSAMPLE	jpeg/jmorecfg.h	68;"	d
GETJSAMPLE	jpeg/jmorecfg.h	85;"	d
GET_2B	jpeg/rdbmp.c	246;"	d	file:
GET_2B	jpeg/rdtarga.c	341;"	d	file:
GET_4B	jpeg/rdbmp.c	248;"	d	file:
GET_BITS	jpeg/jdhuff.h	144;"	d
GLLIBS	Makefile	/^	GLLIBS = -framework GLUT -framework OpenGL$/;"	m
GLLIBS	Makefile	/^	GLLIBS = -lglut -lGLU -lGL$/;"	m
GLLIBS	Makefile	/^	GLLIBS = -lglut32 -lglu32 -lopengl32$/;"	m
GLOBAL	jpeg/cdjpeg.c	/^GLOBAL(jboolean)$/;"	f
GLOBAL	jpeg/jcapistd.c	/^GLOBAL(JDIMENSION)$/;"	f
GLOBAL	jpeg/jdapimin.c	/^GLOBAL(jboolean)$/;"	f
GLOBAL	jpeg/jdapistd.c	/^GLOBAL(JDIMENSION)$/;"	f
GLOBAL	jpeg/jdapistd.c	/^GLOBAL(jboolean)$/;"	f
GLOBAL	jpeg/jdhuff.c	/^GLOBAL(jboolean)$/;"	f
GLOBAL	jpeg/jdmarker.c	/^GLOBAL(jboolean)$/;"	f
GLOBAL	jpeg/jmorecfg.h	188;"	d
GLOBAL	jpeg/rdbmp.c	/^GLOBAL(cjpeg_source_ptr)$/;"	f
GLOBAL	jpeg/rdgif.c	/^GLOBAL(cjpeg_source_ptr)$/;"	f
GLOBAL	jpeg/rdppm.c	/^GLOBAL(cjpeg_source_ptr)$/;"	f
GLOBAL	jpeg/rdrle.c	/^GLOBAL(cjpeg_source_ptr)$/;"	f
GLOBAL	jpeg/rdswitch.c	/^GLOBAL(jboolean)$/;"	f
GLOBAL	jpeg/rdtarga.c	/^GLOBAL(cjpeg_source_ptr)$/;"	f
GLOBAL	jpeg/wrbmp.c	/^GLOBAL(djpeg_dest_ptr)$/;"	f
GLOBAL	jpeg/wrgif.c	/^GLOBAL(djpeg_dest_ptr)$/;"	f
GLOBAL	jpeg/wrppm.c	/^GLOBAL(djpeg_dest_ptr)$/;"	f
GLOBAL	jpeg/wrrle.c	/^GLOBAL(djpeg_dest_ptr)$/;"	f
GLOBAL	jpeg/wrtarga.c	/^GLOBAL(djpeg_dest_ptr)$/;"	f
GLUTAPI	GLUT.windows/glut.h	123;"	d
GLUTAPI	GLUT.windows/glut.h	126;"	d
GLUTAPI	GLUT.windows/glut.h	128;"	d
GLUTAPI	GLUT.windows/glut.h	156;"	d
GLUTCALLBACK	GLUT.windows/glut.h	133;"	d
GLUTCALLBACK	GLUT.windows/glut.h	157;"	d
GLUTCommand	minecraft.cpp	/^void GLUTCommand(int cmd)$/;"	f
GLUTCreateMenu	minecraft.cpp	/^void GLUTCreateMenu(void)$/;"	f
GLUTDrawText	minecraft.cpp	/^void GLUTDrawText(const R3Point& p, const char *s)$/;"	f
GLUTInit	minecraft.cpp	/^void GLUTInit(int *argc, char **argv)$/;"	f
GLUTKeyboard	minecraft.cpp	/^void GLUTKeyboard(unsigned char key, int x, int y)$/;"	f
GLUTMainLoop	minecraft.cpp	/^void GLUTMainLoop(void)$/;"	f
GLUTMouse	minecraft.cpp	/^void GLUTMouse(int button, int state, int x, int y)$/;"	f
GLUTMouseEntry	minecraft.cpp	/^void GLUTMouseEntry(int state)$/;"	f
GLUTPassiveMotion	minecraft.cpp	/^void GLUTPassiveMotion(int x, int y)$/;"	f
GLUTRedraw	minecraft.cpp	/^void GLUTRedraw(void)$/;"	f
GLUTResize	minecraft.cpp	/^void GLUTResize(int w, int h)$/;"	f
GLUTSaveImage	minecraft.cpp	/^void GLUTSaveImage(const char *filename)$/;"	f
GLUTSpecial	minecraft.cpp	/^void GLUTSpecial(int key, int x, int y)$/;"	f
GLUTStop	minecraft.cpp	/^void GLUTStop(void)$/;"	f
GLUT_ACCUM	GLUT.windows/glut.h	233;"	d
GLUT_ACTIVE_ALT	GLUT.windows/glut.h	447;"	d
GLUT_ACTIVE_CTRL	GLUT.windows/glut.h	446;"	d
GLUT_ACTIVE_SHIFT	GLUT.windows/glut.h	445;"	d
GLUT_ALPHA	GLUT.windows/glut.h	234;"	d
GLUT_APIENTRY_DEFINED	GLUT.windows/glut.h	153;"	d
GLUT_APIENTRY_DEFINED	GLUT.windows/glut.h	22;"	d
GLUT_APIENTRY_DEFINED	GLUT.windows/glut.h	698;"	d
GLUT_API_VERSION	GLUT.windows/glut.h	184;"	d
GLUT_BITMAP_8_BY_13	GLUT.windows/glut.h	310;"	d
GLUT_BITMAP_8_BY_13	GLUT.windows/glut.h	338;"	d
GLUT_BITMAP_9_BY_15	GLUT.windows/glut.h	309;"	d
GLUT_BITMAP_9_BY_15	GLUT.windows/glut.h	337;"	d
GLUT_BITMAP_HELVETICA_10	GLUT.windows/glut.h	314;"	d
GLUT_BITMAP_HELVETICA_10	GLUT.windows/glut.h	342;"	d
GLUT_BITMAP_HELVETICA_12	GLUT.windows/glut.h	315;"	d
GLUT_BITMAP_HELVETICA_12	GLUT.windows/glut.h	343;"	d
GLUT_BITMAP_HELVETICA_18	GLUT.windows/glut.h	316;"	d
GLUT_BITMAP_HELVETICA_18	GLUT.windows/glut.h	344;"	d
GLUT_BITMAP_TIMES_ROMAN_10	GLUT.windows/glut.h	311;"	d
GLUT_BITMAP_TIMES_ROMAN_10	GLUT.windows/glut.h	339;"	d
GLUT_BITMAP_TIMES_ROMAN_24	GLUT.windows/glut.h	312;"	d
GLUT_BITMAP_TIMES_ROMAN_24	GLUT.windows/glut.h	340;"	d
GLUT_BLUE	GLUT.windows/glut.h	301;"	d
GLUT_CURSOR_BOTTOM_LEFT_CORNER	GLUT.windows/glut.h	473;"	d
GLUT_CURSOR_BOTTOM_RIGHT_CORNER	GLUT.windows/glut.h	472;"	d
GLUT_CURSOR_BOTTOM_SIDE	GLUT.windows/glut.h	467;"	d
GLUT_CURSOR_CROSSHAIR	GLUT.windows/glut.h	461;"	d
GLUT_CURSOR_CYCLE	GLUT.windows/glut.h	457;"	d
GLUT_CURSOR_DESTROY	GLUT.windows/glut.h	455;"	d
GLUT_CURSOR_FULL_CROSSHAIR	GLUT.windows/glut.h	479;"	d
GLUT_CURSOR_HELP	GLUT.windows/glut.h	456;"	d
GLUT_CURSOR_INFO	GLUT.windows/glut.h	454;"	d
GLUT_CURSOR_INHERIT	GLUT.windows/glut.h	475;"	d
GLUT_CURSOR_LEFT_ARROW	GLUT.windows/glut.h	452;"	d
GLUT_CURSOR_LEFT_RIGHT	GLUT.windows/glut.h	464;"	d
GLUT_CURSOR_LEFT_SIDE	GLUT.windows/glut.h	468;"	d
GLUT_CURSOR_NONE	GLUT.windows/glut.h	477;"	d
GLUT_CURSOR_RIGHT_ARROW	GLUT.windows/glut.h	451;"	d
GLUT_CURSOR_RIGHT_SIDE	GLUT.windows/glut.h	469;"	d
GLUT_CURSOR_SPRAY	GLUT.windows/glut.h	458;"	d
GLUT_CURSOR_TEXT	GLUT.windows/glut.h	460;"	d
GLUT_CURSOR_TOP_LEFT_CORNER	GLUT.windows/glut.h	470;"	d
GLUT_CURSOR_TOP_RIGHT_CORNER	GLUT.windows/glut.h	471;"	d
GLUT_CURSOR_TOP_SIDE	GLUT.windows/glut.h	466;"	d
GLUT_CURSOR_UP_DOWN	GLUT.windows/glut.h	463;"	d
GLUT_CURSOR_WAIT	GLUT.windows/glut.h	459;"	d
GLUT_DEFINED__CRTIMP	GLUT.windows/glut.h	118;"	d
GLUT_DEFINED__CRTIMP	GLUT.windows/glut.h	713;"	d
GLUT_DEFINED___CDECL	GLUT.windows/glut.h	104;"	d
GLUT_DEFINED___CDECL	GLUT.windows/glut.h	708;"	d
GLUT_DEPTH	GLUT.windows/glut.h	235;"	d
GLUT_DEVICE_IGNORE_KEY_REPEAT	GLUT.windows/glut.h	408;"	d
GLUT_DEVICE_KEY_REPEAT	GLUT.windows/glut.h	409;"	d
GLUT_DISPLAY_MODE_POSSIBLE	GLUT.windows/glut.h	381;"	d
GLUT_DOUBLE	GLUT.windows/glut.h	232;"	d
GLUT_DOWN	GLUT.windows/glut.h	251;"	d
GLUT_ELAPSED_TIME	GLUT.windows/glut.h	388;"	d
GLUT_ENTERED	GLUT.windows/glut.h	282;"	d
GLUT_FULLY_COVERED	GLUT.windows/glut.h	296;"	d
GLUT_FULLY_RETAINED	GLUT.windows/glut.h	294;"	d
GLUT_GAME_MODE_ACTIVE	GLUT.windows/glut.h	678;"	d
GLUT_GAME_MODE_DISPLAY_CHANGED	GLUT.windows/glut.h	684;"	d
GLUT_GAME_MODE_HEIGHT	GLUT.windows/glut.h	681;"	d
GLUT_GAME_MODE_PIXEL_DEPTH	GLUT.windows/glut.h	682;"	d
GLUT_GAME_MODE_POSSIBLE	GLUT.windows/glut.h	679;"	d
GLUT_GAME_MODE_REFRESH_RATE	GLUT.windows/glut.h	683;"	d
GLUT_GAME_MODE_WIDTH	GLUT.windows/glut.h	680;"	d
GLUT_GREEN	GLUT.windows/glut.h	300;"	d
GLUT_HAS_DIAL_AND_BUTTON_BOX	GLUT.windows/glut.h	399;"	d
GLUT_HAS_JOYSTICK	GLUT.windows/glut.h	410;"	d
GLUT_HAS_KEYBOARD	GLUT.windows/glut.h	396;"	d
GLUT_HAS_MOUSE	GLUT.windows/glut.h	397;"	d
GLUT_HAS_OVERLAY	GLUT.windows/glut.h	421;"	d
GLUT_HAS_SPACEBALL	GLUT.windows/glut.h	398;"	d
GLUT_HAS_TABLET	GLUT.windows/glut.h	400;"	d
GLUT_HIDDEN	GLUT.windows/glut.h	293;"	d
GLUT_INDEX	GLUT.windows/glut.h	230;"	d
GLUT_INIT_DISPLAY_MODE	GLUT.windows/glut.h	386;"	d
GLUT_INIT_WINDOW_HEIGHT	GLUT.windows/glut.h	385;"	d
GLUT_INIT_WINDOW_WIDTH	GLUT.windows/glut.h	384;"	d
GLUT_INIT_WINDOW_X	GLUT.windows/glut.h	382;"	d
GLUT_INIT_WINDOW_Y	GLUT.windows/glut.h	383;"	d
GLUT_JOYSTICK_AXES	GLUT.windows/glut.h	413;"	d
GLUT_JOYSTICK_BUTTONS	GLUT.windows/glut.h	412;"	d
GLUT_JOYSTICK_BUTTON_A	GLUT.windows/glut.h	667;"	d
GLUT_JOYSTICK_BUTTON_B	GLUT.windows/glut.h	668;"	d
GLUT_JOYSTICK_BUTTON_C	GLUT.windows/glut.h	669;"	d
GLUT_JOYSTICK_BUTTON_D	GLUT.windows/glut.h	670;"	d
GLUT_JOYSTICK_POLL_RATE	GLUT.windows/glut.h	414;"	d
GLUT_KEY_DOWN	GLUT.windows/glut.h	272;"	d
GLUT_KEY_END	GLUT.windows/glut.h	276;"	d
GLUT_KEY_F1	GLUT.windows/glut.h	256;"	d
GLUT_KEY_F10	GLUT.windows/glut.h	265;"	d
GLUT_KEY_F11	GLUT.windows/glut.h	266;"	d
GLUT_KEY_F12	GLUT.windows/glut.h	267;"	d
GLUT_KEY_F2	GLUT.windows/glut.h	257;"	d
GLUT_KEY_F3	GLUT.windows/glut.h	258;"	d
GLUT_KEY_F4	GLUT.windows/glut.h	259;"	d
GLUT_KEY_F5	GLUT.windows/glut.h	260;"	d
GLUT_KEY_F6	GLUT.windows/glut.h	261;"	d
GLUT_KEY_F7	GLUT.windows/glut.h	262;"	d
GLUT_KEY_F8	GLUT.windows/glut.h	263;"	d
GLUT_KEY_F9	GLUT.windows/glut.h	264;"	d
GLUT_KEY_HOME	GLUT.windows/glut.h	275;"	d
GLUT_KEY_INSERT	GLUT.windows/glut.h	277;"	d
GLUT_KEY_LEFT	GLUT.windows/glut.h	269;"	d
GLUT_KEY_PAGE_DOWN	GLUT.windows/glut.h	274;"	d
GLUT_KEY_PAGE_UP	GLUT.windows/glut.h	273;"	d
GLUT_KEY_REPEAT_DEFAULT	GLUT.windows/glut.h	664;"	d
GLUT_KEY_REPEAT_OFF	GLUT.windows/glut.h	662;"	d
GLUT_KEY_REPEAT_ON	GLUT.windows/glut.h	663;"	d
GLUT_KEY_RIGHT	GLUT.windows/glut.h	271;"	d
GLUT_KEY_UP	GLUT.windows/glut.h	270;"	d
GLUT_LAYER_IN_USE	GLUT.windows/glut.h	420;"	d
GLUT_LEFT	GLUT.windows/glut.h	281;"	d
GLUT_LEFT_BUTTON	GLUT.windows/glut.h	246;"	d
GLUT_LUMINANCE	GLUT.windows/glut.h	242;"	d
GLUT_MENU_IN_USE	GLUT.windows/glut.h	286;"	d
GLUT_MENU_NOT_IN_USE	GLUT.windows/glut.h	285;"	d
GLUT_MENU_NUM_ITEMS	GLUT.windows/glut.h	380;"	d
GLUT_MIDDLE_BUTTON	GLUT.windows/glut.h	247;"	d
GLUT_MULTISAMPLE	GLUT.windows/glut.h	238;"	d
GLUT_NORMAL	GLUT.windows/glut.h	441;"	d
GLUT_NORMAL_DAMAGED	GLUT.windows/glut.h	423;"	d
GLUT_NOT_VISIBLE	GLUT.windows/glut.h	289;"	d
GLUT_NUM_BUTTON_BOX_BUTTONS	GLUT.windows/glut.h	403;"	d
GLUT_NUM_DIALS	GLUT.windows/glut.h	404;"	d
GLUT_NUM_MOUSE_BUTTONS	GLUT.windows/glut.h	401;"	d
GLUT_NUM_SPACEBALL_BUTTONS	GLUT.windows/glut.h	402;"	d
GLUT_NUM_TABLET_BUTTONS	GLUT.windows/glut.h	405;"	d
GLUT_OVERLAY	GLUT.windows/glut.h	442;"	d
GLUT_OVERLAY_DAMAGED	GLUT.windows/glut.h	424;"	d
GLUT_OVERLAY_POSSIBLE	GLUT.windows/glut.h	419;"	d
GLUT_OWNS_JOYSTICK	GLUT.windows/glut.h	411;"	d
GLUT_PARTIALLY_RETAINED	GLUT.windows/glut.h	295;"	d
GLUT_RED	GLUT.windows/glut.h	299;"	d
GLUT_RGB	GLUT.windows/glut.h	228;"	d
GLUT_RGBA	GLUT.windows/glut.h	229;"	d
GLUT_RIGHT_BUTTON	GLUT.windows/glut.h	248;"	d
GLUT_SCREEN_HEIGHT	GLUT.windows/glut.h	377;"	d
GLUT_SCREEN_HEIGHT_MM	GLUT.windows/glut.h	379;"	d
GLUT_SCREEN_WIDTH	GLUT.windows/glut.h	376;"	d
GLUT_SCREEN_WIDTH_MM	GLUT.windows/glut.h	378;"	d
GLUT_SINGLE	GLUT.windows/glut.h	231;"	d
GLUT_STENCIL	GLUT.windows/glut.h	236;"	d
GLUT_STEREO	GLUT.windows/glut.h	239;"	d
GLUT_STROKE_MONO_ROMAN	GLUT.windows/glut.h	306;"	d
GLUT_STROKE_MONO_ROMAN	GLUT.windows/glut.h	325;"	d
GLUT_STROKE_ROMAN	GLUT.windows/glut.h	305;"	d
GLUT_STROKE_ROMAN	GLUT.windows/glut.h	324;"	d
GLUT_TRANSPARENT_INDEX	GLUT.windows/glut.h	422;"	d
GLUT_UP	GLUT.windows/glut.h	252;"	d
GLUT_VIDEO_RESIZE_HEIGHT	GLUT.windows/glut.h	437;"	d
GLUT_VIDEO_RESIZE_HEIGHT_DELTA	GLUT.windows/glut.h	433;"	d
GLUT_VIDEO_RESIZE_IN_USE	GLUT.windows/glut.h	429;"	d
GLUT_VIDEO_RESIZE_POSSIBLE	GLUT.windows/glut.h	428;"	d
GLUT_VIDEO_RESIZE_WIDTH	GLUT.windows/glut.h	436;"	d
GLUT_VIDEO_RESIZE_WIDTH_DELTA	GLUT.windows/glut.h	432;"	d
GLUT_VIDEO_RESIZE_X	GLUT.windows/glut.h	434;"	d
GLUT_VIDEO_RESIZE_X_DELTA	GLUT.windows/glut.h	430;"	d
GLUT_VIDEO_RESIZE_Y	GLUT.windows/glut.h	435;"	d
GLUT_VIDEO_RESIZE_Y_DELTA	GLUT.windows/glut.h	431;"	d
GLUT_VISIBLE	GLUT.windows/glut.h	290;"	d
GLUT_WINDOW_ACCUM_ALPHA_SIZE	GLUT.windows/glut.h	363;"	d
GLUT_WINDOW_ACCUM_BLUE_SIZE	GLUT.windows/glut.h	362;"	d
GLUT_WINDOW_ACCUM_GREEN_SIZE	GLUT.windows/glut.h	361;"	d
GLUT_WINDOW_ACCUM_RED_SIZE	GLUT.windows/glut.h	360;"	d
GLUT_WINDOW_ALPHA_SIZE	GLUT.windows/glut.h	359;"	d
GLUT_WINDOW_BLUE_SIZE	GLUT.windows/glut.h	358;"	d
GLUT_WINDOW_BUFFER_SIZE	GLUT.windows/glut.h	353;"	d
GLUT_WINDOW_COLORMAP_SIZE	GLUT.windows/glut.h	368;"	d
GLUT_WINDOW_CURSOR	GLUT.windows/glut.h	374;"	d
GLUT_WINDOW_DEPTH_SIZE	GLUT.windows/glut.h	355;"	d
GLUT_WINDOW_DOUBLEBUFFER	GLUT.windows/glut.h	364;"	d
GLUT_WINDOW_FORMAT_ID	GLUT.windows/glut.h	391;"	d
GLUT_WINDOW_GREEN_SIZE	GLUT.windows/glut.h	357;"	d
GLUT_WINDOW_HEIGHT	GLUT.windows/glut.h	352;"	d
GLUT_WINDOW_NUM_CHILDREN	GLUT.windows/glut.h	367;"	d
GLUT_WINDOW_NUM_SAMPLES	GLUT.windows/glut.h	370;"	d
GLUT_WINDOW_PARENT	GLUT.windows/glut.h	366;"	d
GLUT_WINDOW_RED_SIZE	GLUT.windows/glut.h	356;"	d
GLUT_WINDOW_RGBA	GLUT.windows/glut.h	365;"	d
GLUT_WINDOW_STENCIL_SIZE	GLUT.windows/glut.h	354;"	d
GLUT_WINDOW_STEREO	GLUT.windows/glut.h	371;"	d
GLUT_WINDOW_WIDTH	GLUT.windows/glut.h	351;"	d
GLUT_WINDOW_X	GLUT.windows/glut.h	349;"	d
GLUT_WINDOW_Y	GLUT.windows/glut.h	350;"	d
GLUT_WINGDIAPI_DEFINED	GLUT.windows/glut.h	44;"	d
GLUT_WINGDIAPI_DEFINED	GLUT.windows/glut.h	703;"	d
GLUT_XLIB_IMPLEMENTATION	GLUT.windows/glut.h	224;"	d
GLUTbutton	minecraft.cpp	/^static int GLUTbutton[3] = { 0, 0, 0 };$/;"	v	file:
GLUTmodifiers	minecraft.cpp	/^static int GLUTmodifiers = 0;$/;"	v	file:
GLUTmouse	minecraft.cpp	/^static int GLUTmouse[2] = { 0, 0 };$/;"	v	file:
GLUTwindow	minecraft.cpp	/^static int GLUTwindow = 0;$/;"	v	file:
GLUTwindow_height	minecraft.cpp	/^static int GLUTwindow_height = 512;$/;"	v	file:
GLUTwindow_width	minecraft.cpp	/^static int GLUTwindow_width = 512;$/;"	v	file:
GRAYSCALE	jpeg/rdrle.c	/^  { GRAYSCALE, MAPPEDGRAY, PSEUDOCOLOR, TRUECOLOR, DIRECTCOLOR } rle_kind;$/;"	e	enum:__anon37	file:
G_CB_OFF	jpeg/jccolor.c	73;"	d	file:
G_CR_OFF	jpeg/jccolor.c	76;"	d	file:
G_SCALE	jpeg/jquant2.c	74;"	d	file:
G_Y_OFF	jpeg/jccolor.c	70;"	d	file:
Green	R2/R2Pixel.h	/^Green(void) const$/;"	f	class:R2Pixel
HAVE_CONST	jpeg/ckconfig.c	181;"	d	file:
HAVE_ISASCII	jpeg/ansi2knr.c	294;"	d	file:
HAVE_ISASCII	jpeg/ansi2knr.c	295;"	d	file:
HAVE_PROTOTYPES	jpeg/ckconfig.c	100;"	d	file:
HAVE_PROTOTYPES	jpeg/jconfig.h	5;"	d
HAVE_STDDEF_H	jpeg/ckconfig.c	35;"	d	file:
HAVE_STDDEF_H	jpeg/jconfig.h	11;"	d
HAVE_STDLIB_H	jpeg/ckconfig.c	40;"	d	file:
HAVE_STDLIB_H	jpeg/jconfig.h	12;"	d
HAVE_UNSIGNED_CHAR	jpeg/ckconfig.c	128;"	d	file:
HAVE_UNSIGNED_CHAR	jpeg/jconfig.h	6;"	d
HAVE_UNSIGNED_SHORT	jpeg/ckconfig.c	140;"	d	file:
HAVE_UNSIGNED_SHORT	jpeg/jconfig.h	7;"	d
HAVE_VOID	jpeg/ckconfig.c	151;"	d	file:
HIBYTE	jpeg/jmemdos.c	486;"	d	file:
HIST_C0_BITS	jpeg/jquant2.c	132;"	d	file:
HIST_C0_ELEMS	jpeg/jquant2.c	137;"	d	file:
HIST_C1_BITS	jpeg/jquant2.c	133;"	d	file:
HIST_C1_ELEMS	jpeg/jquant2.c	138;"	d	file:
HIST_C2_BITS	jpeg/jquant2.c	134;"	d	file:
HIST_C2_ELEMS	jpeg/jquant2.c	139;"	d	file:
HUFF_DECODE	jpeg/jdhuff.h	176;"	d
HUFF_EXTEND	jpeg/jdhuff.c	443;"	d	file:
HUFF_EXTEND	jpeg/jdhuff.c	447;"	d	file:
HUFF_EXTEND	jpeg/jdphuff.c	203;"	d	file:
HUFF_EXTEND	jpeg/jdphuff.c	207;"	d	file:
HUFF_LOOKAHEAD	jpeg/jdhuff.h	24;"	d
HasMirror	R3/R3Matrix.cpp	/^HasMirror(void) const$/;"	f	class:R3Matrix
HasRotation	R3/R3Matrix.cpp	/^HasRotation(void) const$/;"	f	class:R3Matrix
HasScale	R3/R3Matrix.cpp	/^HasScale(void) const$/;"	f	class:R3Matrix
HasTranslation	R3/R3Matrix.cpp	/^HasTranslation(void) const$/;"	f	class:R3Matrix
Height	R2/R2Image.h	/^Height(void) const$/;"	f	class:R2Image
Height	R3/R3Cone.h	/^Height(void) const$/;"	f	class:R3Cone
Height	R3/R3Cylinder.h	/^Height(void) const$/;"	f	class:R3Cylinder
IDCT_SCALING_SUPPORTED	jpeg/jmorecfg.h	290;"	d
IDCT_range_limit	jpeg/jdct.h	76;"	d
IDESCALE	jpeg/jidctfst.c	157;"	d	file:
IFAST_MULT_TYPE	jpeg/jdct.h	/^typedef INT32 IFAST_MULT_TYPE;	\/* need 32 bits for scaled quantizers *\/$/;"	t
IFAST_MULT_TYPE	jpeg/jdct.h	/^typedef MULTIPLIER IFAST_MULT_TYPE; \/* 16 bits is OK, use short if faster *\/$/;"	t
IFAST_SCALE_BITS	jpeg/jdct.h	59;"	d
IFAST_SCALE_BITS	jpeg/jdct.h	62;"	d
IMAGE_FORMATS	jpeg/djpeg.c	/^} IMAGE_FORMATS;$/;"	t	typeref:enum:__anon68	file:
INCLUDES	jpeg/Makefile	/^INCLUDES= jchuff.h jdhuff.h jdct.h jerror.h jinclude.h jmemsys.h jmorecfg.h \\$/;"	m
INCOMPLETE_TYPES_BROKEN	jpeg/ckconfig.c	202;"	d	file:
INCOMPLETE_TYPES_BROKEN	jpeg/jconfig.h	17;"	d
INCS	R3/Makefile	/^INCS=$(HSRCS) $(CCSRCS:.cpp=.h)$/;"	m
INLINE	jpeg/jmorecfg.h	329;"	d
INLINE	jpeg/jmorecfg.h	332;"	d
INPUT_2BYTES	jpeg/jdmarker.c	156;"	d	file:
INPUT_BUF_SIZE	jpeg/jdatasrc.c	35;"	d	file:
INPUT_BYTE	jpeg/jdmarker.c	148;"	d	file:
INPUT_RELOAD	jpeg/jdmarker.c	130;"	d	file:
INPUT_SMOOTHING_SUPPORTED	jpeg/jmorecfg.h	281;"	d
INPUT_SYNC	jpeg/jdmarker.c	125;"	d	file:
INPUT_VARS	jpeg/jdmarker.c	119;"	d	file:
INSTALL	jpeg/Makefile	/^INSTALL= \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	jpeg/Makefile	/^INSTALL_DATA= ${INSTALL} -m 644$/;"	m
INSTALL_LIB	jpeg/Makefile	/^INSTALL_LIB= ${INSTALL} -m 644$/;"	m
INSTALL_PROGRAM	jpeg/Makefile	/^INSTALL_PROGRAM= ${INSTALL}$/;"	m
INT16	jpeg/jmorecfg.h	/^typedef short INT16;$/;"	t
INT32	jpeg/jmorecfg.h	/^typedef long INT32;$/;"	t
IRIGHT_SHIFT	jpeg/jcphuff.c	79;"	d	file:
IRIGHT_SHIFT	jpeg/jcphuff.c	85;"	d	file:
IRIGHT_SHIFT	jpeg/jidctfst.c	147;"	d	file:
ISHIFT_TEMPS	jpeg/jcphuff.c	78;"	d	file:
ISHIFT_TEMPS	jpeg/jcphuff.c	84;"	d	file:
ISHIFT_TEMPS	jpeg/jidctfst.c	141;"	d	file:
ISLOW_MULT_TYPE	jpeg/jdct.h	/^typedef MULTIPLIER ISLOW_MULT_TYPE; \/* short or int, whichever is faster *\/$/;"	t
Inflate	R3/R3Mesh.cpp	/^Inflate(double factor)$/;"	f	class:R3Mesh
Intersect	R3/R3Box.cpp	/^Intersect (const R3Box& box) $/;"	f	class:R3Box
Intersect	R3/R3Mesh.cpp	/^Intersect(const R3Mesh& mesh)$/;"	f	class:R3Mesh
IntersectBox	raytrace.cpp	/^R3Intersection IntersectBox(R3Ray ray, R3Box box)$/;"	f
IntersectCap	raytrace.cpp	/^static double IntersectCap(R3Ray ray, R3Plane plane, double r2)$/;"	f	file:
IntersectCone	raytrace.cpp	/^R3Intersection IntersectCone(R3Ray ray, R3Cone cone)$/;"	f
IntersectCylinder	raytrace.cpp	/^R3Intersection IntersectCylinder(R3Ray ray, R3Cylinder cylinder)$/;"	f
IntersectMesh	raytrace.cpp	/^R3Intersection IntersectMesh(R3Ray ray, R3Mesh mesh)$/;"	f
IntersectScene	raytrace.cpp	/^R3Intersection IntersectScene(R3Ray ray, R3Scene *scene, R3Node *node)$/;"	f
IntersectShape	raytrace.cpp	/^static inline R3Intersection IntersectShape(R3Ray ray, R3Shape shape)$/;"	f	file:
IntersectSphere	raytrace.cpp	/^R3Intersection IntersectSphere(R3Ray ray, R3Sphere sphere)$/;"	f
IntersectTri	raytrace.cpp	/^static R3Intersection IntersectTri(R3Ray ray, R3MeshFace face)$/;"	f	file:
Inverse	R3/R3Matrix.cpp	/^Inverse(void) const$/;"	f	class:R3Matrix
InverseTransform	R3/R3Line.cpp	/^InverseTransform (const R3Matrix& matrix)$/;"	f	class:R3Line
InverseTransform	R3/R3Plane.cpp	/^InverseTransform (const R3Matrix& matrix)$/;"	f	class:R3Plane
InverseTransform	R3/R3Point.cpp	/^InverseTransform(const R3Matrix& matrix)$/;"	f	class:R3Point
InverseTransform	R3/R3Ray.cpp	/^InverseTransform (const R3Matrix& matrix)$/;"	f	class:R3Ray
InverseTransform	R3/R3Segment.cpp	/^InverseTransform (const R3Matrix& matrix)$/;"	f	class:R3Segment
InverseTransform	R3/R3Vector.cpp	/^InverseTransform(const R3Matrix& matrix)$/;"	f	class:R3Vector
Invert	R3/R3Matrix.cpp	/^Invert(void)$/;"	f	class:R3Matrix
IsBlack	R2/R2Pixel.h	/^IsBlack (void) const$/;"	f	class:R2Pixel
IsEmpty	R3/R3Box.h	/^IsEmpty (void) const$/;"	f	class:R3Box
IsEmpty	R3/R3Sphere.h	/^IsEmpty(void) const$/;"	f	class:R3Sphere
IsIdentity	R3/R3Matrix.cpp	/^IsIdentity (void) const$/;"	f	class:R3Matrix
IsIsotropic	R3/R3Matrix.cpp	/^IsIsotropic(void) const$/;"	f	class:R3Matrix
IsNormalized	R2/R2Vector.h	/^IsNormalized (void) const$/;"	f	class:R2Vector
IsNormalized	R3/R3Vector.h	/^IsNormalized (void) const$/;"	f	class:R3Vector
IsPoint	R2/R2Segment.h	/^IsPoint(void) const$/;"	f	class:R2Segment
IsPoint	R3/R3Segment.cpp	/^IsPoint(void) const$/;"	f	class:R3Segment
IsWhite	R2/R2Pixel.h	/^IsWhite (void) const$/;"	f	class:R2Pixel
IsZero	R2/R2Point.h	/^IsZero(void) const$/;"	f	class:R2Point
IsZero	R2/R2Vector.h	/^IsZero (void) const$/;"	f	class:R2Vector
IsZero	R3/R3Line.h	/^IsZero (void) const$/;"	f	class:R3Line
IsZero	R3/R3Matrix.cpp	/^IsZero (void) const$/;"	f	class:R3Matrix
IsZero	R3/R3Plane.h	/^IsZero (void) const$/;"	f	class:R3Plane
IsZero	R3/R3Point.h	/^IsZero(void) const$/;"	f	class:R3Point
IsZero	R3/R3Ray.h	/^IsZero (void) const$/;"	f	class:R3Ray
IsZero	R3/R3Vector.h	/^IsZero (void) const$/;"	f	class:R3Vector
JBLOCK	jpeg/jpeglib.h	/^typedef JCOEF JBLOCK[DCTSIZE2];	\/* one block of coefficients *\/$/;"	t
JBLOCKARRAY	jpeg/jpeglib.h	/^typedef JBLOCKROW *JBLOCKARRAY;		\/* a 2-D array of coefficient blocks *\/$/;"	t
JBLOCKIMAGE	jpeg/jpeglib.h	/^typedef JBLOCKARRAY *JBLOCKIMAGE;	\/* a 3-D array of coefficient blocks *\/$/;"	t
JBLOCKROW	jpeg/jpeglib.h	/^typedef JBLOCK FAR *JBLOCKROW;	\/* pointer to one row of coefficient blocks *\/$/;"	t
JBUF_CRANK_DEST	jpeg/jpegint.h	/^	JBUF_CRANK_DEST,	\/* Run dest subobject only, using saved data *\/$/;"	e	enum:__anon34
JBUF_PASS_THRU	jpeg/jpegint.h	/^	JBUF_PASS_THRU,		\/* Plain stripwise operation *\/$/;"	e	enum:__anon34
JBUF_SAVE_AND_PASS	jpeg/jpegint.h	/^	JBUF_SAVE_AND_PASS	\/* Run both subobjects, save output *\/$/;"	e	enum:__anon34
JBUF_SAVE_SOURCE	jpeg/jpegint.h	/^	JBUF_SAVE_SOURCE,	\/* Run source subobject only, save output *\/$/;"	e	enum:__anon34
JCOEF	jpeg/jmorecfg.h	/^typedef short JCOEF;$/;"	t
JCOEFPTR	jpeg/jpeglib.h	/^typedef JCOEF FAR *JCOEFPTR;	\/* useful in a couple of places *\/$/;"	t
JCONFIG_INCLUDED	jpeg/jinclude.h	21;"	d
JCOPYOPT_ALL	jpeg/transupp.h	/^	JCOPYOPT_ALL		\/* copy all optional markers *\/$/;"	e	enum:__anon45
JCOPYOPT_COMMENTS	jpeg/transupp.h	/^	JCOPYOPT_COMMENTS,	\/* copy only comment (COM) markers *\/$/;"	e	enum:__anon45
JCOPYOPT_DEFAULT	jpeg/transupp.h	127;"	d
JCOPYOPT_NONE	jpeg/transupp.h	/^	JCOPYOPT_NONE,		\/* copy no optional markers *\/$/;"	e	enum:__anon45
JCOPYRIGHT	jpeg/jversion.h	14;"	d
JCOPY_OPTION	jpeg/transupp.h	/^} JCOPY_OPTION;$/;"	t	typeref:enum:__anon45
JCS_CMYK	jpeg/jpeglib.h	/^	JCS_CMYK,		\/* C\/M\/Y\/K *\/$/;"	e	enum:__anon55
JCS_GRAYSCALE	jpeg/jpeglib.h	/^	JCS_GRAYSCALE,		\/* monochrome *\/$/;"	e	enum:__anon55
JCS_RGB	jpeg/jpeglib.h	/^	JCS_RGB,		\/* red\/green\/blue *\/$/;"	e	enum:__anon55
JCS_UNKNOWN	jpeg/jpeglib.h	/^	JCS_UNKNOWN,		\/* error\/unspecified *\/$/;"	e	enum:__anon55
JCS_YCCK	jpeg/jpeglib.h	/^	JCS_YCCK		\/* Y\/Cb\/Cr\/K *\/$/;"	e	enum:__anon55
JCS_YCbCr	jpeg/jpeglib.h	/^	JCS_YCbCr,		\/* Y\/Cb\/Cr (also known as YUV) *\/$/;"	e	enum:__anon55
JDCT_DEFAULT	jpeg/jpeglib.h	224;"	d
JDCT_FASTEST	jpeg/jpeglib.h	227;"	d
JDCT_FLOAT	jpeg/jpeglib.h	/^	JDCT_FLOAT		\/* floating-point: accurate, fast on fast HW *\/$/;"	e	enum:__anon56
JDCT_IFAST	jpeg/jpeglib.h	/^	JDCT_IFAST,		\/* faster, less accurate integer method *\/$/;"	e	enum:__anon56
JDCT_ISLOW	jpeg/jpeglib.h	/^	JDCT_ISLOW,		\/* slow but accurate integer algorithm *\/$/;"	e	enum:__anon56
JDIMENSION	jpeg/jmorecfg.h	/^typedef unsigned int JDIMENSION;$/;"	t
JDITHER_FS	jpeg/jpeglib.h	/^	JDITHER_FS		\/* Floyd-Steinberg error diffusion dither *\/$/;"	e	enum:__anon57
JDITHER_NONE	jpeg/jpeglib.h	/^	JDITHER_NONE,		\/* no dithering *\/$/;"	e	enum:__anon57
JDITHER_ORDERED	jpeg/jpeglib.h	/^	JDITHER_ORDERED,	\/* simple ordered dither *\/$/;"	e	enum:__anon57
JERROR_H	jpeg/jerror.h	199;"	d
JFIF_major_version	jpeg/jpeglib.h	/^  UINT8 JFIF_major_version;	\/* JFIF version number *\/$/;"	m	struct:jpeg_decompress_struct
JFIF_major_version	jpeg/jpeglib.h	/^  UINT8 JFIF_major_version;	\/* What to write for the JFIF version number *\/$/;"	m	struct:jpeg_compress_struct
JFIF_minor_version	jpeg/jpeglib.h	/^  UINT8 JFIF_minor_version;$/;"	m	struct:jpeg_compress_struct
JFIF_minor_version	jpeg/jpeglib.h	/^  UINT8 JFIF_minor_version;$/;"	m	struct:jpeg_decompress_struct
JFREAD	jpeg/jinclude.h	88;"	d
JFWRITE	jpeg/jinclude.h	90;"	d
JHUFF_TBL	jpeg/jpeglib.h	/^} JHUFF_TBL;$/;"	t	typeref:struct:__anon52
JMAKE_ENUM_LIST	jpeg/cderror.h	128;"	d
JMAKE_ENUM_LIST	jpeg/cderror.h	24;"	d
JMAKE_ENUM_LIST	jpeg/jerror.h	191;"	d
JMAKE_ENUM_LIST	jpeg/jerror.h	24;"	d
JMEMDOSA_TXT	jpeg/jmemdosa.asm	/^JMEMDOSA_TXT	segment byte public 'CODE'$/;"	l
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_BAD_CMAP_FILE,$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_BMP_BADCMAP, "Unsupported BMP colormap format")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_BMP_BADDEPTH, "Only 8- and 24-bit BMP files are supported")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_BMP_BADHEADER, "Invalid BMP file: bad header length")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_BMP_BADPLANES, "Invalid BMP file: biPlanes not equal to 1")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_BMP_COLORSPACE, "BMP output must be grayscale or RGB")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_BMP_COMPRESSED, "Sorry, compressed BMPs not yet supported")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_BMP_NOT, "Not a BMP file - does not start with BM")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_GIF_BUG, "GIF output got confused")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_GIF_CODESIZE, "Bogus GIF codesize %d")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_GIF_COLORSPACE, "GIF output must be grayscale or RGB")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_GIF_IMAGENOTFOUND, "Too few images in GIF file")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_GIF_NOT, "Not a GIF file")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_PPM_COLORSPACE, "PPM output must be grayscale or RGB")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_PPM_NONNUMERIC, "Nonnumeric data in PPM file")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_PPM_NOT, "Not a PPM\/PGM file")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_RLE_BADERROR, "Bogus error code from RLE library")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_RLE_COLORSPACE, "RLE output must be grayscale or RGB")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_RLE_DIMENSIONS, "Image dimensions (%ux%u) too large for RLE")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_RLE_EMPTY, "Empty RLE file")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_RLE_EOF, "Premature EOF in RLE header")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_RLE_MEM, "Insufficient memory for RLE header")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_RLE_NOT, "Not an RLE file")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_RLE_TOOMANYCHANNELS, "Cannot handle %d output channels for RLE")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_RLE_UNSUPPORTED, "Cannot handle this RLE setup")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_TGA_BADCMAP, "Unsupported Targa colormap format")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_TGA_BADPARMS, "Invalid or unsupported Targa file")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_TGA_COLORSPACE, "Targa output must be grayscale or RGB")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_TOO_MANY_COLORS,$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_UNGETC_FAILED, "ungetc failed")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_UNKNOWN_FORMAT,$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JERR_UNSUPPORTED_FORMAT, "Unsupported output file format")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JMSG_FIRSTADDONCODE=1000, NULL) \/* Must be first entry! *\/$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_BMP, "%ux%u 24-bit BMP image")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_BMP_MAPPED, "%ux%u 8-bit colormapped BMP image")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_BMP_OS2, "%ux%u 24-bit OS2 BMP image")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_BMP_OS2_MAPPED, "%ux%u 8-bit colormapped OS2 BMP image")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_GIF, "%ux%ux%d GIF image")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_GIF_BADVERSION,$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_GIF_EXTENSION, "Ignoring GIF extension block of type 0x%02x")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_GIF_NONSQUARE, "Caution: nonsquare pixels in input")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_PGM, "%ux%u PGM image")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_PGM_TEXT, "%ux%u text PGM image")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_PPM, "%ux%u PPM image")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_PPM_TEXT, "%ux%u text PPM image")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_RLE, "%ux%u full-color RLE file")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_RLE_FULLMAP, "%ux%u full-color RLE file with map of length %d")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_RLE_GRAY, "%ux%u grayscale RLE file")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_RLE_MAPGRAY, "%ux%u grayscale RLE file with map of length %d")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_RLE_MAPPED, "%ux%u colormapped RLE file with map of length %d")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_TGA, "%ux%u RGB Targa image")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_TGA_GRAY, "%ux%u grayscale Targa image")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JTRC_TGA_MAPPED, "%ux%u colormapped Targa image")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JWRN_GIF_BADDATA, "Corrupt data in GIF file")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JWRN_GIF_CHAR, "Bogus char 0x%02x in GIF file, ignoring")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JWRN_GIF_ENDCODE, "Premature end of GIF image")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	/^JMESSAGE(JWRN_GIF_NOMOREDATA, "Ran out of GIF bits")$/;"	e	enum:__anon49
JMESSAGE	jpeg/cderror.h	132;"	d
JMESSAGE	jpeg/cderror.h	27;"	d
JMESSAGE	jpeg/cderror.h	35;"	d
JMESSAGE	jpeg/cjpeg.c	42;"	d	file:
JMESSAGE	jpeg/djpeg.c	44;"	d	file:
JMESSAGE	jpeg/jerror.c	48;"	d	file:
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_ARITH_NOTIMPL,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_ALIGN_TYPE, "ALIGN_TYPE is wrong, please fix")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_ALLOC_CHUNK, "MAX_ALLOC_CHUNK is wrong, please fix")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_BUFFER_MODE, "Bogus buffer control mode")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_COMPONENT_ID, "Invalid component ID %d in SOS")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_DCTSIZE, "IDCT output block size %d not supported")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_DCT_COEF, "DCT coefficient out of range")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_HUFF_TABLE, "Bogus Huffman table definition")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_IN_COLORSPACE, "Bogus input colorspace")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_J_COLORSPACE, "Bogus JPEG colorspace")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_LENGTH, "Bogus marker length")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_LIB_VERSION,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_MCU_SIZE, "Sampling factors too large for interleaved scan")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_POOL_ID, "Invalid memory pool code %d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_PRECISION, "Unsupported JPEG data precision %d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_PROGRESSION,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_PROG_SCRIPT,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_SAMPLING, "Bogus sampling factors")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_SCAN_SCRIPT, "Invalid scan script at entry %d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_STATE, "Improper call to JPEG library in state %d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_STRUCT_SIZE,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BAD_VIRTUAL_ACCESS, "Bogus virtual array access")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_BUFFER_SIZE, "Buffer passed to JPEG library is too small")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_CANT_SUSPEND, "Suspension not allowed here")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_CCIR601_NOTIMPL, "CCIR601 sampling not implemented yet")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_COMPONENT_COUNT, "Too many color components: %d, max %d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_CONVERSION_NOTIMPL, "Unsupported color conversion request")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_DAC_INDEX, "Bogus DAC index %d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_DAC_VALUE, "Bogus DAC value 0x%x")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_DHT_INDEX, "Bogus DHT index %d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_DQT_INDEX, "Bogus DQT index %d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_EMPTY_IMAGE, "Empty JPEG image (DNL not supported)")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_EMS_READ, "Read from EMS failed")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_EMS_WRITE, "Write to EMS failed")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_EOI_EXPECTED, "Didn't expect more than one scan")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_FILE_READ, "Input file read error")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_FILE_WRITE, "Output file write error --- out of disk space?")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_FRACT_SAMPLE_NOTIMPL, "Fractional sampling not implemented yet")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_HUFF_CLEN_OVERFLOW, "Huffman code size table overflow")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_HUFF_MISSING_CODE, "Missing Huffman code table entry")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_IMAGE_TOO_BIG, "Maximum supported image dimension is %u pixels")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_INPUT_EMPTY, "Empty input file")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_INPUT_EOF, "Premature end of input file")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_MISMATCHED_QUANT_TABLE,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_MISSING_DATA, "Scan script does not transmit all data")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_MODE_CHANGE, "Invalid color quantization mode change")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_NOTIMPL, "Not implemented yet")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_NOT_COMPILED, "Requested feature was omitted at compile time")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_NO_BACKING_STORE, "Backing store not supported")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_NO_HUFF_TABLE, "Huffman table 0x%02x was not defined")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_NO_IMAGE, "JPEG datastream contains no image")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_NO_QUANT_TABLE, "Quantization table 0x%02x was not defined")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_NO_SOI, "Not a JPEG file: starts with 0x%02x 0x%02x")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_OUT_OF_MEMORY, "Insufficient memory (case %d)")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_QUANT_COMPONENTS,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_QUANT_FEW_COLORS, "Cannot quantize to fewer than %d colors")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_QUANT_MANY_COLORS, "Cannot quantize to more than %d colors")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_SOF_DUPLICATE, "Invalid JPEG file structure: two SOF markers")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_SOF_NO_SOS, "Invalid JPEG file structure: missing SOS marker")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_SOF_UNSUPPORTED, "Unsupported JPEG process: SOF type 0x%02x")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_SOI_DUPLICATE, "Invalid JPEG file structure: two SOI markers")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_SOS_NO_SOF, "Invalid JPEG file structure: SOS before SOF")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_TFILE_CREATE, "Failed to create temporary file %s")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_TFILE_READ, "Read failed on temporary file")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_TFILE_SEEK, "Seek failed on temporary file")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_TFILE_WRITE,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_TOO_LITTLE_DATA, "Application transferred too few scanlines")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_UNKNOWN_MARKER, "Unsupported marker type 0x%02x")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_VIRTUAL_BUG, "Virtual array controller messed up")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_WIDTH_OVERFLOW, "Image too wide for this implementation")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_XMS_READ, "Read from XMS failed")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JERR_XMS_WRITE, "Write to XMS failed")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JMSG_COPYRIGHT, JCOPYRIGHT)$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JMSG_NOMESSAGE, "Bogus message code %d") \/* Must be first entry! *\/$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JMSG_VERSION, JVERSION)$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_16BIT_TABLES,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_ADOBE,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_APP0, "Unknown APP0 marker (not JFIF), length %u")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_APP14, "Unknown APP14 marker (not Adobe), length %u")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_DAC, "Define Arithmetic Table 0x%02x: 0x%02x")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_DHT, "Define Huffman Table 0x%02x")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_DQT, "Define Quantization Table %d  precision %d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_DRI, "Define Restart Interval %u")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_EMS_CLOSE, "Freed EMS handle %u")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_EMS_OPEN, "Obtained EMS handle %u")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_EOI, "End Of Image")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_HUFFBITS, "        %3d %3d %3d %3d %3d %3d %3d %3d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_JFIF, "JFIF APP0 marker: version %d.%02d, density %dx%d  %d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_JFIF_BADTHUMBNAILSIZE,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_JFIF_EXTENSION,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_JFIF_THUMBNAIL, "    with %d x %d thumbnail image")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_MISC_MARKER, "Miscellaneous marker 0x%02x, length %u")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_PARMLESS_MARKER, "Unexpected marker 0x%02x")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_QUANTVALS, "        %4u %4u %4u %4u %4u %4u %4u %4u")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_QUANT_3_NCOLORS, "Quantizing to %d = %d*%d*%d colors")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_QUANT_NCOLORS, "Quantizing to %d colors")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_QUANT_SELECTED, "Selected %d colors for quantization")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_RECOVERY_ACTION, "At marker 0x%02x, recovery action %d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_RST, "RST%d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_SMOOTH_NOTIMPL,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_SOF, "Start Of Frame 0x%02x: width=%u, height=%u, components=%d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_SOF_COMPONENT, "    Component %d: %dhx%dv q=%d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_SOI, "Start of Image")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_SOS, "Start Of Scan: %d components")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_SOS_COMPONENT, "    Component %d: dc=%d ac=%d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_SOS_PARAMS, "  Ss=%d, Se=%d, Ah=%d, Al=%d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_TFILE_CLOSE, "Closed temporary file %s")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_TFILE_OPEN, "Opened temporary file %s")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_THUMB_JPEG,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_THUMB_PALETTE,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_THUMB_RGB,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_UNKNOWN_IDS,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_XMS_CLOSE, "Freed XMS handle %u")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JTRC_XMS_OPEN, "Obtained XMS handle %u")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JWRN_ADOBE_XFORM, "Unknown Adobe color transform code %d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JWRN_BOGUS_PROGRESSION,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JWRN_EXTRANEOUS_DATA,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JWRN_HIT_MARKER, "Corrupt JPEG data: premature end of data segment")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JWRN_HUFF_BAD_CODE, "Corrupt JPEG data: bad Huffman code")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JWRN_JFIF_MAJOR, "Warning: unknown JFIF revision number %d.%02d")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JWRN_JPEG_EOF, "Premature end of JPEG file")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JWRN_MUST_RESYNC,$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JWRN_NOT_SEQUENTIAL, "Invalid SOS parameters for sequential JPEG")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	/^JMESSAGE(JWRN_TOO_MUCH_DATA, "Application transferred too many scanlines")$/;"	e	enum:__anon65
JMESSAGE	jpeg/jerror.h	195;"	d
JMESSAGE	jpeg/jerror.h	27;"	d
JMESSAGE	jpeg/jerror.h	35;"	d
JMETHOD	jpeg/jcsample.c	/^typedef JMETHOD(void, downsample1_ptr,$/;"	t	file:
JMETHOD	jpeg/jdct.h	/^typedef JMETHOD(void, float_DCT_method_ptr, (FAST_FLOAT * data));$/;"	t
JMETHOD	jpeg/jdct.h	/^typedef JMETHOD(void, forward_DCT_method_ptr, (DCTELEM * data));$/;"	t
JMETHOD	jpeg/jdsample.c	/^typedef JMETHOD(void, upsample1_ptr,$/;"	t	file:
JMETHOD	jpeg/jmorecfg.h	200;"	d
JMETHOD	jpeg/jmorecfg.h	202;"	d
JMETHOD	jpeg/jpegint.h	/^typedef JMETHOD(void, inverse_DCT_method_ptr,$/;"	t
JMETHOD	jpeg/jpeglib.h	/^typedef JMETHOD(jboolean, jpeg_marker_parser_method, (j_decompress_ptr cinfo));$/;"	t
JMSG_LASTADDONCODE	jpeg/cderror.h	/^  JMSG_LASTADDONCODE$/;"	e	enum:__anon49
JMSG_LASTMSGCODE	jpeg/jerror.h	/^  JMSG_LASTMSGCODE$/;"	e	enum:__anon65
JMSG_LENGTH_MAX	jpeg/jpeglib.h	652;"	d
JMSG_STR_PARM_MAX	jpeg/jpeglib.h	660;"	d
JOCTET	jpeg/jmorecfg.h	/^typedef char JOCTET;$/;"	t
JOCTET	jpeg/jmorecfg.h	/^typedef unsigned char JOCTET;$/;"	t
JPEGLIB_H	jpeg/jpeglib.h	14;"	d
JPEG_APP0	jpeg/jpeglib.h	1047;"	d
JPEG_CJPEG_DJPEG	jpeg/cdjpeg.h	12;"	d
JPEG_CJPEG_DJPEG	jpeg/rdjpgcom.c	14;"	d	file:
JPEG_CJPEG_DJPEG	jpeg/wrjpgcom.c	14;"	d	file:
JPEG_COM	jpeg/jpeglib.h	1048;"	d
JPEG_EOI	jpeg/jpeglib.h	1046;"	d
JPEG_HEADER_OK	jpeg/jpeglib.h	966;"	d
JPEG_HEADER_TABLES_ONLY	jpeg/jpeglib.h	967;"	d
JPEG_INTERNALS	jpeg/jcapimin.c	19;"	d	file:
JPEG_INTERNALS	jpeg/jcapistd.c	17;"	d	file:
JPEG_INTERNALS	jpeg/jccoefct.c	13;"	d	file:
JPEG_INTERNALS	jpeg/jccolor.c	11;"	d	file:
JPEG_INTERNALS	jpeg/jcdctmgr.c	14;"	d	file:
JPEG_INTERNALS	jpeg/jchuff.c	17;"	d	file:
JPEG_INTERNALS	jpeg/jcinit.c	18;"	d	file:
JPEG_INTERNALS	jpeg/jcmainct.c	13;"	d	file:
JPEG_INTERNALS	jpeg/jcmarker.c	11;"	d	file:
JPEG_INTERNALS	jpeg/jcmaster.c	14;"	d	file:
JPEG_INTERNALS	jpeg/jcomapi.c	12;"	d	file:
JPEG_INTERNALS	jpeg/jcparam.c	13;"	d	file:
JPEG_INTERNALS	jpeg/jcphuff.c	15;"	d	file:
JPEG_INTERNALS	jpeg/jcprepct.c	17;"	d	file:
JPEG_INTERNALS	jpeg/jcsample.c	48;"	d	file:
JPEG_INTERNALS	jpeg/jctrans.c	13;"	d	file:
JPEG_INTERNALS	jpeg/jdapimin.c	19;"	d	file:
JPEG_INTERNALS	jpeg/jdapistd.c	17;"	d	file:
JPEG_INTERNALS	jpeg/jdcoefct.c	17;"	d	file:
JPEG_INTERNALS	jpeg/jdcolor.c	11;"	d	file:
JPEG_INTERNALS	jpeg/jddctmgr.c	18;"	d	file:
JPEG_INTERNALS	jpeg/jdhuff.c	17;"	d	file:
JPEG_INTERNALS	jpeg/jdinput.c	14;"	d	file:
JPEG_INTERNALS	jpeg/jdmainct.c	16;"	d	file:
JPEG_INTERNALS	jpeg/jdmarker.c	15;"	d	file:
JPEG_INTERNALS	jpeg/jdmaster.c	14;"	d	file:
JPEG_INTERNALS	jpeg/jdmerge.c	35;"	d	file:
JPEG_INTERNALS	jpeg/jdphuff.c	17;"	d	file:
JPEG_INTERNALS	jpeg/jdpostct.c	19;"	d	file:
JPEG_INTERNALS	jpeg/jdsample.c	21;"	d	file:
JPEG_INTERNALS	jpeg/jdtrans.c	13;"	d	file:
JPEG_INTERNALS	jpeg/jfdctflt.c	37;"	d	file:
JPEG_INTERNALS	jpeg/jfdctfst.c	33;"	d	file:
JPEG_INTERNALS	jpeg/jfdctint.c	26;"	d	file:
JPEG_INTERNALS	jpeg/jidctflt.c	39;"	d	file:
JPEG_INTERNALS	jpeg/jidctfst.c	35;"	d	file:
JPEG_INTERNALS	jpeg/jidctint.c	28;"	d	file:
JPEG_INTERNALS	jpeg/jidctred.c	23;"	d	file:
JPEG_INTERNALS	jpeg/jmemansi.c	15;"	d	file:
JPEG_INTERNALS	jpeg/jmemdos.c	42;"	d	file:
JPEG_INTERNALS	jpeg/jmemmac.c	52;"	d	file:
JPEG_INTERNALS	jpeg/jmemmgr.c	27;"	d	file:
JPEG_INTERNALS	jpeg/jmemname.c	15;"	d	file:
JPEG_INTERNALS	jpeg/jmemnobs.c	18;"	d	file:
JPEG_INTERNALS	jpeg/jquant1.c	13;"	d	file:
JPEG_INTERNALS	jpeg/jquant2.c	20;"	d	file:
JPEG_INTERNALS	jpeg/jutils.c	14;"	d	file:
JPEG_INTERNALS	jpeg/transupp.c	18;"	d	file:
JPEG_INTERNAL_OPTIONS	jpeg/cdjpeg.h	13;"	d
JPEG_INTERNAL_OPTIONS	jpeg/jmorecfg.h	245;"	d
JPEG_LIB_VERSION	jpeg/Makefile	/^JPEG_LIB_VERSION = 62$/;"	m
JPEG_LIB_VERSION	jpeg/jpeglib.h	33;"	d
JPEG_MARKER	jpeg/jcmarker.c	/^} JPEG_MARKER;$/;"	t	typeref:enum:__anon5	file:
JPEG_MARKER	jpeg/jdmarker.c	/^} JPEG_MARKER;$/;"	t	typeref:enum:__anon41	file:
JPEG_MAX_DIMENSION	jpeg/jmorecfg.h	173;"	d
JPEG_REACHED_EOI	jpeg/jpeglib.h	997;"	d
JPEG_REACHED_SOS	jpeg/jpeglib.h	996;"	d
JPEG_ROW_COMPLETED	jpeg/jpeglib.h	998;"	d
JPEG_RST0	jpeg/jpeglib.h	1045;"	d
JPEG_SCAN_COMPLETED	jpeg/jpeglib.h	999;"	d
JPEG_SUSPENDED	jpeg/jpeglib.h	965;"	d
JPOOL_IMAGE	jpeg/jpeglib.h	749;"	d
JPOOL_NUMPOOLS	jpeg/jpeglib.h	750;"	d
JPOOL_PERMANENT	jpeg/jpeglib.h	748;"	d
JPP	jpeg/jpeglib.h	818;"	d
JPP	jpeg/jpeglib.h	820;"	d
JQUANT_TBL	jpeg/jpeglib.h	/^} JQUANT_TBL;$/;"	t	typeref:struct:__anon51
JSAMPARRAY	jpeg/jpeglib.h	/^typedef JSAMPROW *JSAMPARRAY;	\/* ptr to some rows (a 2-D sample array) *\/$/;"	t
JSAMPIMAGE	jpeg/jpeglib.h	/^typedef JSAMPARRAY *JSAMPIMAGE;	\/* a 3-D sample array: top index is color *\/$/;"	t
JSAMPLE	jpeg/jmorecfg.h	/^typedef char JSAMPLE;$/;"	t
JSAMPLE	jpeg/jmorecfg.h	/^typedef short JSAMPLE;$/;"	t
JSAMPLE	jpeg/jmorecfg.h	/^typedef unsigned char JSAMPLE;$/;"	t
JSAMPROW	jpeg/jpeglib.h	/^typedef JSAMPLE FAR *JSAMPROW;	\/* ptr to one image row of pixel samples. *\/$/;"	t
JVERSION	jpeg/jversion.h	12;"	d
JXFORM_CODE	jpeg/transupp.h	/^} JXFORM_CODE;$/;"	t	typeref:enum:__anon43
JXFORM_FLIP_H	jpeg/transupp.h	/^	JXFORM_FLIP_H,		\/* horizontal flip *\/$/;"	e	enum:__anon43
JXFORM_FLIP_V	jpeg/transupp.h	/^	JXFORM_FLIP_V,		\/* vertical flip *\/$/;"	e	enum:__anon43
JXFORM_NONE	jpeg/transupp.h	/^	JXFORM_NONE,		\/* no transformation *\/$/;"	e	enum:__anon43
JXFORM_ROT_180	jpeg/transupp.h	/^	JXFORM_ROT_180,		\/* 180-degree rotation *\/$/;"	e	enum:__anon43
JXFORM_ROT_270	jpeg/transupp.h	/^	JXFORM_ROT_270		\/* 270-degree clockwise (or 90 ccw) *\/$/;"	e	enum:__anon43
JXFORM_ROT_90	jpeg/transupp.h	/^	JXFORM_ROT_90,		\/* 90-degree clockwise rotation *\/$/;"	e	enum:__anon43
JXFORM_TRANSPOSE	jpeg/transupp.h	/^	JXFORM_TRANSPOSE,	\/* transpose across UL-to-LR axis *\/$/;"	e	enum:__anon43
JXFORM_TRANSVERSE	jpeg/transupp.h	/^	JXFORM_TRANSVERSE,	\/* transpose across UR-to-LL axis *\/$/;"	e	enum:__anon43
J_BUF_MODE	jpeg/jpegint.h	/^} J_BUF_MODE;$/;"	t	typeref:enum:__anon34
J_COLOR_SPACE	jpeg/jpeglib.h	/^} J_COLOR_SPACE;$/;"	t	typeref:enum:__anon55
J_DCT_METHOD	jpeg/jpeglib.h	/^} J_DCT_METHOD;$/;"	t	typeref:enum:__anon56
J_DITHER_MODE	jpeg/jpeglib.h	/^} J_DITHER_MODE;$/;"	t	typeref:enum:__anon57
J_MESSAGE_CODE	jpeg/jerror.h	/^} J_MESSAGE_CODE;$/;"	t	typeref:enum:__anon65
LDFLAGS	R3/Makefile	/^LDFLAGS=-g$/;"	m
LDFLAGS	jpeg/Makefile	/^LDFLAGS= $/;"	m
LDLIBS	jpeg/Makefile	/^LDLIBS= $/;"	m
LIB	R3/Makefile	/^LIB=.\/libR3.a$/;"	m
LIBOBJECTS	jpeg/Makefile	/^LIBOBJECTS= $(CLIBOBJECTS) $(DLIBOBJECTS) $(COMOBJECTS)$/;"	m
LIBS	Makefile	/^LIBS=R3\/libR3.a R2\/libR2.a jpeg\/libjpeg.a$/;"	m
LIBSOURCES	jpeg/Makefile	/^LIBSOURCES= jcapimin.c jcapistd.c jccoefct.c jccolor.c jcdctmgr.c jchuff.c \\$/;"	m
LIBTOOL	jpeg/Makefile	/^LIBTOOL = $/;"	m
LN	jpeg/Makefile	/^LN= $(CC)$/;"	m
LOBYTE	jpeg/jmemdos.c	487;"	d	file:
LOCAL	jpeg/cjpeg.c	/^LOCAL(cjpeg_source_ptr)$/;"	f
LOCAL	jpeg/jchuff.c	/^LOCAL(jboolean)$/;"	f
LOCAL	jpeg/jdapistd.c	/^LOCAL(jboolean)$/;"	f
LOCAL	jpeg/jdcoefct.c	/^LOCAL(jboolean)$/;"	f
LOCAL	jpeg/jdhuff.c	/^LOCAL(jboolean)$/;"	f
LOCAL	jpeg/jdmarker.c	/^LOCAL(jboolean)$/;"	f
LOCAL	jpeg/jdmaster.c	/^LOCAL(jboolean)$/;"	f
LOCAL	jpeg/jdphuff.c	/^LOCAL(jboolean)$/;"	f
LOCAL	jpeg/jmemdos.c	/^LOCAL(jboolean)$/;"	f
LOCAL	jpeg/jmorecfg.h	186;"	d
LOCAL	jpeg/jquant1.c	/^LOCAL(ODITHER_MATRIX_PTR)$/;"	f
LOCAL	jpeg/jquant2.c	/^LOCAL(boxptr)$/;"	f
LOCAL	jpeg/rdswitch.c	/^LOCAL(jboolean)$/;"	f
LOCFSERROR	jpeg/jquant1.c	/^typedef INT32 LOCFSERROR;	\/* be sure calculation temps are big enough *\/$/;"	t	file:
LOCFSERROR	jpeg/jquant1.c	/^typedef int LOCFSERROR;		\/* use 'int' for calculation temps *\/$/;"	t	file:
LOCFSERROR	jpeg/jquant2.c	/^typedef INT32 LOCFSERROR;	\/* be sure calculation temps are big enough *\/$/;"	t	file:
LOCFSERROR	jpeg/jquant2.c	/^typedef int LOCFSERROR;		\/* use 'int' for calculation temps *\/$/;"	t	file:
Length	R2/R2Segment.h	/^Length(void) const$/;"	f	class:R2Segment
Length	R2/R2Vector.h	/^Length(void) const$/;"	f	class:R2Vector
Length	R3/R3Segment.h	/^Length(void) const$/;"	f	class:R3Segment
Length	R3/R3Vector.h	/^Length(void) const$/;"	f	class:R3Vector
Light	R3Scene.h	/^Light(int k) const$/;"	f	class:R3Scene
Line	R2/R2Segment.h	/^Line(void) const$/;"	f	class:R2Segment
Line	R3/R3Ray.h	/^Line(void) const$/;"	f	class:R3Ray
Line	R3/R3Segment.h	/^Line(void) const$/;"	f	class:R3Segment
LoadCamera	minecraft.cpp	/^void LoadCamera(R3Camera *camera)$/;"	f
LoadLights	minecraft.cpp	/^void LoadLights(R3Scene *scene)$/;"	f
LoadMaterial	minecraft.cpp	/^void LoadMaterial(R3Material *material) $/;"	f
LoadMatrix	minecraft.cpp	/^void LoadMatrix(R3Matrix *matrix)$/;"	f
LongReadLE	R2/R2Image.cpp	/^static int LongReadLE(FILE *fp)$/;"	f	file:
LongWriteLE	R2/R2Image.cpp	/^static void LongWriteLE(int x, FILE *fp)$/;"	f	file:
LongestAxis	R3/R3Box.cpp	/^LongestAxis (void) const$/;"	f	class:R3Box
LongestAxisLength	R3/R3Box.cpp	/^LongestAxisLength (void) const$/;"	f	class:R3Box
Luminance	R2/R2Pixel.h	/^Luminance(void) const$/;"	f	class:R2Pixel
MAKESTMT	jpeg/jerror.h	235;"	d
MAKE_BYTE_AVAIL	jpeg/jdmarker.c	138;"	d	file:
MAPPEDGRAY	jpeg/rdrle.c	/^  { GRAYSCALE, MAPPEDGRAY, PSEUDOCOLOR, TRUECOLOR, DIRECTCOLOR } rle_kind;$/;"	e	enum:__anon37	file:
MAX	jpeg/jpegint.h	266;"	d
MAX	jpeg/jpegint.h	267;"	d
MAX	raytrace.h	10;"	d
MAXCODE	jpeg/wrgif.c	72;"	d	file:
MAXJSAMPLE	jpeg/jmorecfg.h	73;"	d
MAXJSAMPLE	jpeg/jmorecfg.h	87;"	d
MAXNUMCOLORS	jpeg/jquant2.c	127;"	d	file:
MAX_AH_AL	jpeg/jcmaster.c	196;"	d	file:
MAX_ALLOC_CHUNK	jpeg/jmemsys.h	78;"	d
MAX_CLEN	jpeg/jchuff.c	707;"	d	file:
MAX_COEF_BITS	jpeg/jchuff.h	20;"	d
MAX_COEF_BITS	jpeg/jchuff.h	22;"	d
MAX_COMPONENTS	jpeg/jmorecfg.h	35;"	d
MAX_COMPS_IN_SCAN	jpeg/jpeglib.h	46;"	d
MAX_COM_LENGTH	jpeg/wrjpgcom.c	66;"	d	file:
MAX_CORR_BITS	jpeg/jcphuff.c	70;"	d	file:
MAX_DEPTH	raytrace.cpp	/^static int MAX_DEPTH;$/;"	v	file:
MAX_Q_COMPS	jpeg/jquant1.c	140;"	d	file:
MAX_SAMP_FACTOR	jpeg/jpeglib.h	47;"	d
MAX_SCANS	jpeg/rdswitch.c	179;"	d	file:
MCU_blocks	jpeg/jpeglib.h	/^  int MCU_blocks;		\/* MCU_width * MCU_height *\/$/;"	m	struct:__anon53
MCU_buffer	jpeg/jccoefct.c	/^  JBLOCKROW MCU_buffer[C_MAX_BLOCKS_IN_MCU];$/;"	m	struct:__anon62	file:
MCU_buffer	jpeg/jdcoefct.c	/^  JBLOCKROW MCU_buffer[D_MAX_BLOCKS_IN_MCU];$/;"	m	struct:__anon16	file:
MCU_ctr	jpeg/jdcoefct.c	/^  JDIMENSION MCU_ctr;		\/* counts MCUs processed in current row *\/$/;"	m	struct:__anon16	file:
MCU_height	jpeg/jpeglib.h	/^  int MCU_height;		\/* number of blocks per MCU, vertically *\/$/;"	m	struct:__anon53
MCU_membership	jpeg/jpeglib.h	/^  int MCU_membership[C_MAX_BLOCKS_IN_MCU];$/;"	m	struct:jpeg_compress_struct
MCU_membership	jpeg/jpeglib.h	/^  int MCU_membership[D_MAX_BLOCKS_IN_MCU];$/;"	m	struct:jpeg_decompress_struct
MCU_rows_in_scan	jpeg/jpeglib.h	/^  JDIMENSION MCU_rows_in_scan;	\/* # of MCU rows in the image *\/$/;"	m	struct:jpeg_compress_struct
MCU_rows_in_scan	jpeg/jpeglib.h	/^  JDIMENSION MCU_rows_in_scan;	\/* # of MCU rows in the image *\/$/;"	m	struct:jpeg_decompress_struct
MCU_rows_per_iMCU_row	jpeg/jccoefct.c	/^  int MCU_rows_per_iMCU_row;	\/* number of such rows needed *\/$/;"	m	struct:__anon62	file:
MCU_rows_per_iMCU_row	jpeg/jctrans.c	/^  int MCU_rows_per_iMCU_row;	\/* number of such rows needed *\/$/;"	m	struct:__anon39	file:
MCU_rows_per_iMCU_row	jpeg/jdcoefct.c	/^  int MCU_rows_per_iMCU_row;	\/* number of such rows needed *\/$/;"	m	struct:__anon16	file:
MCU_sample_width	jpeg/jpeglib.h	/^  int MCU_sample_width;		\/* MCU width in samples, MCU_width*DCT_scaled_size *\/$/;"	m	struct:__anon53
MCU_vert_offset	jpeg/jccoefct.c	/^  int MCU_vert_offset;		\/* counts MCU rows within iMCU row *\/$/;"	m	struct:__anon62	file:
MCU_vert_offset	jpeg/jctrans.c	/^  int MCU_vert_offset;		\/* counts MCU rows within iMCU row *\/$/;"	m	struct:__anon39	file:
MCU_vert_offset	jpeg/jdcoefct.c	/^  int MCU_vert_offset;		\/* counts MCU rows within iMCU row *\/$/;"	m	struct:__anon16	file:
MCU_width	jpeg/jpeglib.h	/^  int MCU_width;		\/* number of blocks per MCU, horizontally *\/$/;"	m	struct:__anon53
MCUs_per_row	jpeg/jpeglib.h	/^  JDIMENSION MCUs_per_row;	\/* # of MCUs across the image *\/$/;"	m	struct:jpeg_compress_struct
MCUs_per_row	jpeg/jpeglib.h	/^  JDIMENSION MCUs_per_row;	\/* # of MCUs across the image *\/$/;"	m	struct:jpeg_decompress_struct
MEMCOPY	jpeg/jinclude.h	62;"	d
MEMCOPY	jpeg/jinclude.h	68;"	d
MEMZERO	jpeg/jinclude.h	61;"	d
MEMZERO	jpeg/jinclude.h	67;"	d
METHODDEF	jpeg/djpeg.c	/^METHODDEF(jboolean)$/;"	f
METHODDEF	jpeg/jccoefct.c	/^METHODDEF(jboolean)$/;"	f
METHODDEF	jpeg/jchuff.c	/^METHODDEF(jboolean)$/;"	f
METHODDEF	jpeg/jcphuff.c	/^METHODDEF(jboolean)$/;"	f
METHODDEF	jpeg/jctrans.c	/^METHODDEF(jboolean)$/;"	f
METHODDEF	jpeg/jdatadst.c	/^METHODDEF(jboolean)$/;"	f
METHODDEF	jpeg/jdatasrc.c	/^METHODDEF(jboolean)$/;"	f
METHODDEF	jpeg/jdhuff.c	/^METHODDEF(jboolean)$/;"	f
METHODDEF	jpeg/jdmarker.c	/^METHODDEF(jboolean)$/;"	f
METHODDEF	jpeg/jdphuff.c	/^METHODDEF(jboolean)$/;"	f
METHODDEF	jpeg/jmemmgr.c	/^METHODDEF(JBLOCKARRAY)$/;"	f
METHODDEF	jpeg/jmemmgr.c	/^METHODDEF(JSAMPARRAY)$/;"	f
METHODDEF	jpeg/jmemmgr.c	/^METHODDEF(jvirt_barray_ptr)$/;"	f
METHODDEF	jpeg/jmemmgr.c	/^METHODDEF(jvirt_sarray_ptr)$/;"	f
METHODDEF	jpeg/jmorecfg.h	184;"	d
METHODDEF	jpeg/rdbmp.c	/^METHODDEF(JDIMENSION)$/;"	f
METHODDEF	jpeg/rdppm.c	/^METHODDEF(JDIMENSION)$/;"	f
METHODDEF	jpeg/rdrle.c	/^METHODDEF(JDIMENSION)$/;"	f
METHODDEF	jpeg/rdtarga.c	/^METHODDEF(JDIMENSION)$/;"	f
MIN	jpeg/jpegint.h	268;"	d
MIN	jpeg/jpegint.h	269;"	d
MIN	raytrace.h	9;"	d
MIN_GET_BITS	jpeg/jdhuff.c	285;"	d	file:
MIN_GET_BITS	jpeg/jdhuff.c	287;"	d	file:
MIN_SLOP	jpeg/jmemmgr.c	253;"	d	file:
MKDIR	jpeg/Makefile	/^MKDIR= mkdir$/;"	m
MKFILES	jpeg/Makefile	/^MKFILES= configure makefile.cfg makefile.ansi makefile.unix makefile.bcc \\$/;"	m
MULTIPLIER	jpeg/jmorecfg.h	343;"	d
MULTIPLY	jpeg/jfdctfst.c	106;"	d	file:
MULTIPLY	jpeg/jfdctint.c	129;"	d	file:
MULTIPLY	jpeg/jidctfst.c	119;"	d	file:
MULTIPLY	jpeg/jidctint.c	129;"	d	file:
MULTIPLY	jpeg/jidctred.c	98;"	d	file:
MULTIPLY16C16	jpeg/jdct.h	158;"	d
MULTIPLY16C16	jpeg/jdct.h	161;"	d
MULTIPLY16C16	jpeg/jdct.h	165;"	d
MULTIPLY16V16	jpeg/jdct.h	171;"	d
MULTIPLY16V16	jpeg/jdct.h	175;"	d
M_APP0	jpeg/jcmarker.c	/^  M_APP0  = 0xe0,$/;"	e	enum:__anon5	file:
M_APP0	jpeg/jdmarker.c	/^  M_APP0  = 0xe0,$/;"	e	enum:__anon41	file:
M_APP0	jpeg/rdjpgcom.c	122;"	d	file:
M_APP1	jpeg/jcmarker.c	/^  M_APP1  = 0xe1,$/;"	e	enum:__anon5	file:
M_APP1	jpeg/jdmarker.c	/^  M_APP1  = 0xe1,$/;"	e	enum:__anon41	file:
M_APP10	jpeg/jcmarker.c	/^  M_APP10 = 0xea,$/;"	e	enum:__anon5	file:
M_APP10	jpeg/jdmarker.c	/^  M_APP10 = 0xea,$/;"	e	enum:__anon41	file:
M_APP11	jpeg/jcmarker.c	/^  M_APP11 = 0xeb,$/;"	e	enum:__anon5	file:
M_APP11	jpeg/jdmarker.c	/^  M_APP11 = 0xeb,$/;"	e	enum:__anon41	file:
M_APP12	jpeg/jcmarker.c	/^  M_APP12 = 0xec,$/;"	e	enum:__anon5	file:
M_APP12	jpeg/jdmarker.c	/^  M_APP12 = 0xec,$/;"	e	enum:__anon41	file:
M_APP12	jpeg/rdjpgcom.c	123;"	d	file:
M_APP13	jpeg/jcmarker.c	/^  M_APP13 = 0xed,$/;"	e	enum:__anon5	file:
M_APP13	jpeg/jdmarker.c	/^  M_APP13 = 0xed,$/;"	e	enum:__anon41	file:
M_APP14	jpeg/jcmarker.c	/^  M_APP14 = 0xee,$/;"	e	enum:__anon5	file:
M_APP14	jpeg/jdmarker.c	/^  M_APP14 = 0xee,$/;"	e	enum:__anon41	file:
M_APP15	jpeg/jcmarker.c	/^  M_APP15 = 0xef,$/;"	e	enum:__anon5	file:
M_APP15	jpeg/jdmarker.c	/^  M_APP15 = 0xef,$/;"	e	enum:__anon41	file:
M_APP2	jpeg/jcmarker.c	/^  M_APP2  = 0xe2,$/;"	e	enum:__anon5	file:
M_APP2	jpeg/jdmarker.c	/^  M_APP2  = 0xe2,$/;"	e	enum:__anon41	file:
M_APP3	jpeg/jcmarker.c	/^  M_APP3  = 0xe3,$/;"	e	enum:__anon5	file:
M_APP3	jpeg/jdmarker.c	/^  M_APP3  = 0xe3,$/;"	e	enum:__anon41	file:
M_APP4	jpeg/jcmarker.c	/^  M_APP4  = 0xe4,$/;"	e	enum:__anon5	file:
M_APP4	jpeg/jdmarker.c	/^  M_APP4  = 0xe4,$/;"	e	enum:__anon41	file:
M_APP5	jpeg/jcmarker.c	/^  M_APP5  = 0xe5,$/;"	e	enum:__anon5	file:
M_APP5	jpeg/jdmarker.c	/^  M_APP5  = 0xe5,$/;"	e	enum:__anon41	file:
M_APP6	jpeg/jcmarker.c	/^  M_APP6  = 0xe6,$/;"	e	enum:__anon5	file:
M_APP6	jpeg/jdmarker.c	/^  M_APP6  = 0xe6,$/;"	e	enum:__anon41	file:
M_APP7	jpeg/jcmarker.c	/^  M_APP7  = 0xe7,$/;"	e	enum:__anon5	file:
M_APP7	jpeg/jdmarker.c	/^  M_APP7  = 0xe7,$/;"	e	enum:__anon41	file:
M_APP8	jpeg/jcmarker.c	/^  M_APP8  = 0xe8,$/;"	e	enum:__anon5	file:
M_APP8	jpeg/jdmarker.c	/^  M_APP8  = 0xe8,$/;"	e	enum:__anon41	file:
M_APP9	jpeg/jcmarker.c	/^  M_APP9  = 0xe9,$/;"	e	enum:__anon5	file:
M_APP9	jpeg/jdmarker.c	/^  M_APP9  = 0xe9,$/;"	e	enum:__anon41	file:
M_COM	jpeg/jcmarker.c	/^  M_COM   = 0xfe,$/;"	e	enum:__anon5	file:
M_COM	jpeg/jdmarker.c	/^  M_COM   = 0xfe,$/;"	e	enum:__anon41	file:
M_COM	jpeg/rdjpgcom.c	124;"	d	file:
M_COM	jpeg/wrjpgcom.c	173;"	d	file:
M_DAC	jpeg/jcmarker.c	/^  M_DAC   = 0xcc,$/;"	e	enum:__anon5	file:
M_DAC	jpeg/jdmarker.c	/^  M_DAC   = 0xcc,$/;"	e	enum:__anon41	file:
M_DHP	jpeg/jcmarker.c	/^  M_DHP   = 0xde,$/;"	e	enum:__anon5	file:
M_DHP	jpeg/jdmarker.c	/^  M_DHP   = 0xde,$/;"	e	enum:__anon41	file:
M_DHT	jpeg/jcmarker.c	/^  M_DHT   = 0xc4,$/;"	e	enum:__anon5	file:
M_DHT	jpeg/jdmarker.c	/^  M_DHT   = 0xc4,$/;"	e	enum:__anon41	file:
M_DNL	jpeg/jcmarker.c	/^  M_DNL   = 0xdc,$/;"	e	enum:__anon5	file:
M_DNL	jpeg/jdmarker.c	/^  M_DNL   = 0xdc,$/;"	e	enum:__anon41	file:
M_DQT	jpeg/jcmarker.c	/^  M_DQT   = 0xdb,$/;"	e	enum:__anon5	file:
M_DQT	jpeg/jdmarker.c	/^  M_DQT   = 0xdb,$/;"	e	enum:__anon41	file:
M_DRI	jpeg/jcmarker.c	/^  M_DRI   = 0xdd,$/;"	e	enum:__anon5	file:
M_DRI	jpeg/jdmarker.c	/^  M_DRI   = 0xdd,$/;"	e	enum:__anon41	file:
M_EOI	jpeg/jcmarker.c	/^  M_EOI   = 0xd9,$/;"	e	enum:__anon5	file:
M_EOI	jpeg/jdmarker.c	/^  M_EOI   = 0xd9,$/;"	e	enum:__anon41	file:
M_EOI	jpeg/rdjpgcom.c	120;"	d	file:
M_EOI	jpeg/wrjpgcom.c	171;"	d	file:
M_ERROR	jpeg/jcmarker.c	/^  M_ERROR = 0x100$/;"	e	enum:__anon5	file:
M_ERROR	jpeg/jdmarker.c	/^  M_ERROR = 0x100$/;"	e	enum:__anon41	file:
M_EXP	jpeg/jcmarker.c	/^  M_EXP   = 0xdf,$/;"	e	enum:__anon5	file:
M_EXP	jpeg/jdmarker.c	/^  M_EXP   = 0xdf,$/;"	e	enum:__anon41	file:
M_JPG	jpeg/jcmarker.c	/^  M_JPG   = 0xc8,$/;"	e	enum:__anon5	file:
M_JPG	jpeg/jdmarker.c	/^  M_JPG   = 0xc8,$/;"	e	enum:__anon41	file:
M_JPG0	jpeg/jcmarker.c	/^  M_JPG0  = 0xf0,$/;"	e	enum:__anon5	file:
M_JPG0	jpeg/jdmarker.c	/^  M_JPG0  = 0xf0,$/;"	e	enum:__anon41	file:
M_JPG13	jpeg/jcmarker.c	/^  M_JPG13 = 0xfd,$/;"	e	enum:__anon5	file:
M_JPG13	jpeg/jdmarker.c	/^  M_JPG13 = 0xfd,$/;"	e	enum:__anon41	file:
M_PI	R3/R3.h	18;"	d
M_RST0	jpeg/jcmarker.c	/^  M_RST0  = 0xd0,$/;"	e	enum:__anon5	file:
M_RST0	jpeg/jdmarker.c	/^  M_RST0  = 0xd0,$/;"	e	enum:__anon41	file:
M_RST1	jpeg/jcmarker.c	/^  M_RST1  = 0xd1,$/;"	e	enum:__anon5	file:
M_RST1	jpeg/jdmarker.c	/^  M_RST1  = 0xd1,$/;"	e	enum:__anon41	file:
M_RST2	jpeg/jcmarker.c	/^  M_RST2  = 0xd2,$/;"	e	enum:__anon5	file:
M_RST2	jpeg/jdmarker.c	/^  M_RST2  = 0xd2,$/;"	e	enum:__anon41	file:
M_RST3	jpeg/jcmarker.c	/^  M_RST3  = 0xd3,$/;"	e	enum:__anon5	file:
M_RST3	jpeg/jdmarker.c	/^  M_RST3  = 0xd3,$/;"	e	enum:__anon41	file:
M_RST4	jpeg/jcmarker.c	/^  M_RST4  = 0xd4,$/;"	e	enum:__anon5	file:
M_RST4	jpeg/jdmarker.c	/^  M_RST4  = 0xd4,$/;"	e	enum:__anon41	file:
M_RST5	jpeg/jcmarker.c	/^  M_RST5  = 0xd5,$/;"	e	enum:__anon5	file:
M_RST5	jpeg/jdmarker.c	/^  M_RST5  = 0xd5,$/;"	e	enum:__anon41	file:
M_RST6	jpeg/jcmarker.c	/^  M_RST6  = 0xd6,$/;"	e	enum:__anon5	file:
M_RST6	jpeg/jdmarker.c	/^  M_RST6  = 0xd6,$/;"	e	enum:__anon41	file:
M_RST7	jpeg/jcmarker.c	/^  M_RST7  = 0xd7,$/;"	e	enum:__anon5	file:
M_RST7	jpeg/jdmarker.c	/^  M_RST7  = 0xd7,$/;"	e	enum:__anon41	file:
M_SOF0	jpeg/jcmarker.c	/^  M_SOF0  = 0xc0,$/;"	e	enum:__anon5	file:
M_SOF0	jpeg/jdmarker.c	/^  M_SOF0  = 0xc0,$/;"	e	enum:__anon41	file:
M_SOF0	jpeg/rdjpgcom.c	106;"	d	file:
M_SOF0	jpeg/wrjpgcom.c	157;"	d	file:
M_SOF1	jpeg/jcmarker.c	/^  M_SOF1  = 0xc1,$/;"	e	enum:__anon5	file:
M_SOF1	jpeg/jdmarker.c	/^  M_SOF1  = 0xc1,$/;"	e	enum:__anon41	file:
M_SOF1	jpeg/rdjpgcom.c	107;"	d	file:
M_SOF1	jpeg/wrjpgcom.c	158;"	d	file:
M_SOF10	jpeg/jcmarker.c	/^  M_SOF10 = 0xca,$/;"	e	enum:__anon5	file:
M_SOF10	jpeg/jdmarker.c	/^  M_SOF10 = 0xca,$/;"	e	enum:__anon41	file:
M_SOF10	jpeg/rdjpgcom.c	114;"	d	file:
M_SOF10	jpeg/wrjpgcom.c	165;"	d	file:
M_SOF11	jpeg/jcmarker.c	/^  M_SOF11 = 0xcb,$/;"	e	enum:__anon5	file:
M_SOF11	jpeg/jdmarker.c	/^  M_SOF11 = 0xcb,$/;"	e	enum:__anon41	file:
M_SOF11	jpeg/rdjpgcom.c	115;"	d	file:
M_SOF11	jpeg/wrjpgcom.c	166;"	d	file:
M_SOF13	jpeg/jcmarker.c	/^  M_SOF13 = 0xcd,$/;"	e	enum:__anon5	file:
M_SOF13	jpeg/jdmarker.c	/^  M_SOF13 = 0xcd,$/;"	e	enum:__anon41	file:
M_SOF13	jpeg/rdjpgcom.c	116;"	d	file:
M_SOF13	jpeg/wrjpgcom.c	167;"	d	file:
M_SOF14	jpeg/jcmarker.c	/^  M_SOF14 = 0xce,$/;"	e	enum:__anon5	file:
M_SOF14	jpeg/jdmarker.c	/^  M_SOF14 = 0xce,$/;"	e	enum:__anon41	file:
M_SOF14	jpeg/rdjpgcom.c	117;"	d	file:
M_SOF14	jpeg/wrjpgcom.c	168;"	d	file:
M_SOF15	jpeg/jcmarker.c	/^  M_SOF15 = 0xcf,$/;"	e	enum:__anon5	file:
M_SOF15	jpeg/jdmarker.c	/^  M_SOF15 = 0xcf,$/;"	e	enum:__anon41	file:
M_SOF15	jpeg/rdjpgcom.c	118;"	d	file:
M_SOF15	jpeg/wrjpgcom.c	169;"	d	file:
M_SOF2	jpeg/jcmarker.c	/^  M_SOF2  = 0xc2,$/;"	e	enum:__anon5	file:
M_SOF2	jpeg/jdmarker.c	/^  M_SOF2  = 0xc2,$/;"	e	enum:__anon41	file:
M_SOF2	jpeg/rdjpgcom.c	108;"	d	file:
M_SOF2	jpeg/wrjpgcom.c	159;"	d	file:
M_SOF3	jpeg/jcmarker.c	/^  M_SOF3  = 0xc3,$/;"	e	enum:__anon5	file:
M_SOF3	jpeg/jdmarker.c	/^  M_SOF3  = 0xc3,$/;"	e	enum:__anon41	file:
M_SOF3	jpeg/rdjpgcom.c	109;"	d	file:
M_SOF3	jpeg/wrjpgcom.c	160;"	d	file:
M_SOF5	jpeg/jcmarker.c	/^  M_SOF5  = 0xc5,$/;"	e	enum:__anon5	file:
M_SOF5	jpeg/jdmarker.c	/^  M_SOF5  = 0xc5,$/;"	e	enum:__anon41	file:
M_SOF5	jpeg/rdjpgcom.c	110;"	d	file:
M_SOF5	jpeg/wrjpgcom.c	161;"	d	file:
M_SOF6	jpeg/jcmarker.c	/^  M_SOF6  = 0xc6,$/;"	e	enum:__anon5	file:
M_SOF6	jpeg/jdmarker.c	/^  M_SOF6  = 0xc6,$/;"	e	enum:__anon41	file:
M_SOF6	jpeg/rdjpgcom.c	111;"	d	file:
M_SOF6	jpeg/wrjpgcom.c	162;"	d	file:
M_SOF7	jpeg/jcmarker.c	/^  M_SOF7  = 0xc7,$/;"	e	enum:__anon5	file:
M_SOF7	jpeg/jdmarker.c	/^  M_SOF7  = 0xc7,$/;"	e	enum:__anon41	file:
M_SOF7	jpeg/rdjpgcom.c	112;"	d	file:
M_SOF7	jpeg/wrjpgcom.c	163;"	d	file:
M_SOF9	jpeg/jcmarker.c	/^  M_SOF9  = 0xc9,$/;"	e	enum:__anon5	file:
M_SOF9	jpeg/jdmarker.c	/^  M_SOF9  = 0xc9,$/;"	e	enum:__anon41	file:
M_SOF9	jpeg/rdjpgcom.c	113;"	d	file:
M_SOF9	jpeg/wrjpgcom.c	164;"	d	file:
M_SOI	jpeg/jcmarker.c	/^  M_SOI   = 0xd8,$/;"	e	enum:__anon5	file:
M_SOI	jpeg/jdmarker.c	/^  M_SOI   = 0xd8,$/;"	e	enum:__anon41	file:
M_SOI	jpeg/rdjpgcom.c	119;"	d	file:
M_SOI	jpeg/wrjpgcom.c	170;"	d	file:
M_SOS	jpeg/jcmarker.c	/^  M_SOS   = 0xda,$/;"	e	enum:__anon5	file:
M_SOS	jpeg/jdmarker.c	/^  M_SOS   = 0xda,$/;"	e	enum:__anon41	file:
M_SOS	jpeg/rdjpgcom.c	121;"	d	file:
M_SOS	jpeg/wrjpgcom.c	172;"	d	file:
M_TEM	jpeg/jcmarker.c	/^  M_TEM   = 0x01,$/;"	e	enum:__anon5	file:
M_TEM	jpeg/jdmarker.c	/^  M_TEM   = 0x01,$/;"	e	enum:__anon41	file:
Max	R3/R3Box.h	/^Max (void) const$/;"	f	class:R3Box
MaxDimension	R2/R2Vector.h	/^MaxDimension(void) const$/;"	f	class:R2Vector
MaxDimension	R3/R3Vector.h	/^MaxDimension(void) const$/;"	f	class:R3Vector
MedianFilter	R2/R2Image.cpp	/^MedianFilter(double sigma)$/;"	f	class:R2Image
Midpoint	R2/R2Segment.h	/^Midpoint(void) const$/;"	f	class:R2Segment
Midpoint	R3/R3Segment.cpp	/^Midpoint(void) const$/;"	f	class:R3Segment
Min	R3/R3Box.h	/^Min (void) const$/;"	f	class:R3Box
MinDimension	R3/R3Vector.h	/^MinDimension(void) const$/;"	f	class:R3Vector
Mirror	R2/R2Line.cpp	/^Mirror(const R2Line& line)$/;"	f	class:R2Line
Mirror	R2/R2Point.cpp	/^Mirror(const R2Line& line)$/;"	f	class:R2Point
Mirror	R2/R2Segment.cpp	/^Mirror(const R2Line& mirror_line)$/;"	f	class:R2Segment
Mirror	R2/R2Vector.cpp	/^Mirror(const R2Line& line)$/;"	f	class:R2Vector
Mirror	R3/R3Line.h	/^Mirror(const R3Plane& plane)$/;"	f	class:R3Line
Mirror	R3/R3Plane.cpp	/^Mirror(const R3Plane& plane)$/;"	f	class:R3Plane
Mirror	R3/R3Point.cpp	/^Mirror(const R3Plane& plane)$/;"	f	class:R3Point
Mirror	R3/R3Ray.h	/^Mirror(const R3Plane& plane)$/;"	f	class:R3Ray
Mirror	R3/R3Segment.h	/^Mirror(const R3Plane& plane)$/;"	f	class:R3Segment
Mirror	R3/R3Vector.cpp	/^Mirror(const R3Plane& plane)$/;"	f	class:R3Vector
Morph	R2/R2Image.cpp	/^Morph(const R2Image& target, $/;"	f	class:R2Image
MotionBlur	R2/R2Image.cpp	/^MotionBlur(int amount)$/;"	f	class:R2Image
Multiply	R3/R3Matrix.h	/^Multiply(const R3Matrix& a)$/;"	f	class:R3Matrix
NEED_BSD_STRINGS	jpeg/ckconfig.c	53;"	d	file:
NEED_BSD_STRINGS	jpeg/jconfig.h	13;"	d
NEED_FAR_POINTERS	jpeg/jconfig.h	15;"	d
NEED_SHORT_EXTERNAL_NAMES	jpeg/ckconfig.c	213;"	d	file:
NEED_SHORT_EXTERNAL_NAMES	jpeg/jconfig.h	16;"	d
NEED_SPECIAL_INCLUDE	jpeg/ckconfig.c	84;"	d	file:
NEED_SYS_TYPES_H	jpeg/ckconfig.c	66;"	d	file:
NEED_SYS_TYPES_H	jpeg/jconfig.h	14;"	d
NEXTBYTE	jpeg/rdjpgcom.c	64;"	d	file:
NEXTBYTE	jpeg/wrjpgcom.c	78;"	d	file:
NFaces	R3/R3Mesh.h	/^NFaces(void) const$/;"	f	class:R3Mesh
NLights	R3Scene.h	/^NLights(void) const$/;"	f	class:R3Scene
NOMINMAX	R2/R2.h	12;"	d
NOMINMAX	cos426_opengl.h	8;"	d
NPixels	R2/R2Image.h	/^NPixels(void) const$/;"	f	class:R2Image
NUM_ARITH_TBLS	jpeg/jpeglib.h	45;"	d
NUM_HUFF_TBLS	jpeg/jpeglib.h	44;"	d
NUM_QUANT_TBLS	jpeg/jpeglib.h	43;"	d
NVertices	R3/R3Mesh.h	/^NVertices(void) const$/;"	f	class:R3Mesh
Ncolors	jpeg/jquant1.c	/^  int Ncolors[MAX_Q_COMPS];	\/* # of values alloced to each component *\/$/;"	m	struct:__anon24	file:
Normal	R2/R2Line.h	/^Normal(void) const$/;"	f	class:R2Line
Normal	R2/R2Segment.h	/^Normal(void) const$/;"	f	class:R2Segment
Normal	R3/R3Plane.h	/^Normal (void) const$/;"	f	class:R3Plane
Normalize	R2/R2Vector.cpp	/^Normalize(void)$/;"	f	class:R2Vector
Normalize	R3/R3Vector.cpp	/^Normalize(void)$/;"	f	class:R3Vector
O	jpeg/Makefile	/^O = o$/;"	m
OBJS	R3/Makefile	/^OBJS=$(CCSRCS:.cpp=.o)$/;"	m
ODD	jpeg/jmemdos.c	329;"	d	file:
ODITHER_CELLS	jpeg/jquant1.c	73;"	d	file:
ODITHER_MASK	jpeg/jquant1.c	74;"	d	file:
ODITHER_MATRIX	jpeg/jquant1.c	/^typedef int ODITHER_MATRIX[ODITHER_SIZE][ODITHER_SIZE];$/;"	t	file:
ODITHER_MATRIX_PTR	jpeg/jquant1.c	/^typedef int (*ODITHER_MATRIX_PTR)[ODITHER_SIZE];$/;"	t	file:
ODITHER_SIZE	jpeg/jquant1.c	71;"	d	file:
ONE	jpeg/jdct.h	131;"	d
ONE_HALF	jpeg/jccolor.c	60;"	d	file:
ONE_HALF	jpeg/jdcolor.c	61;"	d	file:
ONE_HALF	jpeg/jdmerge.c	73;"	d	file:
OTHERFILES	jpeg/Makefile	/^OTHERFILES= jconfig.doc ckconfig.c ansi2knr.c ansi2knr.1 jmemdosa.asm$/;"	m
OUTPUT_BUF_SIZE	jpeg/jdatadst.c	34;"	d	file:
OrderedDither	R2/R2Image.cpp	/^OrderedDither(int nbits)$/;"	f	class:R2Image
Outline	R3/R3Box.cpp	/^Outline(void) const$/;"	f	class:R3Box
Outline	R3/R3Cone.cpp	/^Outline(void) const$/;"	f	class:R3Cone
Outline	R3/R3Cylinder.cpp	/^Outline(void) const$/;"	f	class:R3Cylinder
Outline	R3/R3Mesh.cpp	/^Outline(void) const$/;"	f	class:R3Mesh
Outline	R3/R3Sphere.cpp	/^Outline(void) const$/;"	f	class:R3Sphere
PASS1_BITS	jpeg/jfdctint.c	79;"	d	file:
PASS1_BITS	jpeg/jidctfst.c	78;"	d	file:
PASS1_BITS	jpeg/jidctint.c	79;"	d	file:
PASS1_BITS	jpeg/jidctred.c	44;"	d	file:
PEEK_BITS	jpeg/jdhuff.h	147;"	d
PPM_MAXVAL	jpeg/wrppm.c	36;"	d	file:
PPM_MAXVAL	jpeg/wrppm.c	41;"	d	file:
PPM_MAXVAL	jpeg/wrppm.c	50;"	d	file:
PRINT_POINT	raytrace.cpp	10;"	d	file:
PROVIDE_ISLOW_TABLES	jpeg/jddctmgr.c	74;"	d	file:
PROVIDE_ISLOW_TABLES	jpeg/jddctmgr.c	77;"	d	file:
PSEUDOCOLOR	jpeg/rdrle.c	/^  { GRAYSCALE, MAPPEDGRAY, PSEUDOCOLOR, TRUECOLOR, DIRECTCOLOR } rle_kind;$/;"	e	enum:__anon37	file:
PUTBYTE	jpeg/wrjpgcom.c	83;"	d	file:
PUTPPMSAMPLE	jpeg/wrppm.c	34;"	d	file:
PUTPPMSAMPLE	jpeg/wrppm.c	39;"	d	file:
PUTPPMSAMPLE	jpeg/wrppm.c	44;"	d	file:
PUT_2B	jpeg/wrbmp.c	162;"	d	file:
PUT_4B	jpeg/wrbmp.c	165;"	d	file:
ParseArgs	minecraft.cpp	/^int ParseArgs(int argc, char **argv)$/;"	f
Pixel	R2/R2Image.h	/^Pixel(int x, int y) const$/;"	f	class:R2Image
Pixel	R2/R2Image.h	/^Pixel(int x, int y)$/;"	f	class:R2Image
Pixels	R2/R2Image.h	/^Pixels(int x)$/;"	f	class:R2Image
Pixels	R2/R2Image.h	/^Pixels(void)$/;"	f	class:R2Image
Point	R2/R2Segment.h	/^Point (int k) const$/;"	f	class:R2Segment
Point	R2/R2Segment.h	/^Point(double t) const$/;"	f	class:R2Segment
Point	R2/R2Vector.h	/^Point(void) const$/;"	f	class:R2Vector
Point	R3/R3Line.h	/^Point(void) const$/;"	f	class:R3Line
Point	R3/R3Plane.cpp	/^Point (void) const$/;"	f	class:R3Plane
Point	R3/R3Ray.cpp	/^Point(double t) const$/;"	f	class:R3Ray
Point	R3/R3Segment.cpp	/^Point(double t) const$/;"	f	class:R3Segment
Point	R3/R3Segment.h	/^Point (int k) const$/;"	f	class:R3Segment
Point	R3/R3Vector.h	/^Point(void) const$/;"	f	class:R3Vector
Print	R2/R2Line.cpp	/^Print(FILE *fp) const$/;"	f	class:R2Line
Print	R2/R2Point.cpp	/^Print(FILE *fp) const$/;"	f	class:R2Point
Print	R2/R2Segment.cpp	/^Print(FILE *fp) const$/;"	f	class:R2Segment
Print	R2/R2Vector.cpp	/^Print(FILE *fp) const$/;"	f	class:R2Vector
Print	R3/R3Box.cpp	/^Print(FILE *fp) const$/;"	f	class:R3Box
Print	R3/R3Cone.cpp	/^Print(FILE *fp) const$/;"	f	class:R3Cone
Print	R3/R3Cylinder.cpp	/^Print(FILE *fp) const$/;"	f	class:R3Cylinder
Print	R3/R3Line.cpp	/^Print(FILE *fp) const$/;"	f	class:R3Line
Print	R3/R3Point.cpp	/^Print(FILE *fp) const$/;"	f	class:R3Point
Print	R3/R3Ray.cpp	/^Print(FILE *fp) const$/;"	f	class:R3Ray
Print	R3/R3Segment.cpp	/^Print(FILE *fp) const$/;"	f	class:R3Segment
Print	R3/R3Sphere.cpp	/^Print(FILE *fp) const$/;"	f	class:R3Sphere
Print	R3/R3Vector.cpp	/^Print(FILE *fp) const$/;"	f	class:R3Vector
Project	R2/R2Point.cpp	/^Project(const R2Line& line)$/;"	f	class:R2Point
Project	R2/R2Segment.cpp	/^Project(const R2Line& projection_line)$/;"	f	class:R2Segment
Project	R2/R2Vector.cpp	/^Project(const R2Vector& vector)$/;"	f	class:R2Vector
Project	R3/R3Point.cpp	/^Project(const R3Line& line)$/;"	f	class:R3Point
Project	R3/R3Point.cpp	/^Project(const R3Plane& plane)$/;"	f	class:R3Point
Project	R3/R3Vector.cpp	/^Project(const R3Plane& plane) $/;"	f	class:R3Vector
Project	R3/R3Vector.cpp	/^Project(const R3Vector& vector)$/;"	f	class:R3Vector
Q01_POS	jpeg/jdcoefct.c	390;"	d	file:
Q02_POS	jpeg/jdcoefct.c	394;"	d	file:
Q10_POS	jpeg/jdcoefct.c	391;"	d	file:
Q11_POS	jpeg/jdcoefct.c	393;"	d	file:
Q20_POS	jpeg/jdcoefct.c	392;"	d	file:
QUANT_1PASS_SUPPORTED	jpeg/jmorecfg.h	293;"	d
QUANT_2PASS_SUPPORTED	jpeg/jmorecfg.h	294;"	d
QUIT_COMMAND	minecraft.cpp	/^  QUIT_COMMAND,$/;"	e	enum:__anon72	file:
Quantize	R2/R2Image.cpp	/^Quantize (int nbits)$/;"	f	class:R2Image
R2Distance	R2/R2Distance.cpp	/^double R2Distance(const R2Line& line, const R2Segment& segment)$/;"	f
R2Distance	R2/R2Distance.cpp	/^double R2Distance(const R2Line& line1, const R2Line& line2)$/;"	f
R2Distance	R2/R2Distance.cpp	/^double R2Distance(const R2Point& point, const R2Line& line)$/;"	f
R2Distance	R2/R2Distance.cpp	/^double R2Distance(const R2Point& point, const R2Segment& segment)$/;"	f
R2Distance	R2/R2Distance.cpp	/^double R2Distance(const R2Point& point1, const R2Point& point2)$/;"	f
R2Distance	R2/R2Distance.h	/^inline double R2Distance(const R2Line& line, const R2Point& point)$/;"	f
R2Distance	R2/R2Distance.h	/^inline double R2Distance(const R2Segment& segment, const R2Line& line)$/;"	f
R2Distance	R2/R2Distance.h	/^inline double R2Distance(const R2Segment& segment, const R2Point& point)$/;"	f
R2Image	R2/R2Image.cpp	/^R2Image(const R2Image& image)$/;"	f	class:R2Image
R2Image	R2/R2Image.cpp	/^R2Image(const char *filename)$/;"	f	class:R2Image
R2Image	R2/R2Image.cpp	/^R2Image(int width, int height)$/;"	f	class:R2Image
R2Image	R2/R2Image.cpp	/^R2Image(int width, int height, const R2Pixel *p)$/;"	f	class:R2Image
R2Image	R2/R2Image.cpp	/^R2Image(void)$/;"	f	class:R2Image
R2Image	R2/R2Image.h	/^class R2Image {$/;"	c
R2ImageChannel	R2/R2Image.h	/^} R2ImageChannel;$/;"	t	typeref:enum:__anon75
R2ImageCompositeOperation	R2/R2Image.h	/^} R2ImageCompositeOperation;$/;"	t	typeref:enum:__anon77
R2ImageSamplingMethod	R2/R2Image.h	/^} R2ImageSamplingMethod;$/;"	t	typeref:enum:__anon76
R2Line	R2/R2Line.cpp	/^R2Line(const R2Line& line)$/;"	f	class:R2Line
R2Line	R2/R2Line.cpp	/^R2Line(const R2Point& point, const R2Vector& vector, bool normalized)$/;"	f	class:R2Line
R2Line	R2/R2Line.cpp	/^R2Line(const R2Point& point1, const R2Point& point2)$/;"	f	class:R2Line
R2Line	R2/R2Line.cpp	/^R2Line(double a, double b, double c)$/;"	f	class:R2Line
R2Line	R2/R2Line.cpp	/^R2Line(double array[3])$/;"	f	class:R2Line
R2Line	R2/R2Line.cpp	/^R2Line(double x1, double y1, double x2, double y2)$/;"	f	class:R2Line
R2Line	R2/R2Line.cpp	/^R2Line(void)$/;"	f	class:R2Line
R2Line	R2/R2Line.h	/^class R2Line {$/;"	c
R2Pixel	R2/R2Pixel.h	/^R2Pixel(const R2Pixel& pixel)$/;"	f	class:R2Pixel
R2Pixel	R2/R2Pixel.h	/^R2Pixel(const double rgba[4])$/;"	f	class:R2Pixel
R2Pixel	R2/R2Pixel.h	/^R2Pixel(double red, double green, double blue, double alpha)$/;"	f	class:R2Pixel
R2Pixel	R2/R2Pixel.h	/^R2Pixel(void)$/;"	f	class:R2Pixel
R2Pixel	R2/R2Pixel.h	/^class R2Pixel {$/;"	c
R2Point	R2/R2Point.cpp	/^R2Point(const R2Point& point)$/;"	f	class:R2Point
R2Point	R2/R2Point.cpp	/^R2Point(double array[2])$/;"	f	class:R2Point
R2Point	R2/R2Point.cpp	/^R2Point(double x, double y)$/;"	f	class:R2Point
R2Point	R2/R2Point.cpp	/^R2Point(void)$/;"	f	class:R2Point
R2Point	R2/R2Point.h	/^class R2Point {$/;"	c
R2Segment	R2/R2Segment.cpp	/^R2Segment(const R2Point& point, const R2Vector& vector)$/;"	f	class:R2Segment
R2Segment	R2/R2Segment.cpp	/^R2Segment(const R2Point& point1, const R2Point& point2)$/;"	f	class:R2Segment
R2Segment	R2/R2Segment.cpp	/^R2Segment(const R2Segment& segment)$/;"	f	class:R2Segment
R2Segment	R2/R2Segment.cpp	/^R2Segment(double x1, double y1, double x2, double y2)$/;"	f	class:R2Segment
R2Segment	R2/R2Segment.cpp	/^R2Segment(void)$/;"	f	class:R2Segment
R2Segment	R2/R2Segment.h	/^class R2Segment {$/;"	c
R2SignedDistance	R2/R2Distance.cpp	/^double R2SignedDistance(const R2Line& line, const R2Point& point)$/;"	f
R2SignedDistance	R2/R2Distance.h	/^inline double R2SignedDistance(const R2Point& point, const R2Line& line)$/;"	f
R2Vector	R2/R2Vector.cpp	/^R2Vector(const R2Vector& vector)$/;"	f	class:R2Vector
R2Vector	R2/R2Vector.cpp	/^R2Vector(double array[2])$/;"	f	class:R2Vector
R2Vector	R2/R2Vector.cpp	/^R2Vector(double x, double y)$/;"	f	class:R2Vector
R2Vector	R2/R2Vector.cpp	/^R2Vector(void)$/;"	f	class:R2Vector
R2Vector	R2/R2Vector.h	/^class R2Vector {$/;"	c
R2_IMAGE_ALPHA_CHANNEL	R2/R2Image.h	/^  R2_IMAGE_ALPHA_CHANNEL,$/;"	e	enum:__anon75
R2_IMAGE_ATOP_COMPOSITION	R2/R2Image.h	/^  R2_IMAGE_ATOP_COMPOSITION,$/;"	e	enum:__anon77
R2_IMAGE_BILINEAR_SAMPLING	R2/R2Image.h	/^  R2_IMAGE_BILINEAR_SAMPLING,$/;"	e	enum:__anon76
R2_IMAGE_BLUE_CHANNEL	R2/R2Image.h	/^  R2_IMAGE_BLUE_CHANNEL,$/;"	e	enum:__anon75
R2_IMAGE_GAUSSIAN_SAMPLING	R2/R2Image.h	/^  R2_IMAGE_GAUSSIAN_SAMPLING,$/;"	e	enum:__anon76
R2_IMAGE_GREEN_CHANNEL	R2/R2Image.h	/^  R2_IMAGE_GREEN_CHANNEL,$/;"	e	enum:__anon75
R2_IMAGE_INCLUDED	R2/R2Image.h	3;"	d
R2_IMAGE_IN_COMPOSITION	R2/R2Image.h	/^  R2_IMAGE_IN_COMPOSITION,$/;"	e	enum:__anon77
R2_IMAGE_NUM_CHANNELS	R2/R2Image.h	/^  R2_IMAGE_NUM_CHANNELS$/;"	e	enum:__anon75
R2_IMAGE_NUM_SAMPLING_METHODS	R2/R2Image.h	/^  R2_IMAGE_NUM_SAMPLING_METHODS$/;"	e	enum:__anon76
R2_IMAGE_OUT_COMPOSITION	R2/R2Image.h	/^  R2_IMAGE_OUT_COMPOSITION,$/;"	e	enum:__anon77
R2_IMAGE_OVER_COMPOSITION	R2/R2Image.h	/^  R2_IMAGE_OVER_COMPOSITION,$/;"	e	enum:__anon77
R2_IMAGE_POINT_SAMPLING	R2/R2Image.h	/^  R2_IMAGE_POINT_SAMPLING,$/;"	e	enum:__anon76
R2_IMAGE_RED_CHANNEL	R2/R2Image.h	/^  R2_IMAGE_RED_CHANNEL,$/;"	e	enum:__anon75
R2_IMAGE_XOR_COMPOSITION	R2/R2Image.h	/^  R2_IMAGE_XOR_COMPOSITION,$/;"	e	enum:__anon77
R2_INCLUDED	R2/R2.h	3;"	d
R2_PIXEL_INCLUDED	R2/R2Pixel.h	3;"	d
R2xaxis_line	R2/R2Line.h	58;"	d
R2xaxis_vector	R2/R2Vector.h	86;"	d
R2yaxis_line	R2/R2Line.h	59;"	d
R2yaxis_vector	R2/R2Vector.h	87;"	d
R2zero_point	R2/R2Point.h	76;"	d
R2zero_vector	R2/R2Vector.h	85;"	d
R3Box	R3/R3Box.cpp	/^R3Box(const R3Box& box)$/;"	f	class:R3Box
R3Box	R3/R3Box.cpp	/^R3Box(const R3Point& minpt, const R3Point& maxpt)$/;"	f	class:R3Box
R3Box	R3/R3Box.cpp	/^R3Box(double xmin, double ymin, double zmin,$/;"	f	class:R3Box
R3Box	R3/R3Box.cpp	/^R3Box(void)$/;"	f	class:R3Box
R3Box	R3/R3Box.h	/^class R3Box {$/;"	c
R3Camera	R3Scene.h	/^struct R3Camera {$/;"	s
R3Cone	R3/R3Cone.cpp	/^R3Cone(const R3Cone& cone)$/;"	f	class:R3Cone
R3Cone	R3/R3Cone.cpp	/^R3Cone(const R3Point& center, double radius, double height)$/;"	f	class:R3Cone
R3Cone	R3/R3Cone.cpp	/^R3Cone(void)$/;"	f	class:R3Cone
R3Cone	R3/R3Cone.h	/^class R3Cone {$/;"	c
R3Cylinder	R3/R3Cylinder.cpp	/^R3Cylinder(const R3Cylinder& cylinder)$/;"	f	class:R3Cylinder
R3Cylinder	R3/R3Cylinder.cpp	/^R3Cylinder(const R3Point& center, double radius, double height)$/;"	f	class:R3Cylinder
R3Cylinder	R3/R3Cylinder.cpp	/^R3Cylinder(void)$/;"	f	class:R3Cylinder
R3Cylinder	R3/R3Cylinder.h	/^class R3Cylinder {$/;"	c
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Line& line, const R3Box& box)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Line& line, const R3Plane& plane)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Line& line, const R3Ray& ray)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Line& line, const R3Segment& segment)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Line& line1, const R3Line& line2)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Plane& plane, const R3Box& box)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Plane& plane1, const R3Plane& plane2)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Point& point, const R3Box& box)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Point& point, const R3Line& line)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Point& point, const R3Plane& plane)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Point& point, const R3Ray& ray)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Point& point, const R3Segment& segment)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Point& point1, const R3Point& point2)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Ray& ray, const R3Box& box)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Ray& ray, const R3Plane& plane)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Ray& ray, const R3Segment& segment)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Ray& ray1, const R3Ray& ray2)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Segment& segment, const R3Box& box)$/;"	f
R3Distance	R3/R3Distance.cpp	/^double R3Distance(const R3Segment& segment, const R3Plane& plane)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Box& box, const R3Line& line)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Box& box, const R3Plane& plane)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Box& box, const R3Point& point)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Box& box, const R3Ray& ray)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Box& box, const R3Segment& segment)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Line& line, const R3Point& point)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Plane& plane, const R3Line& line)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Plane& plane, const R3Point& point)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Plane& plane, const R3Ray& ray)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Plane& plane, const R3Segment& segment)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Ray& ray, const R3Line& line)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Ray& ray, const R3Point& point)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Segment& segment, const R3Line& line)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Segment& segment, const R3Point& point)$/;"	f
R3Distance	R3/R3Distance.h	/^inline double R3Distance(const R3Segment& segment, const R3Ray& ray)$/;"	f
R3InitMatrix	R3/R3Matrix.cpp	/^R3InitMatrix()$/;"	f
R3Intersection	raytrace.h	/^struct R3Intersection$/;"	s
R3Light	R3Scene.h	/^struct R3Light {$/;"	s
R3LightType	R3Scene.h	/^} R3LightType;$/;"	t	typeref:enum:__anon74
R3Line	R3/R3Line.cpp	/^R3Line(const R3Line& line)$/;"	f	class:R3Line
R3Line	R3/R3Line.cpp	/^R3Line(const R3Point& point, const R3Vector& vector, bool normalized)$/;"	f	class:R3Line
R3Line	R3/R3Line.cpp	/^R3Line(const R3Point& point1, const R3Point& point2)$/;"	f	class:R3Line
R3Line	R3/R3Line.cpp	/^R3Line(double x1, double y1, double z1, double x2, double y2, double z2)$/;"	f	class:R3Line
R3Line	R3/R3Line.cpp	/^R3Line(void)$/;"	f	class:R3Line
R3Line	R3/R3Line.h	/^class R3Line {$/;"	c
R3Material	R3Scene.h	/^struct R3Material {$/;"	s
R3Matrix	R3/R3Matrix.cpp	/^R3Matrix(const R3Matrix& matrix)$/;"	f	class:R3Matrix
R3Matrix	R3/R3Matrix.cpp	/^R3Matrix(const double *a)$/;"	f	class:R3Matrix
R3Matrix	R3/R3Matrix.cpp	/^R3Matrix(double a00, double a01, double a02, double a03,$/;"	f	class:R3Matrix
R3Matrix	R3/R3Matrix.cpp	/^R3Matrix(void)$/;"	f	class:R3Matrix
R3Matrix	R3/R3Matrix.h	/^class R3Matrix {$/;"	c
R3MatrixDet2	R3/R3Matrix.cpp	/^double R3MatrixDet2(double a, double b,$/;"	f
R3MatrixDet3	R3/R3Matrix.cpp	/^double R3MatrixDet3 (double a, double b, double c, $/;"	f
R3MatrixDet4	R3/R3Matrix.cpp	/^double R3MatrixDet4 (double a, double b, double c, double d, $/;"	f
R3Mesh	R3/R3Mesh.cpp	/^R3Mesh(const R3Mesh& mesh)$/;"	f	class:R3Mesh
R3Mesh	R3/R3Mesh.cpp	/^R3Mesh(void)$/;"	f	class:R3Mesh
R3Mesh	R3/R3Mesh.h	/^struct R3Mesh {$/;"	s
R3MeshFace	R3/R3Mesh.cpp	/^R3MeshFace(const R3MeshFace& face)$/;"	f	class:R3MeshFace
R3MeshFace	R3/R3Mesh.cpp	/^R3MeshFace(const vector<R3MeshVertex *>& vertices)$/;"	f	class:R3MeshFace
R3MeshFace	R3/R3Mesh.cpp	/^R3MeshFace(void)$/;"	f	class:R3MeshFace
R3MeshFace	R3/R3Mesh.h	/^struct R3MeshFace {$/;"	s
R3MeshVertex	R3/R3Mesh.cpp	/^R3MeshVertex(const R3MeshVertex& vertex)$/;"	f	class:R3MeshVertex
R3MeshVertex	R3/R3Mesh.cpp	/^R3MeshVertex(const R3Point& position, const R3Vector& normal, const R2Point& texcoords)$/;"	f	class:R3MeshVertex
R3MeshVertex	R3/R3Mesh.cpp	/^R3MeshVertex(void)$/;"	f	class:R3MeshVertex
R3MeshVertex	R3/R3Mesh.h	/^struct R3MeshVertex {$/;"	s
R3Node	R3Scene.h	/^struct R3Node {$/;"	s
R3Plane	R3/R3Plane.cpp	/^R3Plane(const R3Plane& plane)$/;"	f	class:R3Plane
R3Plane	R3/R3Plane.cpp	/^R3Plane(const R3Point *points, int npoints)$/;"	f	class:R3Plane
R3Plane	R3/R3Plane.cpp	/^R3Plane(const R3Point& point, const R3Line& line)$/;"	f	class:R3Plane
R3Plane	R3/R3Plane.cpp	/^R3Plane(const R3Point& point, const R3Vector& normal)$/;"	f	class:R3Plane
R3Plane	R3/R3Plane.cpp	/^R3Plane(const R3Point& point, const R3Vector& vector1, const R3Vector& vector2)$/;"	f	class:R3Plane
R3Plane	R3/R3Plane.cpp	/^R3Plane(const R3Point& point1, const R3Point& point2, const R3Point& point3)$/;"	f	class:R3Plane
R3Plane	R3/R3Plane.cpp	/^R3Plane(const R3Vector& normal, double d)$/;"	f	class:R3Plane
R3Plane	R3/R3Plane.cpp	/^R3Plane(const double a[4])$/;"	f	class:R3Plane
R3Plane	R3/R3Plane.cpp	/^R3Plane(double a, double b, double c, double d)$/;"	f	class:R3Plane
R3Plane	R3/R3Plane.cpp	/^R3Plane(void)$/;"	f	class:R3Plane
R3Plane	R3/R3Plane.h	/^class R3Plane {$/;"	c
R3Point	R3/R3Point.cpp	/^R3Point(const R3Point& point)$/;"	f	class:R3Point
R3Point	R3/R3Point.cpp	/^R3Point(const double array[3])$/;"	f	class:R3Point
R3Point	R3/R3Point.cpp	/^R3Point(double x, double y, double z)$/;"	f	class:R3Point
R3Point	R3/R3Point.cpp	/^R3Point(void)$/;"	f	class:R3Point
R3Point	R3/R3Point.h	/^class R3Point {$/;"	c
R3Ray	R3/R3Ray.cpp	/^R3Ray(const R3Point& point, const R3Vector& vector, bool normalized)$/;"	f	class:R3Ray
R3Ray	R3/R3Ray.cpp	/^R3Ray(const R3Point& point1, const R3Point& point2)$/;"	f	class:R3Ray
R3Ray	R3/R3Ray.cpp	/^R3Ray(const R3Ray& ray)$/;"	f	class:R3Ray
R3Ray	R3/R3Ray.cpp	/^R3Ray(double x1, double y1, double z1, double x2, double y2, double z2)$/;"	f	class:R3Ray
R3Ray	R3/R3Ray.cpp	/^R3Ray(void)$/;"	f	class:R3Ray
R3Ray	R3/R3Ray.h	/^class R3Ray {$/;"	c
R3Rgb	R3Scene.h	3;"	d
R3Scene	R3Scene.cpp	/^R3Scene(void)$/;"	f	class:R3Scene
R3Scene	R3Scene.h	/^struct R3Scene {$/;"	s
R3Segment	R3/R3Segment.cpp	/^R3Segment(const R3Point& point, const R3Vector& vector)$/;"	f	class:R3Segment
R3Segment	R3/R3Segment.cpp	/^R3Segment(const R3Point& point1, const R3Point& point2)$/;"	f	class:R3Segment
R3Segment	R3/R3Segment.cpp	/^R3Segment(const R3Segment& segment)$/;"	f	class:R3Segment
R3Segment	R3/R3Segment.cpp	/^R3Segment(double x1, double y1, double z1, double x2, double y2, double z2)$/;"	f	class:R3Segment
R3Segment	R3/R3Segment.cpp	/^R3Segment(void)$/;"	f	class:R3Segment
R3Segment	R3/R3Segment.h	/^class R3Segment {$/;"	c
R3Shape	R3Scene.h	/^struct R3Shape {$/;"	s
R3ShapeType	R3Scene.h	/^} R3ShapeType;$/;"	t	typeref:enum:__anon73
R3SignedDistance	R3/R3Distance.cpp	/^double R3SignedDistance(const R3Plane& plane, const R3Box& box)$/;"	f
R3SignedDistance	R3/R3Distance.cpp	/^double R3SignedDistance(const R3Plane& plane, const R3Line& line)$/;"	f
R3SignedDistance	R3/R3Distance.cpp	/^double R3SignedDistance(const R3Plane& plane, const R3Point& point)$/;"	f
R3SignedDistance	R3/R3Distance.cpp	/^double R3SignedDistance(const R3Plane& plane, const R3Ray& ray)$/;"	f
R3SignedDistance	R3/R3Distance.cpp	/^double R3SignedDistance(const R3Plane& plane, const R3Segment& segment)$/;"	f
R3SignedDistance	R3/R3Distance.cpp	/^double R3SignedDistance(const R3Plane& plane1, const R3Plane& plane2)$/;"	f
R3Sphere	R3/R3Sphere.cpp	/^R3Sphere(const R3Point& center, double radius)$/;"	f	class:R3Sphere
R3Sphere	R3/R3Sphere.cpp	/^R3Sphere(const R3Sphere& sphere)$/;"	f	class:R3Sphere
R3Sphere	R3/R3Sphere.cpp	/^R3Sphere(void)$/;"	f	class:R3Sphere
R3Sphere	R3/R3Sphere.h	/^class R3Sphere {$/;"	c
R3SquaredDistance	R3/R3Distance.cpp	/^double R3SquaredDistance(const R3Point& point1, const R3Point& point2)$/;"	f
R3StopMatrix	R3/R3Matrix.cpp	/^R3StopMatrix()$/;"	f
R3Vector	R3/R3Vector.cpp	/^R3Vector(const R3Vector& vector)$/;"	f	class:R3Vector
R3Vector	R3/R3Vector.cpp	/^R3Vector(const double array[3])$/;"	f	class:R3Vector
R3Vector	R3/R3Vector.cpp	/^R3Vector(double pitch, double yaw)$/;"	f	class:R3Vector
R3Vector	R3/R3Vector.cpp	/^R3Vector(double x, double y, double z)$/;"	f	class:R3Vector
R3Vector	R3/R3Vector.cpp	/^R3Vector(void)$/;"	f	class:R3Vector
R3Vector	R3/R3Vector.h	/^class R3Vector {$/;"	c
R3_AREA_LIGHT	R3Scene.h	/^  R3_AREA_LIGHT,$/;"	e	enum:__anon74
R3_BOX_SHAPE	R3Scene.h	/^  R3_BOX_SHAPE,$/;"	e	enum:__anon73
R3_CONE_SHAPE	R3Scene.h	/^  R3_CONE_SHAPE,$/;"	e	enum:__anon73
R3_CYLINDER_SHAPE	R3Scene.h	/^  R3_CYLINDER_SHAPE,$/;"	e	enum:__anon73
R3_DIRECTIONAL_LIGHT	R3Scene.h	/^  R3_DIRECTIONAL_LIGHT,$/;"	e	enum:__anon74
R3_INCLUDED	R3/R3.h	3;"	d
R3_MESH_SHAPE	R3Scene.h	/^  R3_MESH_SHAPE,$/;"	e	enum:__anon73
R3_NUM_LIGHT_TYPES	R3Scene.h	/^  R3_NUM_LIGHT_TYPES$/;"	e	enum:__anon74
R3_NUM_SHAPE_TYPES	R3Scene.h	/^  R3_NUM_SHAPE_TYPES$/;"	e	enum:__anon73
R3_POINT_LIGHT	R3Scene.h	/^  R3_POINT_LIGHT,$/;"	e	enum:__anon74
R3_SEGMENT_SHAPE	R3Scene.h	/^  R3_SEGMENT_SHAPE,$/;"	e	enum:__anon73
R3_SPHERE_SHAPE	R3Scene.h	/^  R3_SPHERE_SHAPE,$/;"	e	enum:__anon73
R3_SPOT_LIGHT	R3Scene.h	/^  R3_SPOT_LIGHT,$/;"	e	enum:__anon74
R3_X	R3/R3.h	25;"	d
R3_Y	R3/R3.h	26;"	d
R3_Z	R3/R3.h	27;"	d
R3xaxis_line	R3/R3Line.h	55;"	d
R3xaxis_ray	R3/R3Ray.h	57;"	d
R3xaxis_vector	R3/R3Vector.h	93;"	d
R3xy_plane	R3/R3Plane.h	64;"	d
R3xz_plane	R3/R3Plane.h	63;"	d
R3yaxis_line	R3/R3Line.h	56;"	d
R3yaxis_ray	R3/R3Ray.h	58;"	d
R3yaxis_vector	R3/R3Vector.h	94;"	d
R3yz_plane	R3/R3Plane.h	65;"	d
R3zaxis_line	R3/R3Line.h	57;"	d
R3zaxis_ray	R3/R3Ray.h	59;"	d
R3zaxis_vector	R3/R3Vector.h	95;"	d
R3zero_point	R3/R3Point.h	81;"	d
R3zero_vector	R3/R3Vector.h	92;"	d
RANGE_MASK	jpeg/jdct.h	78;"	d
RAYPRO_OBJS	Makefile	/^RAYPRO_OBJS=$(RAYPRO_SRCS:.cpp=.o)$/;"	m
RAYPRO_SRCS	Makefile	/^RAYPRO_SRCS=raypro.cpp raytrace.cpp R3Scene.cpp$/;"	m
RAYVIEW_OBJS	Makefile	/^RAYVIEW_OBJS=$(RAYVIEW_SRCS:.cpp=.o)$/;"	m
RAYVIEW_SRCS	Makefile	/^RAYVIEW_SRCS=minecraft.cpp raytrace.cpp R3Scene.cpp$/;"	m
READ_BINARY	jpeg/cdjpeg.h	156;"	d
READ_BINARY	jpeg/cdjpeg.h	160;"	d
READ_BINARY	jpeg/cdjpeg.h	163;"	d
READ_BINARY	jpeg/jmemdos.c	75;"	d	file:
READ_BINARY	jpeg/jmemdos.c	77;"	d	file:
READ_BINARY	jpeg/jmemname.c	30;"	d	file:
READ_BINARY	jpeg/jmemname.c	34;"	d	file:
READ_BINARY	jpeg/jmemname.c	37;"	d	file:
READ_BINARY	jpeg/rdjpgcom.c	35;"	d	file:
READ_BINARY	jpeg/rdjpgcom.c	38;"	d	file:
READ_BINARY	jpeg/rdjpgcom.c	40;"	d	file:
READ_BINARY	jpeg/wrjpgcom.c	38;"	d	file:
READ_BINARY	jpeg/wrjpgcom.c	42;"	d	file:
READ_BINARY	jpeg/wrjpgcom.c	45;"	d	file:
RGBQUAD	R2/R2Image.cpp	/^} RGBQUAD;$/;"	t	typeref:struct:tagRGBQUAD	file:
RGBTRIPLE	R2/R2Image.cpp	/^} RGBTRIPLE;$/;"	t	typeref:struct:tagRGBTRIPLE	file:
RGB_BLUE	jpeg/jmorecfg.h	316;"	d
RGB_GREEN	jpeg/jmorecfg.h	315;"	d
RGB_PIXELSIZE	jpeg/jmorecfg.h	317;"	d
RGB_RED	jpeg/jmorecfg.h	314;"	d
RIGHT_SHIFT	jpeg/jpegint.h	284;"	d
RIGHT_SHIFT	jpeg/jpegint.h	290;"	d
RM	jpeg/Makefile	/^RM= rm -f$/;"	m
RW_BINARY	jpeg/jmemname.c	31;"	d	file:
RW_BINARY	jpeg/jmemname.c	35;"	d	file:
RW_BINARY	jpeg/jmemname.c	38;"	d	file:
R_CB_OFF	jpeg/jccolor.c	72;"	d	file:
R_CR_OFF	jpeg/jccolor.c	75;"	d	file:
R_SCALE	jpeg/jquant2.c	73;"	d	file:
R_Y_OFF	jpeg/jccolor.c	69;"	d	file:
Radius	R3/R3Cone.h	/^Radius(void) const$/;"	f	class:R3Cone
Radius	R3/R3Cylinder.h	/^Radius(void) const$/;"	f	class:R3Cylinder
Radius	R3/R3Mesh.cpp	/^Radius(void) const$/;"	f	class:R3Mesh
Radius	R3/R3Sphere.h	/^Radius(void) const$/;"	f	class:R3Sphere
RandomDither	R2/R2Image.cpp	/^RandomDither(int nbits)$/;"	f	class:R2Image
RandomNoise	R3/R3Mesh.cpp	/^RandomNoise(double factor)$/;"	f	class:R3Mesh
Ray	R3/R3Segment.h	/^Ray(void) const$/;"	f	class:R3Segment
RayCast	raytrace.cpp	/^void RayCast(R3Scene *scene, R2Image *image, int width, int height)$/;"	f
Read	R2/R2Image.cpp	/^Read(const char *filename)$/;"	f	class:R2Image
Read	R3/R3Mesh.cpp	/^Read(const char *filename)$/;"	f	class:R3Mesh
Read	R3Scene.cpp	/^Read(const char *filename, R3Node *node)$/;"	f	class:R3Scene
ReadBMP	R2/R2Image.cpp	/^ReadBMP(const char *filename)$/;"	f	class:R2Image
ReadImage	R3/R3Mesh.cpp	/^ReadImage(const char *filename)$/;"	f	class:R3Mesh
ReadJPEG	R2/R2Image.cpp	/^ReadJPEG(const char *filename)$/;"	f	class:R2Image
ReadOK	jpeg/rdbmp.c	45;"	d	file:
ReadOK	jpeg/rdppm.c	55;"	d	file:
ReadOK	jpeg/rdtarga.c	41;"	d	file:
ReadOff	R3/R3Mesh.cpp	/^ReadOff(const char *filename)$/;"	f	class:R3Mesh
ReadPPM	R2/R2Image.cpp	/^ReadPPM(const char *filename)$/;"	f	class:R2Image
ReadRay	R3/R3Mesh.cpp	/^ReadRay(const char *filename)$/;"	f	class:R3Mesh
ReadScene	minecraft.cpp	/^R3Scene *ReadScene(const char *filename)$/;"	f
ReadScene	raypro.cpp	/^ReadScene(const char *filename, int width, int height)$/;"	f	file:
Red	R2/R2Pixel.h	/^Red(void) const$/;"	f	class:R2Pixel
RenderImage	raytrace.cpp	/^R2Image *RenderImage(R3Scene *scene, int width, int height, int max_depth,$/;"	f
Reposition	R3/R3Cone.cpp	/^Reposition(const R3Point& center)$/;"	f	class:R3Cone
Reposition	R3/R3Cylinder.cpp	/^Reposition(const R3Point& center)$/;"	f	class:R3Cylinder
Reposition	R3/R3Line.h	/^Reposition(const R3Point& point)$/;"	f	class:R3Line
Reposition	R3/R3Plane.cpp	/^Reposition(const R3Point& point)$/;"	f	class:R3Plane
Reposition	R3/R3Ray.h	/^Reposition(const R3Point& point)$/;"	f	class:R3Ray
Reposition	R3/R3Segment.cpp	/^Reposition(int k, const R3Point& point)$/;"	f	class:R3Segment
Reposition	R3/R3Sphere.cpp	/^Reposition(const R3Point& center)$/;"	f	class:R3Sphere
Reset	R2/R2Line.cpp	/^Reset(const R2Point& point, const R2Vector& vector, bool normalized)$/;"	f	class:R2Line
Reset	R2/R2Pixel.h	/^Reset (double red, double green, double blue, double alpha)$/;"	f	class:R2Pixel
Reset	R2/R2Point.h	/^Reset(double x, double y) $/;"	f	class:R2Point
Reset	R2/R2Segment.cpp	/^Reset(const R2Point& point1, const R2Point& point2)$/;"	f	class:R2Segment
Reset	R2/R2Vector.h	/^Reset(double x, double y) $/;"	f	class:R2Vector
Reset	R3/R3Box.cpp	/^Reset(const R3Point& min, const R3Point& max)$/;"	f	class:R3Box
Reset	R3/R3Line.h	/^Reset(const R3Point& point, const R3Vector& vector, bool normalized)$/;"	f	class:R3Line
Reset	R3/R3Plane.cpp	/^Reset(const R3Point& point, const R3Vector& normal) $/;"	f	class:R3Plane
Reset	R3/R3Point.h	/^Reset(double x, double y, double z) $/;"	f	class:R3Point
Reset	R3/R3Ray.h	/^Reset(const R3Point& point, const R3Vector& vector, bool normalized)$/;"	f	class:R3Ray
Reset	R3/R3Segment.cpp	/^Reset(const R3Point& point1, const R3Point& point2)$/;"	f	class:R3Segment
Reset	R3/R3Vector.h	/^Reset(double x, double y, double z) $/;"	f	class:R3Vector
Resize	R3/R3Cone.cpp	/^Resize(double radius, double height) $/;"	f	class:R3Cone
Resize	R3/R3Cylinder.cpp	/^Resize(double radius, double height) $/;"	f	class:R3Cylinder
Resize	R3/R3Sphere.cpp	/^Resize(double radius) $/;"	f	class:R3Sphere
Root	R3Scene.h	/^Root(void) const$/;"	f	class:R3Scene
Rotate	R2/R2Image.cpp	/^Rotate(double angle, int sampling_method)$/;"	f	class:R2Image
Rotate	R2/R2Line.cpp	/^Rotate(const R2Point& origin, double angle)$/;"	f	class:R2Line
Rotate	R2/R2Point.cpp	/^Rotate(const R2Point& origin, double angle)$/;"	f	class:R2Point
Rotate	R2/R2Segment.cpp	/^Rotate(const R2Point& origin, double angle)$/;"	f	class:R2Segment
Rotate	R2/R2Vector.cpp	/^Rotate(double angle)$/;"	f	class:R2Vector
Rotate	R3/R3Matrix.cpp	/^Rotate(const R3Vector& axis, double radians)$/;"	f	class:R3Matrix
Rotate	R3/R3Matrix.cpp	/^Rotate(const R3Vector& from, const R3Vector& to)$/;"	f	class:R3Matrix
Rotate	R3/R3Matrix.cpp	/^Rotate(const R3Vector& radians)$/;"	f	class:R3Matrix
Rotate	R3/R3Matrix.cpp	/^Rotate(int axis, double radians)$/;"	f	class:R3Matrix
Rotate	R3/R3Mesh.cpp	/^Rotate(double angle, const R3Line& axis)$/;"	f	class:R3Mesh
Rotate	R3/R3Point.cpp	/^Rotate(const R3Line& axis, double theta)$/;"	f	class:R3Point
Rotate	R3/R3Point.cpp	/^Rotate(const R3Vector& axis, double theta)$/;"	f	class:R3Point
Rotate	R3/R3Vector.cpp	/^Rotate(const R3Vector& axis, double theta)$/;"	f	class:R3Vector
SAVED_COEFS	jpeg/jdcoefct.c	58;"	d	file:
SAVE_IMAGE_COMMAND	minecraft.cpp	/^  SAVE_IMAGE_COMMAND,$/;"	e	enum:__anon72	file:
SAVE_MARKERS_SUPPORTED	jpeg/jmorecfg.h	288;"	d
SCALEBITS	jpeg/jccolor.c	58;"	d	file:
SCALEBITS	jpeg/jdcolor.c	60;"	d	file:
SCALEBITS	jpeg/jdmerge.c	72;"	d	file:
SEEK_SET	jpeg/jmemansi.c	26;"	d	file:
SEEK_SET	jpeg/jmemname.c	26;"	d	file:
SET_COMP	jpeg/jcparam.c	396;"	d	file:
SHELL	jpeg/Makefile	/^SHELL= \/bin\/sh$/;"	m
SHIFT_TEMPS	jpeg/jpegint.h	283;"	d
SHIFT_TEMPS	jpeg/jpegint.h	289;"	d
SIGN	minecraft.cpp	11;"	d	file:
SIZEOF	jpeg/jinclude.h	80;"	d
SNAPPED_CURSOR	minecraft.cpp	/^static bool SNAPPED_CURSOR = false;$/;"	v	file:
SOURCES	jpeg/Makefile	/^SOURCES= $(LIBSOURCES) $(SYSDEPSOURCES) $(APPSOURCES)$/;"	m
SQ	raytrace.cpp	11;"	d	file:
SRC_HANDLE	jpeg/jmemdos.c	474;"	d	file:
SRC_OFFSET	jpeg/jmemdos.c	475;"	d	file:
SRC_PAGE	jpeg/jmemdos.c	476;"	d	file:
SRC_PTR	jpeg/jmemdos.c	477;"	d	file:
SRC_TYPE	jpeg/jmemdos.c	473;"	d	file:
STEPSIZE	jpeg/jquant2.c	1120;"	d	file:
STEPSIZE	jpeg/jquant2.c	1134;"	d	file:
STEP_C0	jpeg/jquant2.c	807;"	d	file:
STEP_C1	jpeg/jquant2.c	808;"	d	file:
STEP_C2	jpeg/jquant2.c	809;"	d	file:
SYSDEPMEM	jpeg/Makefile	/^SYSDEPMEM= jmemnobs.$(O)$/;"	m
SYSDEPSOURCES	jpeg/Makefile	/^SYSDEPSOURCES= jmemansi.c jmemname.c jmemnobs.c jmemdos.c jmemmac.c$/;"	m
Scale	R2/R2Image.cpp	/^Scale(double sx, double sy, int sampling_method)$/;"	f	class:R2Image
Scale	R2/R2Vector.cpp	/^Scale(double a)$/;"	f	class:R2Vector
Scale	R3/R3Matrix.cpp	/^Scale(const R3Vector& scale)$/;"	f	class:R3Matrix
Scale	R3/R3Matrix.cpp	/^Scale(double scale)$/;"	f	class:R3Matrix
Scale	R3/R3Matrix.cpp	/^Scale(int axis, double scale)$/;"	f	class:R3Matrix
Scale	R3/R3Mesh.cpp	/^Scale(double sx, double sy, double sz)$/;"	f	class:R3Mesh
Se	jpeg/jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_compress_struct
Se	jpeg/jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_decompress_struct
Se	jpeg/jpeglib.h	/^  int Ss, Se;			\/* progressive JPEG spectral selection parms *\/$/;"	m	struct:__anon54
SetAlpha	R2/R2Pixel.h	/^SetAlpha(double alpha)$/;"	f	class:R2Pixel
SetBlue	R2/R2Pixel.h	/^SetBlue(double blue)$/;"	f	class:R2Pixel
SetCoord	R2/R2Point.h	/^SetCoord (int dim, double coord) $/;"	f	class:R2Point
SetCoord	R2/R2Vector.h	/^SetCoord (int dim, double coord) $/;"	f	class:R2Vector
SetCoord	R3/R3Point.h	/^SetCoord (int dim, double coord) $/;"	f	class:R3Point
SetCoord	R3/R3Vector.h	/^SetCoord (int dim, double coord) $/;"	f	class:R3Vector
SetEnd	R2/R2Segment.h	/^SetEnd(const R2Point& point)$/;"	f	class:R2Segment
SetGreen	R2/R2Pixel.h	/^SetGreen(double green)$/;"	f	class:R2Pixel
SetPixel	R2/R2Image.h	/^SetPixel(int x, int y, const R2Pixel& pixel)$/;"	f	class:R2Image
SetPoint	R2/R2Segment.cpp	/^SetPoint(const R2Point& point, int k)$/;"	f	class:R2Segment
SetRed	R2/R2Pixel.h	/^SetRed(double red)$/;"	f	class:R2Pixel
SetStart	R2/R2Segment.h	/^SetStart(const R2Point& point)$/;"	f	class:R2Segment
SetX	R2/R2Point.h	/^SetX (double x) $/;"	f	class:R2Point
SetX	R2/R2Vector.h	/^SetX (double x) $/;"	f	class:R2Vector
SetX	R3/R3Point.h	/^SetX (double x) $/;"	f	class:R3Point
SetX	R3/R3Vector.h	/^SetX (double x) $/;"	f	class:R3Vector
SetY	R2/R2Point.h	/^SetY (double y) $/;"	f	class:R2Point
SetY	R2/R2Vector.h	/^SetY (double y) $/;"	f	class:R2Vector
SetY	R3/R3Point.h	/^SetY (double y) $/;"	f	class:R3Point
SetY	R3/R3Vector.h	/^SetY (double y) $/;"	f	class:R3Vector
SetZ	R3/R3Point.h	/^SetZ (double z) $/;"	f	class:R3Point
SetZ	R3/R3Vector.h	/^SetZ (double z) $/;"	f	class:R3Vector
Sharpen	R2/R2Image.cpp	/^Sharpen()$/;"	f	class:R2Image
Sharpen	R3/R3Mesh.cpp	/^Sharpen(void)$/;"	f	class:R3Mesh
ShortestAxis	R3/R3Box.cpp	/^ShortestAxis (void) const$/;"	f	class:R3Box
ShortestAxisLength	R3/R3Box.cpp	/^ShortestAxisLength (void) const$/;"	f	class:R3Box
ShowUsage	raypro.cpp	/^ShowUsage(void)$/;"	f	file:
Smooth	R3/R3Mesh.cpp	/^Smooth(void)$/;"	f	class:R3Mesh
SmoothBilateral	R3/R3Mesh.cpp	/^SmoothBilateral(void)$/;"	f	class:R3Mesh
SplitFaces	R3/R3Mesh.cpp	/^SplitFaces(void)$/;"	f	class:R3Mesh
SplitLongEdges	R3/R3Mesh.cpp	/^SplitLongEdges(double max_edge_length)$/;"	f	class:R3Mesh
Ss	jpeg/jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_compress_struct
Ss	jpeg/jpeglib.h	/^  int Ss, Se, Ah, Al;		\/* progressive JPEG parameters for scan *\/$/;"	m	struct:jpeg_decompress_struct
Ss	jpeg/jpeglib.h	/^  int Ss, Se;			\/* progressive JPEG spectral selection parms *\/$/;"	m	struct:__anon54
StarFaces	R3/R3Mesh.cpp	/^StarFaces(double factor)$/;"	f	class:R3Mesh
Start	R2/R2Segment.h	/^Start (void) const$/;"	f	class:R2Segment
Start	R3/R3Ray.h	/^Start(void) const$/;"	f	class:R3Ray
Start	R3/R3Segment.h	/^Start (void) const$/;"	f	class:R3Segment
SubdivideCatmullClark	R3/R3Mesh.cpp	/^SubdivideCatmullClark(void)$/;"	f	class:R3Mesh
SubdivideLoop	R3/R3Mesh.cpp	/^SubdivideLoop(void)$/;"	f	class:R3Mesh
Subtract	R2/R2Image.cpp	/^Subtract(const R2Image& image)$/;"	f	class:R2Image
Subtract	R3/R3Matrix.cpp	/^Subtract(const R3Matrix& a)$/;"	f	class:R3Matrix
Subtract	R3/R3Mesh.cpp	/^Subtract(const R3Mesh& mesh)$/;"	f	class:R3Mesh
SurfaceOfRevolution	R3/R3Mesh.cpp	/^SurfaceOfRevolution(const R3Mesh& profile_curve, $/;"	f	class:R3Mesh
SurfaceSweep	R3/R3Mesh.cpp	/^SurfaceSweep(const R3Mesh& crosssection_polygon, const R3Mesh& centerline_curve)$/;"	f	class:R3Mesh
T	R2/R2Segment.h	/^T(const R2Point& point) const$/;"	f	class:R2Segment
T	R3/R3Ray.cpp	/^T(const R3Point& point) const$/;"	f	class:R3Ray
T	R3/R3Segment.cpp	/^T(const R3Point& point) const$/;"	f	class:R3Segment
TABLE_SIZE	jpeg/jccolor.c	78;"	d	file:
TEMP_DIRECTORY	jpeg/jmemname.c	70;"	d	file:
TEMP_FILE_NAME	jpeg/jmemmac.c	68;"	d	file:
TEMP_FILE_NAME	jpeg/jmemname.c	122;"	d	file:
TEMP_FILE_NAME	jpeg/jmemname.c	78;"	d	file:
TEMP_NAME_LENGTH	jpeg/jmemsys.h	116;"	d
TESTFILES	jpeg/Makefile	/^TESTFILES= testorig.jpg testimg.ppm testimg.bmp testimg.jpg testprog.jpg \\$/;"	m
TRACEMS	jpeg/jerror.h	252;"	d
TRACEMS1	jpeg/jerror.h	255;"	d
TRACEMS2	jpeg/jerror.h	259;"	d
TRACEMS3	jpeg/jerror.h	264;"	d
TRACEMS4	jpeg/jerror.h	269;"	d
TRACEMS5	jpeg/jerror.h	274;"	d
TRACEMS8	jpeg/jerror.h	280;"	d
TRACEMSS	jpeg/jerror.h	286;"	d
TRANSFORMS_SUPPORTED	jpeg/transupp.h	22;"	d
TROBJECTS	jpeg/Makefile	/^TROBJECTS= jpegtran.$(O) rdswitch.$(O) cdjpeg.$(O) transupp.$(O)$/;"	m
TRUE	jpeg/jmorecfg.h	233;"	d
TRUECOLOR	jpeg/rdrle.c	/^  { GRAYSCALE, MAPPEDGRAY, PSEUDOCOLOR, TRUECOLOR, DIRECTCOLOR } rle_kind;$/;"	e	enum:__anon37	file:
TosRGB	R2/R2Image.cpp	/^TosRGB() {$/;"	f	class:R2Image
Transform	R3/R3Box.cpp	/^Transform (const R3Matrix& matrix)$/;"	f	class:R3Box
Transform	R3/R3Line.cpp	/^Transform (const R3Matrix& matrix)$/;"	f	class:R3Line
Transform	R3/R3Matrix.h	/^Transform(const R3Matrix& a)$/;"	f	class:R3Matrix
Transform	R3/R3Plane.cpp	/^Transform (const R3Matrix& matrix)$/;"	f	class:R3Plane
Transform	R3/R3Point.cpp	/^Transform(const R3Matrix& matrix)$/;"	f	class:R3Point
Transform	R3/R3Ray.cpp	/^Transform (const R3Matrix& matrix)$/;"	f	class:R3Ray
Transform	R3/R3Segment.cpp	/^Transform (const R3Matrix& matrix)$/;"	f	class:R3Segment
Transform	R3/R3Vector.cpp	/^Transform(const R3Matrix& matrix)$/;"	f	class:R3Vector
Translate	R2/R2Line.cpp	/^Translate(const R2Vector& vector)$/;"	f	class:R2Line
Translate	R2/R2Point.h	/^Translate (const R2Vector& vector) $/;"	f	class:R2Point
Translate	R2/R2Segment.cpp	/^Translate(const R2Vector& vector)$/;"	f	class:R2Segment
Translate	R3/R3Box.cpp	/^Translate(const R3Vector& vector)$/;"	f	class:R3Box
Translate	R3/R3Cone.cpp	/^Translate(const R3Vector& vector)$/;"	f	class:R3Cone
Translate	R3/R3Cylinder.cpp	/^Translate(const R3Vector& vector)$/;"	f	class:R3Cylinder
Translate	R3/R3Line.h	/^Translate(const R3Vector& vector)$/;"	f	class:R3Line
Translate	R3/R3Matrix.cpp	/^Translate(const R3Vector& offset)$/;"	f	class:R3Matrix
Translate	R3/R3Matrix.cpp	/^Translate(double offset)$/;"	f	class:R3Matrix
Translate	R3/R3Matrix.cpp	/^Translate(int axis, double offset)$/;"	f	class:R3Matrix
Translate	R3/R3Mesh.cpp	/^Translate(double dx, double dy, double dz)$/;"	f	class:R3Mesh
Translate	R3/R3Plane.cpp	/^Translate(const R3Vector& vector) $/;"	f	class:R3Plane
Translate	R3/R3Point.cpp	/^Translate (const R3Vector& vector) $/;"	f	class:R3Point
Translate	R3/R3Ray.h	/^Translate(const R3Vector& vector)$/;"	f	class:R3Ray
Translate	R3/R3Segment.cpp	/^Translate(const R3Vector& vector)$/;"	f	class:R3Segment
Translate	R3/R3Sphere.cpp	/^Translate(const R3Vector& vector)$/;"	f	class:R3Sphere
Transpose	R3/R3Matrix.cpp	/^Transpose(void) const$/;"	f	class:R3Matrix
Truncate	R3/R3Mesh.cpp	/^Truncate(double t)$/;"	f	class:R3Mesh
UCH	jpeg/rdbmp.c	33;"	d	file:
UCH	jpeg/rdbmp.c	37;"	d	file:
UCH	jpeg/rdbmp.c	40;"	d	file:
UCH	jpeg/rdppm.c	43;"	d	file:
UCH	jpeg/rdppm.c	47;"	d	file:
UCH	jpeg/rdppm.c	50;"	d	file:
UCH	jpeg/rdtarga.c	29;"	d	file:
UCH	jpeg/rdtarga.c	33;"	d	file:
UCH	jpeg/rdtarga.c	36;"	d	file:
UINT16	jpeg/jmorecfg.h	/^typedef unsigned int UINT16;$/;"	t
UINT16	jpeg/jmorecfg.h	/^typedef unsigned short UINT16;$/;"	t
UINT8	jpeg/jmorecfg.h	/^typedef char UINT8;$/;"	t
UINT8	jpeg/jmorecfg.h	/^typedef short UINT8;$/;"	t
UINT8	jpeg/jmorecfg.h	/^typedef unsigned char UINT8;$/;"	t
UNAME	Makefile	/^UNAME := $(shell uname)$/;"	m
UPSAMPLE_MERGING_SUPPORTED	jpeg/jmorecfg.h	292;"	d
UPSAMPLE_SCALING_SUPPORTED	jpeg/jmorecfg.h	291;"	d
USE_OPENGL32	cos426_opengl.h	5;"	d
U_CHAR	jpeg/rdbmp.c	/^typedef char U_CHAR;$/;"	t	file:
U_CHAR	jpeg/rdbmp.c	/^typedef unsigned char U_CHAR;$/;"	t	file:
U_CHAR	jpeg/rdppm.c	/^typedef char U_CHAR;$/;"	t	file:
U_CHAR	jpeg/rdppm.c	/^typedef unsigned char U_CHAR;$/;"	t	file:
U_CHAR	jpeg/rdtarga.c	/^typedef char U_CHAR;$/;"	t	file:
U_CHAR	jpeg/rdtarga.c	/^typedef unsigned char U_CHAR;$/;"	t	file:
Union	R3/R3Box.cpp	/^Union (const R3Box& box) $/;"	f	class:R3Box
Union	R3/R3Box.cpp	/^Union (const R3Point& point) $/;"	f	class:R3Box
Union	R3/R3Mesh.cpp	/^Union(const R3Mesh& mesh)$/;"	f	class:R3Mesh
Update	R3/R3Mesh.cpp	/^Update(void)$/;"	f	class:R3Mesh
UpdateBBox	R3/R3Mesh.cpp	/^UpdateBBox(void)$/;"	f	class:R3Mesh
UpdateCurvature	R3/R3Mesh.cpp	/^UpdateCurvature(void)$/;"	f	class:R3MeshVertex
UpdateFacePlanes	R3/R3Mesh.cpp	/^UpdateFacePlanes(void)$/;"	f	class:R3Mesh
UpdateNormal	R3/R3Mesh.cpp	/^UpdateNormal(void)$/;"	f	class:R3MeshVertex
UpdatePlane	R3/R3Mesh.cpp	/^UpdatePlane(void)$/;"	f	class:R3MeshFace
UpdateVertexCurvatures	R3/R3Mesh.cpp	/^UpdateVertexCurvatures(void)$/;"	f	class:R3Mesh
UpdateVertexNormals	R3/R3Mesh.cpp	/^UpdateVertexNormals(void)$/;"	f	class:R3Mesh
Vector	R2/R2Line.h	/^Vector(void) const$/;"	f	class:R2Line
Vector	R2/R2Point.cpp	/^Vector(void) const$/;"	f	class:R2Point
Vector	R2/R2Segment.h	/^Vector(void) const$/;"	f	class:R2Segment
Vector	R3/R3Line.h	/^Vector(void) const$/;"	f	class:R3Line
Vector	R3/R3Point.cpp	/^Vector(void) const$/;"	f	class:R3Point
Vector	R3/R3Ray.h	/^Vector(void) const$/;"	f	class:R3Ray
Vector	R3/R3Segment.h	/^Vector(void) const$/;"	f	class:R3Segment
Vertex	R3/R3Mesh.h	/^Vertex(int k) const$/;"	f	class:R3Mesh
Volume	R3/R3Cone.cpp	/^Volume(void) const$/;"	f	class:R3Cone
Volume	R3/R3Cylinder.cpp	/^Volume(void) const$/;"	f	class:R3Cylinder
Volume	R3/R3Sphere.cpp	/^Volume(void) const$/;"	f	class:R3Sphere
WARNMS	jpeg/jerror.h	238;"	d
WARNMS1	jpeg/jerror.h	241;"	d
WARNMS2	jpeg/jerror.h	245;"	d
WINGDIAPI	GLUT.windows/glut.h	39;"	d
WINGDIAPI	GLUT.windows/glut.h	40;"	d
WINGDIAPI	GLUT.windows/glut.h	45;"	d
WINGDIAPI	GLUT.windows/glut.h	704;"	d
WRITE_BINARY	jpeg/cdjpeg.h	157;"	d
WRITE_BINARY	jpeg/cdjpeg.h	161;"	d
WRITE_BINARY	jpeg/cdjpeg.h	164;"	d
WRITE_BINARY	jpeg/wrjpgcom.c	39;"	d	file:
WRITE_BINARY	jpeg/wrjpgcom.c	43;"	d	file:
WRITE_BINARY	jpeg/wrjpgcom.c	46;"	d	file:
Width	R2/R2Image.h	/^Width(void) const$/;"	f	class:R2Image
WordReadLE	R2/R2Image.cpp	/^static unsigned short int WordReadLE(FILE *fp)$/;"	f	file:
WordWriteLE	R2/R2Image.cpp	/^static void WordWriteLE(unsigned short int x, FILE *fp)$/;"	f	file:
Write	R2/R2Image.cpp	/^Write(const char *filename) const$/;"	f	class:R2Image
Write	R3/R3Mesh.cpp	/^Write(const char *filename)$/;"	f	class:R3Mesh
WriteBMP	R2/R2Image.cpp	/^WriteBMP(const char *filename) const$/;"	f	class:R2Image
WriteJPEG	R2/R2Image.cpp	/^WriteJPEG(const char *filename) const$/;"	f	class:R2Image
WriteOff	R3/R3Mesh.cpp	/^WriteOff(const char *filename)$/;"	f	class:R3Mesh
WritePPM	R2/R2Image.cpp	/^WritePPM(const char *filename, int ascii) const$/;"	f	class:R2Image
WriteRay	R3/R3Mesh.cpp	/^WriteRay(const char *filename)$/;"	f	class:R3Mesh
X	R2/R2Point.h	/^X(void) const$/;"	f	class:R2Point
X	R2/R2Vector.h	/^X (void) const$/;"	f	class:R2Vector
X	R3/R3Point.h	/^X (void) const$/;"	f	class:R3Point
X	R3/R3Vector.h	/^X (void) const$/;"	f	class:R3Vector
XCenter	R3/R3Box.h	/^XCenter (void) const$/;"	f	class:R3Box
XLength	R3/R3Box.h	/^XLength (void) const$/;"	f	class:R3Box
XMD_H	R2/R2Image.cpp	984;"	d	file:
XMSDRIVER	jpeg/jmemdos.c	/^typedef void far * XMSDRIVER;	\/* actually a pointer to code *\/$/;"	t	file:
XMSH	jpeg/jmemsys.h	/^typedef unsigned short XMSH;	\/* type of extended-memory handles *\/$/;"	t
XMSPTR	jpeg/jmemdos.c	/^      } XMSPTR;$/;"	t	typeref:union:__anon21	file:
XMS_SUPPORTED	jpeg/jmemdos.c	35;"	d	file:
XMScontext	jpeg/jmemdos.c	/^      } XMScontext;$/;"	t	typeref:struct:__anon19	file:
XMSspec	jpeg/jmemdos.c	/^      } XMSspec;$/;"	t	typeref:struct:__anon22	file:
XMax	R3/R3Box.h	/^XMax (void) const$/;"	f	class:R3Box
XMin	R3/R3Box.h	/^XMin (void) const$/;"	f	class:R3Box
XRadius	R3/R3Box.h	/^XRadius (void) const$/;"	f	class:R3Box
XRotate	R3/R3Matrix.cpp	/^XRotate(double radians)$/;"	f	class:R3Matrix
XScale	R3/R3Matrix.cpp	/^XScale(double scale)$/;"	f	class:R3Matrix
XTranslate	R3/R3Matrix.cpp	/^XTranslate(double offset)$/;"	f	class:R3Matrix
X_density	jpeg/jpeglib.h	/^  UINT16 X_density;		\/* Horizontal pixel density *\/$/;"	m	struct:jpeg_compress_struct
X_density	jpeg/jpeglib.h	/^  UINT16 X_density;		\/* Horizontal pixel density *\/$/;"	m	struct:jpeg_decompress_struct
Y	R2/R2Point.h	/^Y(void) const$/;"	f	class:R2Point
Y	R2/R2Vector.h	/^Y (void) const$/;"	f	class:R2Vector
Y	R3/R3Point.h	/^Y (void) const$/;"	f	class:R3Point
Y	R3/R3Vector.h	/^Y (void) const$/;"	f	class:R3Vector
YCenter	R3/R3Box.h	/^YCenter (void) const$/;"	f	class:R3Box
YLength	R3/R3Box.h	/^YLength (void) const$/;"	f	class:R3Box
YMax	R3/R3Box.h	/^YMax (void) const$/;"	f	class:R3Box
YMin	R3/R3Box.h	/^YMin (void) const$/;"	f	class:R3Box
YRadius	R3/R3Box.h	/^YRadius (void) const$/;"	f	class:R3Box
YRotate	R3/R3Matrix.cpp	/^YRotate(double radians)$/;"	f	class:R3Matrix
YScale	R3/R3Matrix.cpp	/^YScale(double scale)$/;"	f	class:R3Matrix
YTranslate	R3/R3Matrix.cpp	/^YTranslate(double offset)$/;"	f	class:R3Matrix
Y_density	jpeg/jpeglib.h	/^  UINT16 Y_density;		\/* Vertical pixel density *\/$/;"	m	struct:jpeg_compress_struct
Y_density	jpeg/jpeglib.h	/^  UINT16 Y_density;		\/* Vertical pixel density *\/$/;"	m	struct:jpeg_decompress_struct
Z	R3/R3Point.h	/^Z (void) const$/;"	f	class:R3Point
Z	R3/R3Vector.h	/^Z (void) const$/;"	f	class:R3Vector
ZCenter	R3/R3Box.h	/^ZCenter (void) const$/;"	f	class:R3Box
ZLength	R3/R3Box.h	/^ZLength (void) const$/;"	f	class:R3Box
ZMax	R3/R3Box.h	/^ZMax (void) const$/;"	f	class:R3Box
ZMin	R3/R3Box.h	/^ZMin (void) const$/;"	f	class:R3Box
ZRadius	R3/R3Box.h	/^ZRadius (void) const$/;"	f	class:R3Box
ZRotate	R3/R3Matrix.cpp	/^ZRotate(double radians)$/;"	f	class:R3Matrix
ZScale	R3/R3Matrix.cpp	/^ZScale(double scale)$/;"	f	class:R3Matrix
ZTranslate	R3/R3Matrix.cpp	/^ZTranslate(double offset)$/;"	f	class:R3Matrix
_CRTIMP	GLUT.windows/glut.h	109;"	d
_CRTIMP	GLUT.windows/glut.h	113;"	d
_CRTIMP	GLUT.windows/glut.h	115;"	d
_CRTIMP	GLUT.windows/glut.h	714;"	d
_WCHAR_T_DEFINED	GLUT.windows/glut.h	51;"	d
__cdecl	GLUT.windows/glut.h	103;"	d
__cdecl	GLUT.windows/glut.h	709;"	d
__glut_h__	GLUT.windows/glut.h	2;"	d
_bmp_source_struct	jpeg/rdbmp.c	/^typedef struct _bmp_source_struct {$/;"	s	file:
_jdos_close	jpeg/jmemdosa.asm	/^_jdos_close	proc	far$/;"	l
_jdos_open	jpeg/jmemdosa.asm	/^_jdos_open	proc	far$/;"	l
_jdos_read	jpeg/jmemdosa.asm	/^_jdos_read	proc	far$/;"	l
_jdos_seek	jpeg/jmemdosa.asm	/^_jdos_seek	proc	far$/;"	l
_jdos_write	jpeg/jmemdosa.asm	/^_jdos_write	proc	far$/;"	l
_jems_available	jpeg/jmemdosa.asm	/^_jems_available	proc	far$/;"	l
_jems_calldriver	jpeg/jmemdosa.asm	/^_jems_calldriver	proc far$/;"	l
_jxms_calldriver	jpeg/jmemdosa.asm	/^_jxms_calldriver 	proc	far$/;"	l
_jxms_getdriver	jpeg/jmemdosa.asm	/^_jxms_getdriver	proc	far$/;"	l
_rle_source_struct	jpeg/rdrle.c	/^typedef struct _rle_source_struct {$/;"	s	file:
_tga_source_struct	jpeg/rdtarga.c	/^typedef struct _tga_source_struct {$/;"	s	file:
ac_count_ptrs	jpeg/jchuff.c	/^  long * ac_count_ptrs[NUM_HUFF_TBLS];$/;"	m	struct:__anon14	file:
ac_cur_tbls	jpeg/jdhuff.c	/^  d_derived_tbl * ac_cur_tbls[D_MAX_BLOCKS_IN_MCU];$/;"	m	struct:__anon67	file:
ac_derived_tbl	jpeg/jdphuff.c	/^  d_derived_tbl * ac_derived_tbl; \/* active table during an AC scan *\/$/;"	m	struct:__anon3	file:
ac_derived_tbls	jpeg/jchuff.c	/^  c_derived_tbl * ac_derived_tbls[NUM_HUFF_TBLS];$/;"	m	struct:__anon14	file:
ac_derived_tbls	jpeg/jdhuff.c	/^  d_derived_tbl * ac_derived_tbls[NUM_HUFF_TBLS];$/;"	m	struct:__anon67	file:
ac_huff_tbl_ptrs	jpeg/jpeglib.h	/^  JHUFF_TBL * ac_huff_tbl_ptrs[NUM_HUFF_TBLS];$/;"	m	struct:jpeg_compress_struct
ac_huff_tbl_ptrs	jpeg/jpeglib.h	/^  JHUFF_TBL * ac_huff_tbl_ptrs[NUM_HUFF_TBLS];$/;"	m	struct:jpeg_decompress_struct
ac_needed	jpeg/jdhuff.c	/^  jboolean ac_needed[D_MAX_BLOCKS_IN_MCU];$/;"	m	struct:__anon67	file:
ac_tbl_no	jpeg/jcphuff.c	/^  int ac_tbl_no;		\/* the table number of the single component *\/$/;"	m	struct:__anon60	file:
ac_tbl_no	jpeg/jpeglib.h	/^  int ac_tbl_no;		\/* AC entropy table selector (0..3) *\/$/;"	m	struct:__anon53
actual_number_of_colors	jpeg/jpeglib.h	/^  int actual_number_of_colors;	\/* number of entries in use *\/$/;"	m	struct:jpeg_decompress_struct
add_huff_table	jpeg/jcparam.c	/^add_huff_table (j_compress_ptr cinfo,$/;"	f
add_map_entry	jpeg/rdcolmap.c	/^add_map_entry (j_decompress_ptr cinfo, int R, int G, int B)$/;"	f
addon_message_table	jpeg/jpeglib.h	/^  const char * const * addon_message_table; \/* Non-library errors *\/$/;"	m	struct:jpeg_error_mgr
alloc_fs_workspace	jpeg/jquant1.c	/^alloc_fs_workspace (j_decompress_ptr cinfo)$/;"	f
alloc_funny_pointers	jpeg/jdmainct.c	/^alloc_funny_pointers (j_decompress_ptr cinfo)$/;"	f
alloc_large	jpeg/jmemmgr.c	/^alloc_large (j_common_ptr cinfo, int pool_id, size_t sizeofobject)$/;"	f
alloc_small	jpeg/jmemmgr.c	/^alloc_small (j_common_ptr cinfo, int pool_id, size_t sizeofobject)$/;"	f
ambient	R3Scene.h	/^  R3Rgb ambient;$/;"	m	struct:R3Scene
angle_attenuation	R3Scene.h	/^  double angle_attenuation;$/;"	m	struct:R3Light
angle_cutoff	R3Scene.h	/^  double angle_cutoff;$/;"	m	struct:R3Light
another_method	jpeg/ckconfig.c	/^  int (*another_method) (void);$/;"	m	struct:methods_struct	file:
arith_ac_K	jpeg/jpeglib.h	/^  UINT8 arith_ac_K[NUM_ARITH_TBLS]; \/* Kx values for AC arith-coding tables *\/$/;"	m	struct:jpeg_compress_struct
arith_ac_K	jpeg/jpeglib.h	/^  UINT8 arith_ac_K[NUM_ARITH_TBLS]; \/* Kx values for AC arith-coding tables *\/$/;"	m	struct:jpeg_decompress_struct
arith_code	jpeg/jpeglib.h	/^  jboolean arith_code;		\/* TRUE=arithmetic coding, FALSE=Huffman *\/$/;"	m	struct:jpeg_compress_struct
arith_code	jpeg/jpeglib.h	/^  jboolean arith_code;		\/* TRUE=arithmetic coding, FALSE=Huffman *\/$/;"	m	struct:jpeg_decompress_struct
arith_dc_L	jpeg/jpeglib.h	/^  UINT8 arith_dc_L[NUM_ARITH_TBLS]; \/* L values for DC arith-coding tables *\/$/;"	m	struct:jpeg_compress_struct
arith_dc_L	jpeg/jpeglib.h	/^  UINT8 arith_dc_L[NUM_ARITH_TBLS]; \/* L values for DC arith-coding tables *\/$/;"	m	struct:jpeg_decompress_struct
arith_dc_U	jpeg/jpeglib.h	/^  UINT8 arith_dc_U[NUM_ARITH_TBLS]; \/* U values for DC arith-coding tables *\/$/;"	m	struct:jpeg_compress_struct
arith_dc_U	jpeg/jpeglib.h	/^  UINT8 arith_dc_U[NUM_ARITH_TBLS]; \/* U values for DC arith-coding tables *\/$/;"	m	struct:jpeg_decompress_struct
avail_done	jpeg/jmemdosa.asm	/^avail_done:	pop	ds			; restore registers and exit$/;"	l
ax	jpeg/jmemdos.c	/^	unsigned short ax, dx, bx;$/;"	m	struct:__anon19	file:
ax	jpeg/jmemdos.c	/^	unsigned short ax, dx, bx;$/;"	m	struct:__anon20	file:
b_s_info	jpeg/jmemmgr.c	/^  backing_store_info b_s_info;	\/* System-dependent control info *\/$/;"	m	struct:jvirt_barray_control	file:
b_s_info	jpeg/jmemmgr.c	/^  backing_store_info b_s_info;	\/* System-dependent control info *\/$/;"	m	struct:jvirt_sarray_control	file:
b_s_open	jpeg/jmemmgr.c	/^  jboolean b_s_open;		\/* is backing-store data valid? *\/$/;"	m	struct:jvirt_barray_control	file:
b_s_open	jpeg/jmemmgr.c	/^  jboolean b_s_open;		\/* is backing-store data valid? *\/$/;"	m	struct:jvirt_sarray_control	file:
background	R3Scene.h	/^  R3Rgb background;$/;"	m	struct:R3Scene
background	minecraft.cpp	/^static R3Rgb background = R3Rgb(0.529, 0.807, 0.980, 1.);$/;"	v	file:
backing_store_info	jpeg/jmemsys.h	/^} backing_store_info;$/;"	t	typeref:struct:backing_store_struct
backing_store_ptr	jpeg/jmemsys.h	/^typedef struct backing_store_struct * backing_store_ptr;$/;"	t	typeref:struct:backing_store_struct
backing_store_struct	jpeg/jmemsys.h	/^typedef struct backing_store_struct {$/;"	s
base_dither_matrix	jpeg/jquant1.c	/^static const UINT8 base_dither_matrix[ODITHER_SIZE][ODITHER_SIZE] = {$/;"	v	file:
bbox	R3/R3Mesh.h	/^  R3Box bbox;$/;"	m	struct:R3Mesh
bbox	R3Scene.h	/^  R3Box bbox;$/;"	m	struct:R3Node
bbox	R3Scene.h	/^  R3Box bbox;$/;"	m	struct:R3Scene
bfOffBits	R2/R2Image.cpp	/^  unsigned int bfOffBits;$/;"	m	struct:tagBITMAPFILEHEADER	file:
bfReserved1	R2/R2Image.cpp	/^  unsigned short int bfReserved1;$/;"	m	struct:tagBITMAPFILEHEADER	file:
bfReserved2	R2/R2Image.cpp	/^  unsigned short int bfReserved2;$/;"	m	struct:tagBITMAPFILEHEADER	file:
bfSize	R2/R2Image.cpp	/^  unsigned int bfSize;$/;"	m	struct:tagBITMAPFILEHEADER	file:
bfType	R2/R2Image.cpp	/^  unsigned short int bfType;$/;"	m	struct:tagBITMAPFILEHEADER	file:
biBitCount	R2/R2Image.cpp	/^  unsigned short int biBitCount;$/;"	m	struct:tagBITMAPINFOHEADER	file:
biClrImportant	R2/R2Image.cpp	/^  unsigned int biClrImportant;$/;"	m	struct:tagBITMAPINFOHEADER	file:
biClrUsed	R2/R2Image.cpp	/^  unsigned int biClrUsed;$/;"	m	struct:tagBITMAPINFOHEADER	file:
biCompression	R2/R2Image.cpp	/^  unsigned int biCompression;$/;"	m	struct:tagBITMAPINFOHEADER	file:
biHeight	R2/R2Image.cpp	/^  int biHeight;$/;"	m	struct:tagBITMAPINFOHEADER	file:
biPlanes	R2/R2Image.cpp	/^  unsigned short int biPlanes;$/;"	m	struct:tagBITMAPINFOHEADER	file:
biSize	R2/R2Image.cpp	/^  unsigned int biSize;$/;"	m	struct:tagBITMAPINFOHEADER	file:
biSizeImage	R2/R2Image.cpp	/^  unsigned int biSizeImage;$/;"	m	struct:tagBITMAPINFOHEADER	file:
biWidth	R2/R2Image.cpp	/^  int biWidth;$/;"	m	struct:tagBITMAPINFOHEADER	file:
biXPelsPerMeter	R2/R2Image.cpp	/^  int biXPelsPerMeter;$/;"	m	struct:tagBITMAPINFOHEADER	file:
biYPelsPerMeter	R2/R2Image.cpp	/^  int biYPelsPerMeter;$/;"	m	struct:tagBITMAPINFOHEADER	file:
bindir	jpeg/Makefile	/^bindir = $(exec_prefix)\/bin$/;"	m
binprefix	jpeg/Makefile	/^binprefix =$/;"	m
bit_buf_type	jpeg/jdhuff.h	/^typedef INT32 bit_buf_type;	\/* type of bit-extraction buffer *\/$/;"	t
bit_buffer	jpeg/jcphuff.c	/^  char * bit_buffer;		\/* buffer for correction bits (1 per char) *\/$/;"	m	struct:__anon60	file:
bitread_perm_state	jpeg/jdhuff.h	/^} bitread_perm_state;$/;"	t	typeref:struct:__anon32
bitread_working_state	jpeg/jdhuff.h	/^} bitread_working_state;$/;"	t	typeref:struct:__anon33
bits	jpeg/jpeglib.h	/^  UINT8 bits[17];		\/* bits[k] = # of symbols with codes of *\/$/;"	m	struct:__anon52
bits_left	jpeg/jdhuff.h	/^  int bits_left;		\/* # of unused bits in it *\/$/;"	m	struct:__anon32
bits_left	jpeg/jdhuff.h	/^  int bits_left;		\/* # of unused bits in it *\/$/;"	m	struct:__anon33
bits_per_pixel	jpeg/rdbmp.c	/^  int bits_per_pixel;		\/* remembers 8- or 24-bit format *\/$/;"	m	struct:_bmp_source_struct	file:
bitstate	jpeg/jdhuff.c	/^  bitread_perm_state bitstate;	\/* Bit buffer at start of MCU *\/$/;"	m	struct:__anon67	file:
bitstate	jpeg/jdphuff.c	/^  bitread_perm_state bitstate;	\/* Bit buffer at start of MCU *\/$/;"	m	struct:__anon3	file:
block_count	jpeg/rdtarga.c	/^  int block_count;		\/* # of pixels remaining in RLE block *\/$/;"	m	struct:_tga_source_struct	file:
blocks_in_MCU	jpeg/jpeglib.h	/^  int blocks_in_MCU;		\/* # of DCT blocks per MCU *\/$/;"	m	struct:jpeg_compress_struct
blocks_in_MCU	jpeg/jpeglib.h	/^  int blocks_in_MCU;		\/* # of DCT blocks per MCU *\/$/;"	m	struct:jpeg_decompress_struct
blocksperrow	jpeg/jmemmgr.c	/^  JDIMENSION blocksperrow;	\/* width of array (and of memory buffer) *\/$/;"	m	struct:jvirt_barray_control	file:
bmp_dest_ptr	jpeg/wrbmp.c	/^typedef bmp_dest_struct * bmp_dest_ptr;$/;"	t	file:
bmp_dest_struct	jpeg/wrbmp.c	/^} bmp_dest_struct;$/;"	t	typeref:struct:__anon47	file:
bmp_source_ptr	jpeg/rdbmp.c	/^typedef struct _bmp_source_struct * bmp_source_ptr;$/;"	t	typeref:struct:_bmp_source_struct	file:
bmp_source_struct	jpeg/rdbmp.c	/^} bmp_source_struct;$/;"	t	typeref:struct:_bmp_source_struct	file:
box	R3Scene.h	/^  R3Box *box;$/;"	m	struct:R3Shape
box	jpeg/jquant2.c	/^} box;$/;"	t	typeref:struct:__anon27	file:
boxptr	jpeg/jquant2.c	/^typedef box * boxptr;$/;"	t	file:
buffer	jpeg/cdjpeg.h	/^  JSAMPARRAY buffer;$/;"	m	struct:cjpeg_source_struct
buffer	jpeg/cdjpeg.h	/^  JSAMPARRAY buffer;$/;"	m	struct:djpeg_dest_struct
buffer	jpeg/jcmainct.c	/^  JSAMPARRAY buffer[MAX_COMPONENTS];$/;"	m	struct:__anon4	file:
buffer	jpeg/jdatadst.c	/^  JOCTET * buffer;		\/* start of buffer *\/$/;"	m	struct:__anon18	file:
buffer	jpeg/jdatasrc.c	/^  JOCTET * buffer;		\/* start of buffer *\/$/;"	m	struct:__anon69	file:
buffer	jpeg/jdmainct.c	/^  JSAMPARRAY buffer[MAX_COMPONENTS];$/;"	m	struct:__anon17	file:
buffer	jpeg/jdpostct.c	/^  JSAMPARRAY buffer;		\/* strip buffer, or current strip of virtual *\/$/;"	m	struct:__anon36	file:
buffer_full	jpeg/jdmainct.c	/^  jboolean buffer_full;		\/* Have we gotten an iMCU row from decoder? *\/$/;"	m	struct:__anon17	file:
buffer_height	jpeg/cdjpeg.h	/^  JDIMENSION buffer_height;$/;"	m	struct:cjpeg_source_struct
buffer_height	jpeg/cdjpeg.h	/^  JDIMENSION buffer_height;$/;"	m	struct:djpeg_dest_struct
buffer_width	jpeg/rdppm.c	/^  size_t buffer_width;		\/* width of I\/O buffer *\/$/;"	m	struct:__anon48	file:
buffer_width	jpeg/wrppm.c	/^  size_t buffer_width;		\/* width of I\/O buffer *\/$/;"	m	struct:__anon40	file:
buffer_width	jpeg/wrtarga.c	/^  JDIMENSION buffer_width;	\/* width of one row *\/$/;"	m	struct:__anon59	file:
buffered_image	jpeg/jpeglib.h	/^  jboolean buffered_image;	\/* TRUE=multiple output passes *\/$/;"	m	struct:jpeg_decompress_struct
bufsize	jpeg/ansi2knr.c	324;"	d	file:
build_ycc_rgb_table	jpeg/jdcolor.c	/^build_ycc_rgb_table (j_decompress_ptr cinfo)$/;"	f
build_ycc_rgb_table	jpeg/jdmerge.c	/^build_ycc_rgb_table (j_decompress_ptr cinfo)$/;"	f
bx	jpeg/jmemdos.c	/^	unsigned short ax, dx, bx;$/;"	m	struct:__anon19	file:
bx	jpeg/jmemdos.c	/^	unsigned short ax, dx, bx;$/;"	m	struct:__anon20	file:
bytes	jpeg/jmemdos.c	/^	char bytes[18];		\/* Misaligned fields in here! *\/$/;"	m	union:__anon23	file:
bytes_in_buffer	jpeg/jdhuff.h	/^  size_t bytes_in_buffer;	\/* # of bytes remaining in source buffer *\/$/;"	m	struct:__anon33
bytes_in_buffer	jpeg/jpeglib.h	/^  size_t bytes_in_buffer;	\/* # of bytes remaining in buffer *\/$/;"	m	struct:jpeg_source_mgr
bytes_left	jpeg/jmemmgr.c	/^    size_t bytes_left;		\/* bytes still available in this pool *\/$/;"	m	struct:large_pool_struct::__anon29	file:
bytes_left	jpeg/jmemmgr.c	/^    size_t bytes_left;		\/* bytes still available in this pool *\/$/;"	m	struct:small_pool_struct::__anon28	file:
bytes_read	jpeg/jdmarker.c	/^  unsigned int bytes_read;		\/* data bytes read so far in marker *\/$/;"	m	struct:__anon42	file:
bytes_used	jpeg/jmemmgr.c	/^    size_t bytes_used;		\/* how many bytes already used within pool *\/$/;"	m	struct:large_pool_struct::__anon29	file:
bytes_used	jpeg/jmemmgr.c	/^    size_t bytes_used;		\/* how many bytes already used within pool *\/$/;"	m	struct:small_pool_struct::__anon28	file:
bytesinpkt	jpeg/wrgif.c	/^  int bytesinpkt;		\/* # of bytes in current packet *\/$/;"	m	struct:__anon50	file:
c	R2/R2Line.h	/^  double c;$/;"	m	class:R2Line
c	R2/R2Pixel.h	/^  double c[4];$/;"	m	class:R2Pixel
c0max	jpeg/jquant2.c	/^  int c0min, c0max;$/;"	m	struct:__anon27	file:
c0min	jpeg/jquant2.c	/^  int c0min, c0max;$/;"	m	struct:__anon27	file:
c1max	jpeg/jquant2.c	/^  int c1min, c1max;$/;"	m	struct:__anon27	file:
c1min	jpeg/jquant2.c	/^  int c1min, c1max;$/;"	m	struct:__anon27	file:
c2max	jpeg/jquant2.c	/^  int c2min, c2max;$/;"	m	struct:__anon27	file:
c2min	jpeg/jquant2.c	/^  int c2min, c2max;$/;"	m	struct:__anon27	file:
c5to8bits	jpeg/rdtarga.c	/^static const UINT8 c5to8bits[32] = {$/;"	v	file:
c_derived_tbl	jpeg/jchuff.h	/^} c_derived_tbl;$/;"	t	typeref:struct:__anon25
c_pass_type	jpeg/jcmaster.c	/^} c_pass_type;$/;"	t	typeref:enum:__anon63	file:
call_pass_startup	jpeg/jpegint.h	/^  jboolean call_pass_startup;	\/* True if pass_startup must be called *\/$/;"	m	struct:jpeg_comp_master
camera	R3Scene.h	/^  R3Camera camera;$/;"	m	struct:R3Scene
camera	minecraft.cpp	/^static R3Camera camera;$/;"	v	file:
carray	jpeg/ckconfig.c	/^static const int carray[3] = {1, 2, 3};$/;"	v	file:
cconvert	jpeg/jpeglib.h	/^  struct jpeg_color_converter * cconvert;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_color_converter
cconvert	jpeg/jpeglib.h	/^  struct jpeg_color_deconverter * cconvert;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_color_deconverter
cd_progress_ptr	jpeg/cdjpeg.h	/^typedef struct cdjpeg_progress_mgr * cd_progress_ptr;$/;"	t	typeref:struct:cdjpeg_progress_mgr
cdjpeg_message_table	jpeg/cjpeg.c	/^static const char * const cdjpeg_message_table[] = {$/;"	v	file:
cdjpeg_message_table	jpeg/djpeg.c	/^static const char * const cdjpeg_message_table[] = {$/;"	v	file:
cdjpeg_progress_mgr	jpeg/cdjpeg.h	/^struct cdjpeg_progress_mgr {$/;"	s
center	R3/R3Cone.h	/^  R3Point center;$/;"	m	class:R3Cone
center	R3/R3Cylinder.h	/^  R3Point center;$/;"	m	class:R3Cylinder
center	R3/R3Sphere.h	/^  R3Point center;$/;"	m	class:R3Sphere
children	R3Scene.h	/^  vector<struct R3Node *> children;$/;"	m	struct:R3Node
cinfo	jpeg/jchuff.c	/^  j_compress_ptr cinfo;		\/* dump_buffer needs access to this *\/$/;"	m	struct:__anon15	file:
cinfo	jpeg/jcphuff.c	/^  j_compress_ptr cinfo;		\/* link to cinfo (needed for dump_buffer) *\/$/;"	m	struct:__anon60	file:
cinfo	jpeg/jdhuff.h	/^  j_decompress_ptr cinfo;	\/* back link to decompress master record *\/$/;"	m	struct:__anon33
cinfo	jpeg/rdbmp.c	/^  j_compress_ptr cinfo;		\/* back link saves passing separate parm *\/$/;"	m	struct:_bmp_source_struct	file:
cinfo	jpeg/rdtarga.c	/^  j_compress_ptr cinfo;		\/* back link saves passing separate parm *\/$/;"	m	struct:_tga_source_struct	file:
cinfo	jpeg/wrgif.c	/^  j_decompress_ptr cinfo;	\/* back link saves passing separate parm *\/$/;"	m	struct:__anon50	file:
cjpeg_source_ptr	jpeg/cdjpeg.h	/^typedef struct cjpeg_source_struct * cjpeg_source_ptr;$/;"	t	typeref:struct:cjpeg_source_struct
cjpeg_source_struct	jpeg/cdjpeg.h	/^struct cjpeg_source_struct {$/;"	s
close_backing_store	jpeg/jmemansi.c	/^close_backing_store (j_common_ptr cinfo, backing_store_ptr info)$/;"	f
close_backing_store	jpeg/jmemmac.c	/^close_backing_store (j_common_ptr cinfo, backing_store_ptr info)$/;"	f
close_backing_store	jpeg/jmemname.c	/^close_backing_store (j_common_ptr cinfo, backing_store_ptr info)$/;"	f
close_ems_store	jpeg/jmemdos.c	/^close_ems_store (j_common_ptr cinfo, backing_store_ptr info)$/;"	f
close_err	jpeg/jmemdosa.asm	/^close_err:	pop	ds			; restore registers and exit$/;"	l
close_file_store	jpeg/jmemdos.c	/^close_file_store (j_common_ptr cinfo, backing_store_ptr info)$/;"	f
close_xms_store	jpeg/jmemdos.c	/^close_xms_store (j_common_ptr cinfo, backing_store_ptr info)$/;"	f
cmyk_ycck_convert	jpeg/jccolor.c	/^cmyk_ycck_convert (j_compress_ptr cinfo,$/;"	f
code_counter	jpeg/wrgif.c	/^  int code_counter;		\/* counts output symbols *\/$/;"	m	struct:__anon50	file:
coef	jpeg/jpeglib.h	/^  struct jpeg_c_coef_controller * coef;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_c_coef_controller
coef	jpeg/jpeglib.h	/^  struct jpeg_d_coef_controller * coef;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_d_coef_controller
coef_arrays	jpeg/jpegint.h	/^  jvirt_barray_ptr *coef_arrays;$/;"	m	struct:jpeg_d_coef_controller
coef_bits	jpeg/jpeglib.h	/^  int (*coef_bits)[DCTSIZE2];	\/* -1 or current Al value for each coef *\/$/;"	m	struct:jpeg_decompress_struct
coef_bits_latch	jpeg/jdcoefct.c	/^  int * coef_bits_latch;$/;"	m	struct:__anon16	file:
color	R3Scene.h	/^  R3Rgb color;$/;"	m	struct:R3Light
color_buf	jpeg/jcprepct.c	/^  JSAMPARRAY color_buf[MAX_COMPONENTS];$/;"	m	struct:__anon46	file:
color_buf	jpeg/jdsample.c	/^  JSAMPARRAY color_buf[MAX_COMPONENTS];$/;"	m	struct:__anon11	file:
color_quantize	jpeg/jquant1.c	/^color_quantize (j_decompress_ptr cinfo, JSAMPARRAY input_buf,$/;"	f
color_quantize3	jpeg/jquant1.c	/^color_quantize3 (j_decompress_ptr cinfo, JSAMPARRAY input_buf,$/;"	f
colorcount	jpeg/jquant2.c	/^  long colorcount;$/;"	m	struct:__anon27	file:
colorindex	jpeg/jquant1.c	/^  JSAMPARRAY colorindex;	\/* Precomputed mapping for speed *\/$/;"	m	struct:__anon24	file:
colormap	jpeg/jpeglib.h	/^  JSAMPARRAY colormap;		\/* The color map as a 2-D pixel array *\/$/;"	m	struct:jpeg_decompress_struct
colormap	jpeg/rdbmp.c	/^  JSAMPARRAY colormap;		\/* BMP colormap (converted to my format) *\/$/;"	m	struct:_bmp_source_struct	file:
colormap	jpeg/rdtarga.c	/^  JSAMPARRAY colormap;		\/* Targa colormap (converted to my format) *\/$/;"	m	struct:_tga_source_struct	file:
colormap	jpeg/wrrle.c	/^  rle_map *colormap;	 	\/* RLE-style color map, or NULL if none *\/$/;"	m	struct:__anon10	file:
comp_info	jpeg/jpeglib.h	/^  jpeg_component_info * comp_info;$/;"	m	struct:jpeg_compress_struct
comp_info	jpeg/jpeglib.h	/^  jpeg_component_info * comp_info;$/;"	m	struct:jpeg_decompress_struct
completed_extra_passes	jpeg/cdjpeg.h	/^  int completed_extra_passes;	\/* extra passes completed *\/$/;"	m	struct:cdjpeg_progress_mgr
completed_passes	jpeg/jpeglib.h	/^  int completed_passes;		\/* passes completed so far *\/$/;"	m	struct:jpeg_progress_mgr
component_id	jpeg/jpeglib.h	/^  int component_id;		\/* identifier for this component (0..255) *\/$/;"	m	struct:__anon53
component_index	jpeg/jpeglib.h	/^  int component_index;		\/* its index in SOF or cinfo->comp_info[] *\/$/;"	m	struct:__anon53
component_index	jpeg/jpeglib.h	/^  int component_index[MAX_COMPS_IN_SCAN]; \/* their SOF\/comp_info[] indexes *\/$/;"	m	struct:__anon54
component_needed	jpeg/jpeglib.h	/^  jboolean component_needed;	\/* do we need the value of this component? *\/$/;"	m	struct:__anon53
compress_first_pass	jpeg/jccoefct.c	/^METHODDEF(jboolean) compress_first_pass$/;"	v
compress_init	jpeg/wrgif.c	/^compress_init (gif_dest_ptr dinfo, int i_bits)$/;"	f
compress_pixel	jpeg/wrgif.c	/^compress_pixel (gif_dest_ptr dinfo, int c)$/;"	f
compress_term	jpeg/wrgif.c	/^compress_term (gif_dest_ptr dinfo)$/;"	f
comps_in_scan	jpeg/jpeglib.h	/^  int comps_in_scan;		\/* # of JPEG components in this scan *\/$/;"	m	struct:jpeg_compress_struct
comps_in_scan	jpeg/jpeglib.h	/^  int comps_in_scan;		\/* # of JPEG components in this scan *\/$/;"	m	struct:jpeg_decompress_struct
comps_in_scan	jpeg/jpeglib.h	/^  int comps_in_scan;		\/* number of components encoded in this scan *\/$/;"	m	struct:__anon54
compute_color	jpeg/jquant2.c	/^compute_color (j_decompress_ptr cinfo, boxptr boxp, int icolor)$/;"	f
cone	R3Scene.h	/^  R3Cone *cone;$/;"	m	struct:R3Shape
const	jpeg/jconfig.h	9;"	d
constant_attenuation	R3Scene.h	/^  double constant_attenuation;$/;"	m	struct:R3Light
consume_data	jpeg/jdcoefct.c	/^consume_data (j_decompress_ptr cinfo)$/;"	f
consume_markers	jpeg/jdinput.c	/^consume_markers (j_decompress_ptr cinfo)$/;"	f
context_state	jpeg/jdmainct.c	/^  int context_state;		\/* process_data state machine status *\/$/;"	m	struct:__anon17	file:
convert1	jpeg/ansi2knr.c	/^convert1(buf, out, header, convert_varargs)$/;"	f
copy_pixel_rows	jpeg/wrppm.c	/^copy_pixel_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
copy_rest_of_file	jpeg/wrjpgcom.c	/^copy_rest_of_file (void)$/;"	f	file:
copy_variable	jpeg/wrjpgcom.c	/^copy_variable (void)$/;"	f	file:
copyoption	jpeg/jpegtran.c	/^static JCOPY_OPTION copyoption;	\/* -copy switch *\/$/;"	v	file:
count_ptrs	jpeg/jcphuff.c	/^  long * count_ptrs[NUM_HUFF_TBLS];$/;"	m	struct:__anon60	file:
cquantize	jpeg/jpeglib.h	/^  struct jpeg_color_quantizer * cquantize;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_color_quantizer
create_colorindex	jpeg/jquant1.c	/^create_colorindex (j_decompress_ptr cinfo)$/;"	f
create_colormap	jpeg/jquant1.c	/^create_colormap (j_decompress_ptr cinfo)$/;"	f
create_context_buffer	jpeg/jcprepct.c	/^create_context_buffer (j_compress_ptr cinfo)$/;"	f
create_odither_tables	jpeg/jquant1.c	/^create_odither_tables (j_decompress_ptr cinfo)$/;"	f
cur	jpeg/jchuff.c	/^  savable_state cur;		\/* Current bit buffer & DC state *\/$/;"	m	struct:__anon15	file:
cur_accum	jpeg/wrgif.c	/^  INT32 cur_accum;		\/* holds bits not yet output *\/$/;"	m	struct:__anon50	file:
cur_bits	jpeg/wrgif.c	/^  int cur_bits;			\/* # of bits in cur_accum *\/$/;"	m	struct:__anon50	file:
cur_comp_info	jpeg/jpeglib.h	/^  jpeg_component_info * cur_comp_info[MAX_COMPS_IN_SCAN];$/;"	m	struct:jpeg_compress_struct
cur_comp_info	jpeg/jpeglib.h	/^  jpeg_component_info * cur_comp_info[MAX_COMPS_IN_SCAN];$/;"	m	struct:jpeg_decompress_struct
cur_iMCU_row	jpeg/jcmainct.c	/^  JDIMENSION cur_iMCU_row;	\/* number of current iMCU row *\/$/;"	m	struct:__anon4	file:
cur_marker	jpeg/jdmarker.c	/^  jpeg_saved_marker_ptr cur_marker;	\/* NULL if not processing a marker *\/$/;"	m	struct:__anon42	file:
cur_method	jpeg/jddctmgr.c	/^  int cur_method[MAX_COMPONENTS];$/;"	m	struct:__anon70	file:
cur_output_row	jpeg/wrbmp.c	/^  JDIMENSION cur_output_row;	\/* next row# to write to virtual array *\/$/;"	m	struct:__anon47	file:
cur_start_row	jpeg/jmemmgr.c	/^  JDIMENSION cur_start_row;	\/* first logical row # in the buffer *\/$/;"	m	struct:jvirt_barray_control	file:
cur_start_row	jpeg/jmemmgr.c	/^  JDIMENSION cur_start_row;	\/* first logical row # in the buffer *\/$/;"	m	struct:jvirt_sarray_control	file:
currentSelection	minecraft.cpp	/^static R3Node *currentSelection = NULL;$/;"	v	file:
current_row	jpeg/rdtarga.c	/^  JDIMENSION current_row;	\/* Current logical row number to read *\/$/;"	m	struct:_tga_source_struct	file:
curvature	R3/R3Mesh.h	/^  double curvature;$/;"	m	struct:R3MeshVertex
cylinder	R3Scene.h	/^  R3Cylinder *cylinder;$/;"	m	struct:R3Shape
d	R3/R3Plane.h	/^  double d;$/;"	m	class:R3Plane
d_derived_tbl	jpeg/jdhuff.h	/^} d_derived_tbl;$/;"	t	typeref:struct:__anon31
data	jpeg/jpeglib.h	/^  JOCTET FAR * data;		\/* the data contained in the marker *\/$/;"	m	struct:jpeg_marker_struct
data_length	jpeg/jpeglib.h	/^  unsigned int data_length;	\/* # bytes of data saved at data[] *\/$/;"	m	struct:jpeg_marker_struct
data_precision	jpeg/jpeglib.h	/^  int data_precision;		\/* bits of precision in image data *\/$/;"	m	struct:jpeg_compress_struct
data_precision	jpeg/jpeglib.h	/^  int data_precision;		\/* bits of precision in image data *\/$/;"	m	struct:jpeg_decompress_struct
data_width	jpeg/wrbmp.c	/^  JDIMENSION data_width;	\/* JSAMPLEs per row *\/$/;"	m	struct:__anon47	file:
dc_count_ptrs	jpeg/jchuff.c	/^  long * dc_count_ptrs[NUM_HUFF_TBLS];$/;"	m	struct:__anon14	file:
dc_cur_tbls	jpeg/jdhuff.c	/^  d_derived_tbl * dc_cur_tbls[D_MAX_BLOCKS_IN_MCU];$/;"	m	struct:__anon67	file:
dc_derived_tbls	jpeg/jchuff.c	/^  c_derived_tbl * dc_derived_tbls[NUM_HUFF_TBLS];$/;"	m	struct:__anon14	file:
dc_derived_tbls	jpeg/jdhuff.c	/^  d_derived_tbl * dc_derived_tbls[NUM_HUFF_TBLS];$/;"	m	struct:__anon67	file:
dc_huff_tbl_ptrs	jpeg/jpeglib.h	/^  JHUFF_TBL * dc_huff_tbl_ptrs[NUM_HUFF_TBLS];$/;"	m	struct:jpeg_compress_struct
dc_huff_tbl_ptrs	jpeg/jpeglib.h	/^  JHUFF_TBL * dc_huff_tbl_ptrs[NUM_HUFF_TBLS];$/;"	m	struct:jpeg_decompress_struct
dc_needed	jpeg/jdhuff.c	/^  jboolean dc_needed[D_MAX_BLOCKS_IN_MCU];$/;"	m	struct:__anon67	file:
dc_tbl_no	jpeg/jpeglib.h	/^  int dc_tbl_no;		\/* DC entropy table selector (0..3) *\/$/;"	m	struct:__anon53
dct_method	jpeg/jpeglib.h	/^  J_DCT_METHOD dct_method;	\/* DCT algorithm selector *\/$/;"	m	struct:jpeg_compress_struct
dct_method	jpeg/jpeglib.h	/^  J_DCT_METHOD dct_method;	\/* IDCT algorithm selector *\/$/;"	m	struct:jpeg_decompress_struct
dct_table	jpeg/jpeglib.h	/^  void * dct_table;$/;"	m	struct:__anon53
decode_mcu_AC_first	jpeg/jdphuff.c	/^METHODDEF(jboolean) decode_mcu_AC_first JPP((j_decompress_ptr cinfo,$/;"	v
decode_mcu_AC_refine	jpeg/jdphuff.c	/^METHODDEF(jboolean) decode_mcu_AC_refine JPP((j_decompress_ptr cinfo,$/;"	v
decompress_data	jpeg/jdcoefct.c	/^decompress_data (j_decompress_ptr cinfo, JSAMPIMAGE output_buf)$/;"	f
decompress_onepass	jpeg/jdcoefct.c	/^decompress_onepass (j_decompress_ptr cinfo, JSAMPIMAGE output_buf)$/;"	f
decompress_smooth_data	jpeg/jdcoefct.c	/^METHODDEF(int) decompress_smooth_data$/;"	v
decompress_smooth_data	jpeg/jdcoefct.c	/^decompress_smooth_data (j_decompress_ptr cinfo, JSAMPIMAGE output_buf)$/;"	f
default_decompress_parms	jpeg/jdapimin.c	/^default_decompress_parms (j_decompress_ptr cinfo)$/;"	f
density_unit	jpeg/jpeglib.h	/^  UINT8 density_unit;		\/* JFIF code for pixel size units *\/$/;"	m	struct:jpeg_compress_struct
density_unit	jpeg/jpeglib.h	/^  UINT8 density_unit;		\/* JFIF code for pixel size units *\/$/;"	m	struct:jpeg_decompress_struct
derived_tbls	jpeg/jcphuff.c	/^  c_derived_tbl * derived_tbls[NUM_HUFF_TBLS];$/;"	m	struct:__anon60	file:
derived_tbls	jpeg/jdphuff.c	/^  d_derived_tbl * derived_tbls[NUM_HUFF_TBLS];$/;"	m	struct:__anon3	file:
desired	jpeg/jquant2.c	/^  int desired;			\/* desired # of colors = size of colormap *\/$/;"	m	struct:__anon26	file:
desired_number_of_colors	jpeg/jpeglib.h	/^  int desired_number_of_colors;	\/* max # colors to use in created colormap *\/$/;"	m	struct:jpeg_decompress_struct
dest	jpeg/jpeglib.h	/^  struct jpeg_destination_mgr * dest;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_destination_mgr
direction	R3Scene.h	/^  R3Vector direction;$/;"	m	struct:R3Light
dirty	jpeg/jmemmgr.c	/^  jboolean dirty;		\/* do current buffer contents need written? *\/$/;"	m	struct:jvirt_barray_control	file:
dirty	jpeg/jmemmgr.c	/^  jboolean dirty;		\/* do current buffer contents need written? *\/$/;"	m	struct:jvirt_sarray_control	file:
discarded_bytes	jpeg/jpegint.h	/^  unsigned int discarded_bytes;	\/* # of bytes skipped looking for a marker *\/$/;"	m	struct:jpeg_marker_reader
dither_mode	jpeg/jpeglib.h	/^  J_DITHER_MODE dither_mode;	\/* type of color dithering to use *\/$/;"	m	struct:jpeg_decompress_struct
divisors	jpeg/jcdctmgr.c	/^  DCTELEM * divisors[NUM_QUANT_TBLS];$/;"	m	struct:__anon1	file:
djpeg_dest_ptr	jpeg/cdjpeg.h	/^typedef struct djpeg_dest_struct * djpeg_dest_ptr;$/;"	t	typeref:struct:djpeg_dest_struct
djpeg_dest_struct	jpeg/cdjpeg.h	/^struct djpeg_dest_struct {$/;"	s
do_barray_io	jpeg/jmemmgr.c	/^do_barray_io (j_common_ptr cinfo, jvirt_barray_ptr ptr, jboolean writing)$/;"	f
do_block_smoothing	jpeg/jpeglib.h	/^  jboolean do_block_smoothing;	\/* TRUE=apply interblock smoothing *\/$/;"	m	struct:jpeg_decompress_struct
do_dct	jpeg/jcdctmgr.c	/^  forward_DCT_method_ptr do_dct;$/;"	m	struct:__anon1	file:
do_fancy_upsampling	jpeg/jpeglib.h	/^  jboolean do_fancy_upsampling;	\/* TRUE=apply fancy upsampling *\/$/;"	m	struct:jpeg_decompress_struct
do_flip_h	jpeg/transupp.c	/^do_flip_h (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
do_flip_v	jpeg/transupp.c	/^do_flip_v (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
do_float_dct	jpeg/jcdctmgr.c	/^  float_DCT_method_ptr do_float_dct;$/;"	m	struct:__anon1	file:
do_rot_180	jpeg/transupp.c	/^do_rot_180 (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
do_rot_270	jpeg/transupp.c	/^do_rot_270 (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
do_rot_90	jpeg/transupp.c	/^do_rot_90 (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
do_sarray_io	jpeg/jmemmgr.c	/^do_sarray_io (j_common_ptr cinfo, jvirt_sarray_ptr ptr, jboolean writing)$/;"	f
do_transpose	jpeg/transupp.c	/^do_transpose (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
do_transverse	jpeg/transupp.c	/^do_transverse (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
downsample	jpeg/jpeglib.h	/^  struct jpeg_downsampler * downsample;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_downsampler
downsampled_height	jpeg/jpeglib.h	/^  JDIMENSION downsampled_height; \/* actual height in samples *\/$/;"	m	struct:__anon53
downsampled_width	jpeg/jpeglib.h	/^  JDIMENSION downsampled_width;	 \/* actual width in samples *\/$/;"	m	struct:__anon53
ds_si	jpeg/jmemdos.c	/^	void far * ds_si;$/;"	m	struct:__anon19	file:
ds_si	jpeg/jmemdos.c	/^	void far * ds_si;$/;"	m	struct:__anon20	file:
dst	jpeg/jmemdos.c	/^	XMSPTR dst;$/;"	m	struct:__anon22	file:
dst_handle	jpeg/jmemdos.c	/^	XMSH dst_handle;$/;"	m	struct:__anon22	file:
dummy	jpeg/jmemmgr.c	/^  ALIGN_TYPE dummy;		\/* included in union to ensure alignment *\/$/;"	m	union:large_pool_struct	file:
dummy	jpeg/jmemmgr.c	/^  ALIGN_TYPE dummy;		\/* included in union to ensure alignment *\/$/;"	m	union:small_pool_struct	file:
dummy	jpeg/jpegint.h	/^struct jvirt_barray_control { long dummy; };$/;"	m	struct:jvirt_barray_control
dummy	jpeg/jpegint.h	/^struct jvirt_sarray_control { long dummy; };$/;"	m	struct:jvirt_sarray_control
dummy	jpeg/jpeglib.h	/^struct jpeg_c_coef_controller { long dummy; };$/;"	m	struct:jpeg_c_coef_controller
dummy	jpeg/jpeglib.h	/^struct jpeg_c_main_controller { long dummy; };$/;"	m	struct:jpeg_c_main_controller
dummy	jpeg/jpeglib.h	/^struct jpeg_c_prep_controller { long dummy; };$/;"	m	struct:jpeg_c_prep_controller
dummy	jpeg/jpeglib.h	/^struct jpeg_color_converter { long dummy; };$/;"	m	struct:jpeg_color_converter
dummy	jpeg/jpeglib.h	/^struct jpeg_color_deconverter { long dummy; };$/;"	m	struct:jpeg_color_deconverter
dummy	jpeg/jpeglib.h	/^struct jpeg_color_quantizer { long dummy; };$/;"	m	struct:jpeg_color_quantizer
dummy	jpeg/jpeglib.h	/^struct jpeg_comp_master { long dummy; };$/;"	m	struct:jpeg_comp_master
dummy	jpeg/jpeglib.h	/^struct jpeg_d_coef_controller { long dummy; };$/;"	m	struct:jpeg_d_coef_controller
dummy	jpeg/jpeglib.h	/^struct jpeg_d_main_controller { long dummy; };$/;"	m	struct:jpeg_d_main_controller
dummy	jpeg/jpeglib.h	/^struct jpeg_d_post_controller { long dummy; };$/;"	m	struct:jpeg_d_post_controller
dummy	jpeg/jpeglib.h	/^struct jpeg_decomp_master { long dummy; };$/;"	m	struct:jpeg_decomp_master
dummy	jpeg/jpeglib.h	/^struct jpeg_downsampler { long dummy; };$/;"	m	struct:jpeg_downsampler
dummy	jpeg/jpeglib.h	/^struct jpeg_entropy_decoder { long dummy; };$/;"	m	struct:jpeg_entropy_decoder
dummy	jpeg/jpeglib.h	/^struct jpeg_entropy_encoder { long dummy; };$/;"	m	struct:jpeg_entropy_encoder
dummy	jpeg/jpeglib.h	/^struct jpeg_forward_dct { long dummy; };$/;"	m	struct:jpeg_forward_dct
dummy	jpeg/jpeglib.h	/^struct jpeg_input_controller { long dummy; };$/;"	m	struct:jpeg_input_controller
dummy	jpeg/jpeglib.h	/^struct jpeg_inverse_dct { long dummy; };$/;"	m	struct:jpeg_inverse_dct
dummy	jpeg/jpeglib.h	/^struct jpeg_marker_reader { long dummy; };$/;"	m	struct:jpeg_marker_reader
dummy	jpeg/jpeglib.h	/^struct jpeg_marker_writer { long dummy; };$/;"	m	struct:jpeg_marker_writer
dummy	jpeg/jpeglib.h	/^struct jpeg_upsampler { long dummy; };$/;"	m	struct:jpeg_upsampler
dummy	jpeg/jpeglib.h	/^struct jvirt_barray_control { long dummy; };$/;"	m	struct:jvirt_barray_control
dummy	jpeg/jpeglib.h	/^struct jvirt_sarray_control { long dummy; };$/;"	m	struct:jvirt_sarray_control
dummy_buffer	jpeg/jctrans.c	/^  JBLOCKROW dummy_buffer[C_MAX_BLOCKS_IN_MCU];$/;"	m	struct:__anon39	file:
dummy_consume_data	jpeg/jdcoefct.c	/^dummy_consume_data (j_decompress_ptr cinfo)$/;"	f
dump_buffer	jpeg/jcphuff.c	/^dump_buffer (phuff_entropy_ptr entropy)$/;"	f
dup_pixel_count	jpeg/rdtarga.c	/^  int dup_pixel_count;		\/* # of times to duplicate previous pixel *\/$/;"	m	struct:_tga_source_struct	file:
dx	jpeg/jmemdos.c	/^	unsigned short ax, dx, bx;$/;"	m	struct:__anon19	file:
dx	jpeg/jmemdos.c	/^	unsigned short ax, dx, bx;$/;"	m	struct:__anon20	file:
ehufco	jpeg/jchuff.h	/^  unsigned int ehufco[256];	\/* code for each symbol *\/$/;"	m	struct:__anon25
ehufsi	jpeg/jchuff.h	/^  char ehufsi[256];		\/* length of code for each symbol *\/$/;"	m	struct:__anon25
emission	R3Scene.h	/^  R3Rgb emission;$/;"	m	struct:R3Material
emit_2bytes	jpeg/jcmarker.c	/^emit_2bytes (j_compress_ptr cinfo, int value)$/;"	f
emit_adobe_app14	jpeg/jcmarker.c	/^emit_adobe_app14 (j_compress_ptr cinfo)$/;"	f
emit_bits	jpeg/jcphuff.c	/^emit_bits (phuff_entropy_ptr entropy, unsigned int code, int size)$/;"	f
emit_buffered_bits	jpeg/jcphuff.c	/^emit_buffered_bits (phuff_entropy_ptr entropy, char * bufstart,$/;"	f
emit_byte	jpeg/jchuff.c	270;"	d	file:
emit_byte	jpeg/jcmarker.c	/^emit_byte (j_compress_ptr cinfo, int val)$/;"	f
emit_byte	jpeg/jcphuff.c	198;"	d	file:
emit_dac	jpeg/jcmarker.c	/^emit_dac (j_compress_ptr cinfo)$/;"	f
emit_dht	jpeg/jcmarker.c	/^emit_dht (j_compress_ptr cinfo, int index, jboolean is_ac)$/;"	f
emit_dqt	jpeg/jcmarker.c	/^emit_dqt (j_compress_ptr cinfo, int index)$/;"	f
emit_dri	jpeg/jcmarker.c	/^emit_dri (j_compress_ptr cinfo)$/;"	f
emit_eobrun	jpeg/jcphuff.c	/^emit_eobrun (phuff_entropy_ptr entropy)$/;"	f
emit_header	jpeg/wrgif.c	/^emit_header (gif_dest_ptr dinfo, int num_colors, JSAMPARRAY colormap)$/;"	f
emit_jfif_app0	jpeg/jcmarker.c	/^emit_jfif_app0 (j_compress_ptr cinfo)$/;"	f
emit_marker	jpeg/jcmarker.c	/^emit_marker (j_compress_ptr cinfo, JPEG_MARKER mark)$/;"	f
emit_message	jpeg/jerror.c	/^emit_message (j_common_ptr cinfo, int msg_level)$/;"	f
emit_restart	jpeg/jcphuff.c	/^emit_restart (phuff_entropy_ptr entropy, int restart_num)$/;"	f
emit_sof	jpeg/jcmarker.c	/^emit_sof (j_compress_ptr cinfo, JPEG_MARKER code)$/;"	f
emit_sos	jpeg/jcmarker.c	/^emit_sos (j_compress_ptr cinfo)$/;"	f
emit_symbol	jpeg/jcphuff.c	/^emit_symbol (phuff_entropy_ptr entropy, int tbl_no, int symbol)$/;"	f
ems_handle	jpeg/jmemsys.h	/^  EMSH ems_handle;		\/* handle if it's a chunk of EMS *\/$/;"	m	union:__anon8
enable_1pass_quant	jpeg/jpeglib.h	/^  jboolean enable_1pass_quant;	\/* enable future use of 1-pass quantizer *\/$/;"	m	struct:jpeg_decompress_struct
enable_2pass_quant	jpeg/jpeglib.h	/^  jboolean enable_2pass_quant;	\/* enable future use of 2-pass quantizer *\/$/;"	m	struct:jpeg_decompress_struct
enable_external_quant	jpeg/jpeglib.h	/^  jboolean enable_external_quant;\/* enable future use of external colormap *\/$/;"	m	struct:jpeg_decompress_struct
enable_signal_catcher	jpeg/cdjpeg.c	/^enable_signal_catcher (j_common_ptr cinfo)$/;"	f
enable_signal_catcher	jpeg/cdjpeg.h	110;"	d
encode_mcu_AC_first	jpeg/jcphuff.c	/^METHODDEF(jboolean) encode_mcu_AC_first JPP((j_compress_ptr cinfo,$/;"	v
encode_mcu_AC_refine	jpeg/jcphuff.c	/^METHODDEF(jboolean) encode_mcu_AC_refine JPP((j_compress_ptr cinfo,$/;"	v
end	R3/R3Segment.h	/^  R3Point end;$/;"	m	class:R3Segment
end_progress_monitor	jpeg/cdjpeg.c	/^end_progress_monitor (j_common_ptr cinfo)$/;"	f
end_progress_monitor	jpeg/cdjpeg.h	112;"	d
entropy	jpeg/jpeglib.h	/^  struct jpeg_entropy_decoder * entropy;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_entropy_decoder
entropy	jpeg/jpeglib.h	/^  struct jpeg_entropy_encoder * entropy;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_entropy_encoder
eoi_reached	jpeg/jpegint.h	/^  jboolean eoi_reached;		\/* True when EOI has been consumed *\/$/;"	m	struct:jpeg_input_controller
error_exit	jpeg/ckconfig.c	/^  int (*error_exit) (char *msgtext);$/;"	m	struct:methods_struct	file:
error_exit	jpeg/jerror.c	/^error_exit (j_common_ptr cinfo)$/;"	f
error_limiter	jpeg/jquant2.c	/^  int * error_limiter;		\/* table for clamping the applied error *\/$/;"	m	struct:__anon26	file:
examine_app0	jpeg/jdmarker.c	/^examine_app0 (j_decompress_ptr cinfo, JOCTET FAR * data,$/;"	f
examine_app14	jpeg/jdmarker.c	/^examine_app14 (j_decompress_ptr cinfo, JOCTET FAR * data,$/;"	f
exec_prefix	jpeg/Makefile	/^exec_prefix = ${prefix}$/;"	m
expand_bottom_edge	jpeg/jcprepct.c	/^expand_bottom_edge (JSAMPARRAY image_data, JDIMENSION num_cols,$/;"	f
expand_right_edge	jpeg/jcsample.c	/^expand_right_edge (JSAMPARRAY image_data, int num_rows,$/;"	f
extend_offset	jpeg/jdhuff.c	/^static const int extend_offset[16] = \/* entry n is (-1 << n) + 1 *\/$/;"	v	file:
extend_offset	jpeg/jdphuff.c	/^static const int extend_offset[16] = \/* entry n is (-1 << n) + 1 *\/$/;"	v	file:
extend_test	jpeg/jdhuff.c	/^static const int extend_test[16] =   \/* entry n is 2**(n-1) *\/$/;"	v	file:
extend_test	jpeg/jdphuff.c	/^static const int extend_test[16] =   \/* entry n is 2**(n-1) *\/$/;"	v	file:
extra_pool_slop	jpeg/jmemmgr.c	/^static const size_t extra_pool_slop[JPOOL_NUMPOOLS] = $/;"	v	file:
eye	R3Scene.h	/^  R3Point eye;$/;"	m	struct:R3Camera
faces	R3/R3Mesh.h	/^  vector<R3MeshFace *> faces;$/;"	m	struct:R3Mesh
far_free	jpeg/jmemdos.c	59;"	d	file:
far_free	jpeg/jmemdos.c	64;"	d	file:
far_free	jpeg/jmemdos.c	70;"	d	file:
far_malloc	jpeg/jmemdos.c	58;"	d	file:
far_malloc	jpeg/jmemdos.c	63;"	d	file:
far_malloc	jpeg/jmemdos.c	69;"	d	file:
fardist	R3Scene.h	/^  double neardist, fardist;$/;"	m	struct:R3Camera
fdct	jpeg/jpeglib.h	/^  struct jpeg_forward_dct * fdct;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_forward_dct
file_handle	jpeg/jmemsys.h	/^  short file_handle;		\/* DOS file handle if it's a temp file *\/$/;"	m	union:__anon8
fill_a_scan	jpeg/jcparam.c	/^fill_a_scan (jpeg_scan_info * scanptr, int ci,$/;"	f
fill_dc_scans	jpeg/jcparam.c	/^fill_dc_scans (jpeg_scan_info * scanptr, int ncomps, int Ah, int Al)$/;"	f
fill_inverse_cmap	jpeg/jquant2.c	/^fill_inverse_cmap (j_decompress_ptr cinfo, int c0, int c1, int c2)$/;"	f
fill_scans	jpeg/jcparam.c	/^fill_scans (jpeg_scan_info * scanptr, int ncomps,$/;"	f
find_best_colors	jpeg/jquant2.c	/^find_best_colors (j_decompress_ptr cinfo, int minc0, int minc1, int minc2,$/;"	f
find_nearby_colors	jpeg/jquant2.c	/^find_nearby_colors (j_decompress_ptr cinfo, int minc0, int minc1, int minc2,$/;"	f
finish_input_bmp	jpeg/rdbmp.c	/^finish_input_bmp (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
finish_input_pass	jpeg/jdinput.c	/^finish_input_pass (j_decompress_ptr cinfo)$/;"	f
finish_input_ppm	jpeg/rdppm.c	/^finish_input_ppm (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
finish_input_rle	jpeg/rdrle.c	/^finish_input_rle (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
finish_input_tga	jpeg/rdtarga.c	/^finish_input_tga (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
finish_output_bmp	jpeg/wrbmp.c	/^finish_output_bmp (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
finish_output_gif	jpeg/wrgif.c	/^finish_output_gif (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
finish_output_pass	jpeg/jdmaster.c	/^finish_output_pass (j_decompress_ptr cinfo)$/;"	f
finish_output_ppm	jpeg/wrppm.c	/^finish_output_ppm (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
finish_output_rle	jpeg/wrrle.c	/^finish_output_rle (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
finish_output_tga	jpeg/wrtarga.c	/^finish_output_tga (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
finish_pass1	jpeg/jquant2.c	/^finish_pass1 (j_decompress_ptr cinfo)$/;"	f
finish_pass2	jpeg/jquant2.c	/^finish_pass2 (j_decompress_ptr cinfo)$/;"	f
finish_pass_1_quant	jpeg/jquant1.c	/^finish_pass_1_quant (j_decompress_ptr cinfo)$/;"	f
finish_pass_gather	jpeg/jchuff.c	/^METHODDEF(void) finish_pass_gather JPP((j_compress_ptr cinfo));$/;"	v
finish_pass_gather	jpeg/jchuff.c	/^finish_pass_gather (j_compress_ptr cinfo)$/;"	f
finish_pass_gather_phuff	jpeg/jcphuff.c	/^finish_pass_gather_phuff (j_compress_ptr cinfo)$/;"	f
finish_pass_huff	jpeg/jchuff.c	/^METHODDEF(void) finish_pass_huff JPP((j_compress_ptr cinfo));$/;"	v
finish_pass_huff	jpeg/jchuff.c	/^finish_pass_huff (j_compress_ptr cinfo)$/;"	f
finish_pass_master	jpeg/jcmaster.c	/^finish_pass_master (j_compress_ptr cinfo)$/;"	f
finish_pass_phuff	jpeg/jcphuff.c	/^finish_pass_phuff (j_compress_ptr cinfo)$/;"	f
first_addon_message	jpeg/jpeglib.h	/^  int first_addon_message;	\/* code for first string in addon table *\/$/;"	m	struct:jpeg_error_mgr
first_marker	jpeg/rdjpgcom.c	/^first_marker (void)$/;"	f	file:
first_marker	jpeg/wrjpgcom.c	/^first_marker (void)$/;"	f	file:
first_pool_slop	jpeg/jmemmgr.c	/^static const size_t first_pool_slop[JPOOL_NUMPOOLS] = $/;"	v	file:
first_undef_row	jpeg/jmemmgr.c	/^  JDIMENSION first_undef_row;	\/* row # of first uninitialized row *\/$/;"	m	struct:jvirt_barray_control	file:
first_undef_row	jpeg/jmemmgr.c	/^  JDIMENSION first_undef_row;	\/* row # of first uninitialized row *\/$/;"	m	struct:jvirt_sarray_control	file:
float_array	jpeg/jddctmgr.c	/^  FLOAT_MULT_TYPE float_array[DCTSIZE2];$/;"	m	union:__anon71	file:
float_divisors	jpeg/jcdctmgr.c	/^  FAST_FLOAT * float_divisors[NUM_QUANT_TBLS];$/;"	m	struct:__anon1	file:
flush_bits	jpeg/jcphuff.c	/^flush_bits (phuff_entropy_ptr entropy)$/;"	f
flush_packet	jpeg/wrgif.c	/^flush_packet (gif_dest_ptr dinfo)$/;"	f
force_grayscale	jpeg/transupp.h	/^  jboolean force_grayscale;	\/* if TRUE, convert color image to grayscale *\/$/;"	m	struct:__anon44
format_message	jpeg/jerror.c	/^format_message (j_common_ptr cinfo, char * buffer)$/;"	f
forward_DCT	jpeg/jcdctmgr.c	/^forward_DCT (j_compress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
forward_DCT_float	jpeg/jcdctmgr.c	/^forward_DCT_float (j_compress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
free_in_buffer	jpeg/jchuff.c	/^  size_t free_in_buffer;	\/* # of byte spaces remaining in buffer *\/$/;"	m	struct:__anon15	file:
free_in_buffer	jpeg/jcphuff.c	/^  size_t free_in_buffer;	\/* # of byte spaces remaining in buffer *\/$/;"	m	struct:__anon60	file:
free_in_buffer	jpeg/jpeglib.h	/^  size_t free_in_buffer;	\/* # of byte spaces remaining in buffer *\/$/;"	m	struct:jpeg_destination_mgr
free_pool	jpeg/jmemmgr.c	/^free_pool (j_common_ptr cinfo, int pool_id)$/;"	f
fserrors	jpeg/jquant1.c	/^  FSERRPTR fserrors[MAX_Q_COMPS]; \/* accumulated errors *\/$/;"	m	struct:__anon24	file:
fserrors	jpeg/jquant2.c	/^  FSERRPTR fserrors;		\/* accumulated errors *\/$/;"	m	struct:__anon26	file:
fullsize_downsample	jpeg/jcsample.c	/^fullsize_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
fullsize_smooth_downsample	jpeg/jcsample.c	/^fullsize_smooth_downsample (j_compress_ptr cinfo, jpeg_component_info *compptr,$/;"	f
fullsize_upsample	jpeg/jdsample.c	/^fullsize_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
gather_statistics	jpeg/jcphuff.c	/^  jboolean gather_statistics;$/;"	m	struct:__anon60	file:
get_32bit_row	jpeg/rdtarga.c	263;"	d	file:
get_buffer	jpeg/jdhuff.h	/^  bit_buf_type get_buffer;	\/* current bit-extraction buffer *\/$/;"	m	struct:__anon32
get_buffer	jpeg/jdhuff.h	/^  bit_buf_type get_buffer;	\/* current bit-extraction buffer *\/$/;"	m	struct:__anon33
get_dac	jpeg/jdmarker.c	413;"	d	file:
gif_dest_ptr	jpeg/wrgif.c	/^typedef gif_dest_struct * gif_dest_ptr;$/;"	t	file:
gif_dest_struct	jpeg/wrgif.c	/^} gif_dest_struct;$/;"	t	typeref:struct:__anon50	file:
glutBitmap8By13	GLUT.windows/glut.h	/^GLUTAPI void *glutBitmap8By13;$/;"	v
glutBitmap9By15	GLUT.windows/glut.h	/^GLUTAPI void *glutBitmap9By15;$/;"	v
glutBitmapHelvetica10	GLUT.windows/glut.h	/^GLUTAPI void *glutBitmapHelvetica10;$/;"	v
glutBitmapHelvetica12	GLUT.windows/glut.h	/^GLUTAPI void *glutBitmapHelvetica12;$/;"	v
glutBitmapHelvetica18	GLUT.windows/glut.h	/^GLUTAPI void *glutBitmapHelvetica18;$/;"	v
glutBitmapTimesRoman10	GLUT.windows/glut.h	/^GLUTAPI void *glutBitmapTimesRoman10;$/;"	v
glutBitmapTimesRoman24	GLUT.windows/glut.h	/^GLUTAPI void *glutBitmapTimesRoman24;$/;"	v
glutCreateMenu	GLUT.windows/glut.h	551;"	d
glutCreateMenu_ATEXIT_HACK	GLUT.windows/glut.h	/^static int APIENTRY glutCreateMenu_ATEXIT_HACK(void (GLUTCALLBACK *func)(int)) { return __glutCreateMenuWithExit(func, exit); }$/;"	f
glutCreateWindow	GLUT.windows/glut.h	505;"	d
glutCreateWindow_ATEXIT_HACK	GLUT.windows/glut.h	/^static int APIENTRY glutCreateWindow_ATEXIT_HACK(const char *title) { return __glutCreateWindowWithExit(title, exit); }$/;"	f
glutInit	GLUT.windows/glut.h	488;"	d
glutInit_ATEXIT_HACK	GLUT.windows/glut.h	/^static void APIENTRY glutInit_ATEXIT_HACK(int *argcp, char **argv) { __glutInitWithExit(argcp, argv, exit); }$/;"	f
glutStrokeMonoRoman	GLUT.windows/glut.h	/^GLUTAPI void *glutStrokeMonoRoman;$/;"	v
glutStrokeRoman	GLUT.windows/glut.h	/^GLUTAPI void *glutStrokeRoman;$/;"	v
gray_rgb_convert	jpeg/jdcolor.c	/^gray_rgb_convert (j_decompress_ptr cinfo,$/;"	f
grayscale_convert	jpeg/jccolor.c	/^grayscale_convert (j_compress_ptr cinfo,$/;"	f
grayscale_convert	jpeg/jdcolor.c	/^grayscale_convert (j_decompress_ptr cinfo,$/;"	f
h2v1_downsample	jpeg/jcsample.c	/^h2v1_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
h2v1_fancy_upsample	jpeg/jdsample.c	/^h2v1_fancy_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
h2v1_merged_upsample	jpeg/jdmerge.c	/^h2v1_merged_upsample (j_decompress_ptr cinfo,$/;"	f
h2v1_upsample	jpeg/jdsample.c	/^h2v1_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
h2v2_downsample	jpeg/jcsample.c	/^h2v2_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
h2v2_fancy_upsample	jpeg/jdsample.c	/^h2v2_fancy_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
h2v2_merged_upsample	jpeg/jdmerge.c	/^h2v2_merged_upsample (j_decompress_ptr cinfo,$/;"	f
h2v2_smooth_downsample	jpeg/jcsample.c	/^h2v2_smooth_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
h2v2_upsample	jpeg/jdsample.c	/^h2v2_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
h_expand	jpeg/jdsample.c	/^  UINT8 h_expand[MAX_COMPONENTS];$/;"	m	struct:__anon11	file:
h_samp_factor	jpeg/jpeglib.h	/^  int h_samp_factor;		\/* horizontal sampling factor (1..4) *\/$/;"	m	struct:__anon53
handle	jpeg/jmemsys.h	/^  handle_union handle;		\/* reference to backing-store storage object *\/$/;"	m	struct:backing_store_struct
handle_union	jpeg/jmemsys.h	/^} handle_union;$/;"	t	typeref:union:__anon8
has_multiple_scans	jpeg/jpegint.h	/^  jboolean has_multiple_scans;	\/* True if file has multiple scans *\/$/;"	m	struct:jpeg_input_controller
hdr	jpeg/jmemmgr.c	/^  } hdr;$/;"	m	union:large_pool_struct	typeref:struct:large_pool_struct::__anon29	file:
hdr	jpeg/jmemmgr.c	/^  } hdr;$/;"	m	union:small_pool_struct	typeref:struct:small_pool_struct::__anon28	file:
header	jpeg/rdrle.c	/^  rle_hdr header;               \/* Input file information *\/$/;"	m	struct:_rle_source_struct	file:
height	R2/R2Image.h	/^  int height;$/;"	m	class:R2Image
height	R3/R3Cone.h	/^  double height;$/;"	m	class:R3Cone
height	R3/R3Cylinder.h	/^  double height;$/;"	m	class:R3Cylinder
height_in_blocks	jpeg/jpeglib.h	/^  JDIMENSION height_in_blocks;$/;"	m	struct:__anon53
hist1d	jpeg/jquant2.c	/^typedef histcell hist1d[HIST_C2_ELEMS]; \/* typedefs for the array *\/$/;"	t	file:
hist2d	jpeg/jquant2.c	/^typedef hist1d FAR * hist2d;	\/* type for the 2nd-level pointers *\/$/;"	t	file:
hist3d	jpeg/jquant2.c	/^typedef hist2d * hist3d;	\/* type for top-level pointer *\/$/;"	t	file:
histcell	jpeg/jquant2.c	/^typedef UINT16 histcell;	\/* histogram cell; prefer an unsigned type *\/$/;"	t	file:
histogram	jpeg/jquant2.c	/^  hist3d histogram;		\/* pointer to the histogram *\/$/;"	m	struct:__anon26	file:
histptr	jpeg/jquant2.c	/^typedef histcell FAR * histptr;	\/* for pointers to histogram cells *\/$/;"	t	file:
hit	raytrace.h	/^    bool hit;$/;"	m	struct:R3Intersection
htest_one_block	jpeg/jchuff.c	/^htest_one_block (j_compress_ptr cinfo, JCOEFPTR block, int last_dc_val,$/;"	f
huff_entropy_decoder	jpeg/jdhuff.c	/^} huff_entropy_decoder;$/;"	t	typeref:struct:__anon67	file:
huff_entropy_encoder	jpeg/jchuff.c	/^} huff_entropy_encoder;$/;"	t	typeref:struct:__anon14	file:
huff_entropy_ptr	jpeg/jchuff.c	/^typedef huff_entropy_encoder * huff_entropy_ptr;$/;"	t	file:
huff_entropy_ptr	jpeg/jdhuff.c	/^typedef huff_entropy_decoder * huff_entropy_ptr;$/;"	t	file:
huff_opt_pass	jpeg/jcmaster.c	/^	huff_opt_pass,		\/* Huffman code optimization pass *\/$/;"	e	enum:__anon63	file:
huffval	jpeg/jpeglib.h	/^  UINT8 huffval[256];		\/* The symbols, in order of incr code length *\/$/;"	m	struct:__anon52
i	jpeg/jpeglib.h	/^    int i[8];$/;"	m	union:jpeg_error_mgr::__anon58
iMCU_row_ctr	jpeg/jdmainct.c	/^  JDIMENSION iMCU_row_ctr;	\/* counts iMCU rows to detect image top\/bot *\/$/;"	m	struct:__anon17	file:
iMCU_row_num	jpeg/jccoefct.c	/^  JDIMENSION iMCU_row_num;	\/* iMCU row # within image *\/$/;"	m	struct:__anon62	file:
iMCU_row_num	jpeg/jctrans.c	/^  JDIMENSION iMCU_row_num;	\/* iMCU row # within image *\/$/;"	m	struct:__anon39	file:
id	R3/R3Mesh.h	/^  int id; $/;"	m	struct:R3MeshVertex
id	R3/R3Mesh.h	/^  int id;$/;"	m	struct:R3MeshFace
id	R3Scene.h	/^  int id;$/;"	m	struct:R3Material
idct	jpeg/jpeglib.h	/^  struct jpeg_inverse_dct * idct;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_inverse_dct
ifast_array	jpeg/jddctmgr.c	/^  IFAST_MULT_TYPE ifast_array[DCTSIZE2];$/;"	m	union:__anon71	file:
image	jpeg/rdrle.c	/^  jvirt_sarray_ptr image;       \/* virtual array to hold the image *\/$/;"	m	struct:_rle_source_struct	file:
image	jpeg/wrrle.c	/^  jvirt_sarray_ptr image;	\/* virtual array to store the output image *\/$/;"	m	struct:__anon10	file:
image_height	jpeg/jpeglib.h	/^  JDIMENSION image_height;	\/* input image height *\/$/;"	m	struct:jpeg_compress_struct
image_height	jpeg/jpeglib.h	/^  JDIMENSION image_height;	\/* nominal image height *\/$/;"	m	struct:jpeg_decompress_struct
image_width	jpeg/jpeglib.h	/^  JDIMENSION image_width;	\/* input image width *\/$/;"	m	struct:jpeg_compress_struct
image_width	jpeg/jpeglib.h	/^  JDIMENSION image_width;	\/* nominal image width (from SOF marker) *\/$/;"	m	struct:jpeg_decompress_struct
in_color_space	jpeg/jpeglib.h	/^  J_COLOR_SPACE in_color_space;	\/* colorspace of input image *\/$/;"	m	struct:jpeg_compress_struct
includedir	jpeg/Makefile	/^includedir = $(prefix)\/include$/;"	m
indexofrefraction	R3Scene.h	/^  double indexofrefraction;$/;"	m	struct:R3Material
infile	jpeg/jdatasrc.c	/^  FILE * infile;		\/* source stream *\/$/;"	m	struct:__anon69	file:
infile	jpeg/rdjpgcom.c	/^static FILE * infile;		\/* input JPEG file *\/$/;"	v	file:
infile	jpeg/wrjpgcom.c	/^static FILE * infile;		\/* input JPEG file *\/$/;"	v	file:
inheaders	jpeg/jdinput.c	/^  jboolean inheaders;		\/* TRUE until first SOS is reached *\/$/;"	m	struct:__anon12	file:
init_destination	jpeg/jdatadst.c	/^init_destination (j_compress_ptr cinfo)$/;"	f
init_error_limit	jpeg/jquant2.c	/^init_error_limit (j_decompress_ptr cinfo)$/;"	f
init_source	jpeg/jdatasrc.c	/^init_source (j_decompress_ptr cinfo)$/;"	f
initial_setup	jpeg/jcmaster.c	/^initial_setup (j_compress_ptr cinfo)$/;"	f
initial_setup	jpeg/jdinput.c	/^initial_setup (j_decompress_ptr cinfo)$/;"	f
input_components	jpeg/jpeglib.h	/^  int input_components;		\/* # of color components in input image *\/$/;"	m	struct:jpeg_compress_struct
input_file	jpeg/cdjpeg.h	/^  FILE *input_file;$/;"	m	struct:cjpeg_source_struct
input_gamma	jpeg/jpeglib.h	/^  double input_gamma;		\/* image gamma of input image *\/$/;"	m	struct:jpeg_compress_struct
input_iMCU_row	jpeg/jpeglib.h	/^  JDIMENSION input_iMCU_row;	\/* Number of iMCU rows completed *\/$/;"	m	struct:jpeg_decompress_struct
input_scan_number	jpeg/jpeglib.h	/^  int input_scan_number;	\/* Number of SOS markers seen so far *\/$/;"	m	struct:jpeg_decompress_struct
input_scene_name	minecraft.cpp	/^static char *input_scene_name = NULL;$/;"	v	file:
inputctl	jpeg/jpeglib.h	/^  struct jpeg_input_controller * inputctl;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_input_controller
insufficient_data	jpeg/jpegint.h	/^  jboolean insufficient_data;	\/* set TRUE after emitting warning *\/$/;"	m	struct:jpeg_entropy_decoder
int_downsample	jpeg/jcsample.c	/^int_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
int_upsample	jpeg/jdsample.c	/^int_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
inverse_DCT	jpeg/jpegint.h	/^  inverse_DCT_method_ptr inverse_DCT[MAX_COMPONENTS];$/;"	m	struct:jpeg_inverse_dct
iobuffer	jpeg/rdppm.c	/^  U_CHAR *iobuffer;		\/* non-FAR pointer to I\/O buffer *\/$/;"	m	struct:__anon48	file:
iobuffer	jpeg/wrppm.c	/^  char *iobuffer;		\/* fwrite's I\/O buffer *\/$/;"	m	struct:__anon40	file:
iobuffer	jpeg/wrtarga.c	/^  char *iobuffer;		\/* physical I\/O buffer *\/$/;"	m	struct:__anon59	file:
is_alnum	jpeg/ansi2knr.c	306;"	d	file:
is_alpha	jpeg/ansi2knr.c	305;"	d	file:
is_ascii	jpeg/ansi2knr.c	299;"	d	file:
is_ascii	jpeg/ansi2knr.c	301;"	d	file:
is_char_signed	jpeg/ckconfig.c	/^int is_char_signed (int arg)$/;"	f
is_dummy_pass	jpeg/jpegint.h	/^  jboolean is_dummy_pass;	\/* True during 1st pass for 2-pass quant *\/$/;"	m	struct:jpeg_decomp_master
is_last_pass	jpeg/jpegint.h	/^  jboolean is_last_pass;		\/* True during last pass *\/$/;"	m	struct:jpeg_comp_master
is_os2	jpeg/wrbmp.c	/^  jboolean is_os2;		\/* saves the OS2 format request flag *\/$/;"	m	struct:__anon47	file:
is_padded	jpeg/jquant1.c	/^  jboolean is_padded;		\/* is the colorindex padded for odither? *\/$/;"	m	struct:__anon24	file:
is_shifting_signed	jpeg/ckconfig.c	/^int is_shifting_signed (long arg)$/;"	f
is_space	jpeg/ansi2knr.c	304;"	d	file:
is_targa	jpeg/cjpeg.c	/^static jboolean is_targa;	\/* records user -targa switch *\/$/;"	v	file:
isidchar	jpeg/ansi2knr.c	309;"	d	file:
isidfirstchar	jpeg/ansi2knr.c	310;"	d	file:
islow_array	jpeg/jddctmgr.c	/^  ISLOW_MULT_TYPE islow_array[DCTSIZE2];$/;"	m	union:__anon71	file:
j_common_ptr	jpeg/jpeglib.h	/^typedef struct jpeg_common_struct * j_common_ptr;$/;"	t	typeref:struct:jpeg_common_struct
j_compress_ptr	jpeg/jpeglib.h	/^typedef struct jpeg_compress_struct * j_compress_ptr;$/;"	t	typeref:struct:jpeg_compress_struct
j_decompress_ptr	jpeg/jpeglib.h	/^typedef struct jpeg_decompress_struct * j_decompress_ptr;$/;"	t	typeref:struct:jpeg_decompress_struct
jboolean	jpeg/jmorecfg.h	/^typedef int jboolean;$/;"	t
jcopy_block_row	jpeg/jpegint.h	326;"	d
jcopy_block_row	jpeg/jutils.c	/^jcopy_block_row (JBLOCKROW input_row, JBLOCKROW output_row,$/;"	f
jcopy_markers_execute	jpeg/transupp.c	/^jcopy_markers_execute (j_decompress_ptr srcinfo, j_compress_ptr dstinfo,$/;"	f
jcopy_markers_execute	jpeg/transupp.h	32;"	d
jcopy_markers_setup	jpeg/transupp.c	/^jcopy_markers_setup (j_decompress_ptr srcinfo, JCOPY_OPTION option)$/;"	f
jcopy_markers_setup	jpeg/transupp.h	31;"	d
jcopy_sample_rows	jpeg/jpegint.h	325;"	d
jcopy_sample_rows	jpeg/jutils.c	/^jcopy_sample_rows (JSAMPARRAY input_array, int source_row,$/;"	f
jdiv_round_up	jpeg/jpegint.h	323;"	d
jdiv_round_up	jpeg/jutils.c	/^jdiv_round_up (long a, long b)$/;"	f
jinit_1pass_quantizer	jpeg/jpegint.h	319;"	d
jinit_1pass_quantizer	jpeg/jquant1.c	/^jinit_1pass_quantizer (j_decompress_ptr cinfo)$/;"	f
jinit_2pass_quantizer	jpeg/jpegint.h	320;"	d
jinit_2pass_quantizer	jpeg/jquant2.c	/^jinit_2pass_quantizer (j_decompress_ptr cinfo)$/;"	f
jinit_c_coef_controller	jpeg/jccoefct.c	/^jinit_c_coef_controller (j_compress_ptr cinfo, jboolean need_full_buffer)$/;"	f
jinit_c_coef_controller	jpeg/jpegint.h	301;"	d
jinit_c_main_controller	jpeg/jcmainct.c	/^jinit_c_main_controller (j_compress_ptr cinfo, jboolean need_full_buffer)$/;"	f
jinit_c_main_controller	jpeg/jpegint.h	299;"	d
jinit_c_master_control	jpeg/jcmaster.c	/^jinit_c_master_control (j_compress_ptr cinfo, jboolean transcode_only)$/;"	f
jinit_c_master_control	jpeg/jpegint.h	298;"	d
jinit_c_prep_controller	jpeg/jcprepct.c	/^jinit_c_prep_controller (j_compress_ptr cinfo, jboolean need_full_buffer)$/;"	f
jinit_c_prep_controller	jpeg/jpegint.h	300;"	d
jinit_color_converter	jpeg/jccolor.c	/^jinit_color_converter (j_compress_ptr cinfo)$/;"	f
jinit_color_converter	jpeg/jpegint.h	302;"	d
jinit_color_deconverter	jpeg/jdcolor.c	/^jinit_color_deconverter (j_decompress_ptr cinfo)$/;"	f
jinit_color_deconverter	jpeg/jpegint.h	318;"	d
jinit_compress_master	jpeg/jcinit.c	/^jinit_compress_master (j_compress_ptr cinfo)$/;"	f
jinit_compress_master	jpeg/jpegint.h	297;"	d
jinit_d_coef_controller	jpeg/jdcoefct.c	/^jinit_d_coef_controller (j_decompress_ptr cinfo, jboolean need_full_buffer)$/;"	f
jinit_d_coef_controller	jpeg/jpegint.h	310;"	d
jinit_d_main_controller	jpeg/jdmainct.c	/^jinit_d_main_controller (j_decompress_ptr cinfo, jboolean need_full_buffer)$/;"	f
jinit_d_main_controller	jpeg/jpegint.h	309;"	d
jinit_d_post_controller	jpeg/jdpostct.c	/^jinit_d_post_controller (j_decompress_ptr cinfo, jboolean need_full_buffer)$/;"	f
jinit_d_post_controller	jpeg/jpegint.h	311;"	d
jinit_downsampler	jpeg/jcsample.c	/^jinit_downsampler (j_compress_ptr cinfo)$/;"	f
jinit_downsampler	jpeg/jpegint.h	303;"	d
jinit_forward_dct	jpeg/jcdctmgr.c	/^jinit_forward_dct (j_compress_ptr cinfo)$/;"	f
jinit_forward_dct	jpeg/jpegint.h	304;"	d
jinit_huff_decoder	jpeg/jdhuff.c	/^jinit_huff_decoder (j_decompress_ptr cinfo)$/;"	f
jinit_huff_decoder	jpeg/jpegint.h	314;"	d
jinit_huff_encoder	jpeg/jchuff.c	/^jinit_huff_encoder (j_compress_ptr cinfo)$/;"	f
jinit_huff_encoder	jpeg/jpegint.h	305;"	d
jinit_input_controller	jpeg/jdinput.c	/^jinit_input_controller (j_decompress_ptr cinfo)$/;"	f
jinit_input_controller	jpeg/jpegint.h	312;"	d
jinit_inverse_dct	jpeg/jddctmgr.c	/^jinit_inverse_dct (j_decompress_ptr cinfo)$/;"	f
jinit_inverse_dct	jpeg/jpegint.h	316;"	d
jinit_marker_reader	jpeg/jdmarker.c	/^jinit_marker_reader (j_decompress_ptr cinfo)$/;"	f
jinit_marker_reader	jpeg/jpegint.h	313;"	d
jinit_marker_writer	jpeg/jcmarker.c	/^jinit_marker_writer (j_compress_ptr cinfo)$/;"	f
jinit_marker_writer	jpeg/jpegint.h	307;"	d
jinit_master_decompress	jpeg/jdmaster.c	/^jinit_master_decompress (j_decompress_ptr cinfo)$/;"	f
jinit_master_decompress	jpeg/jpegint.h	308;"	d
jinit_memory_mgr	jpeg/jmemmgr.c	/^jinit_memory_mgr (j_common_ptr cinfo)$/;"	f
jinit_memory_mgr	jpeg/jpegint.h	322;"	d
jinit_merged_upsampler	jpeg/jdmerge.c	/^jinit_merged_upsampler (j_decompress_ptr cinfo)$/;"	f
jinit_merged_upsampler	jpeg/jpegint.h	321;"	d
jinit_phuff_decoder	jpeg/jdphuff.c	/^jinit_phuff_decoder (j_decompress_ptr cinfo)$/;"	f
jinit_phuff_decoder	jpeg/jpegint.h	315;"	d
jinit_phuff_encoder	jpeg/jcphuff.c	/^jinit_phuff_encoder (j_compress_ptr cinfo)$/;"	f
jinit_phuff_encoder	jpeg/jpegint.h	306;"	d
jinit_read_bmp	jpeg/cdjpeg.h	95;"	d
jinit_read_gif	jpeg/cdjpeg.h	97;"	d
jinit_read_ppm	jpeg/cdjpeg.h	99;"	d
jinit_read_rle	jpeg/cdjpeg.h	101;"	d
jinit_read_targa	jpeg/cdjpeg.h	103;"	d
jinit_upsampler	jpeg/jdsample.c	/^jinit_upsampler (j_decompress_ptr cinfo)$/;"	f
jinit_upsampler	jpeg/jpegint.h	317;"	d
jinit_write_bmp	jpeg/cdjpeg.h	96;"	d
jinit_write_gif	jpeg/cdjpeg.h	98;"	d
jinit_write_ppm	jpeg/cdjpeg.h	100;"	d
jinit_write_rle	jpeg/cdjpeg.h	102;"	d
jinit_write_targa	jpeg/cdjpeg.h	104;"	d
jpeg_CreateCompress	jpeg/jcapimin.c	/^jpeg_CreateCompress (j_compress_ptr cinfo, int version, size_t structsize)$/;"	f
jpeg_CreateCompress	jpeg/jpeglib.h	833;"	d
jpeg_CreateDecompress	jpeg/jdapimin.c	/^jpeg_CreateDecompress (j_decompress_ptr cinfo, int version, size_t structsize)$/;"	f
jpeg_CreateDecompress	jpeg/jpeglib.h	834;"	d
jpeg_abort	jpeg/jcomapi.c	/^jpeg_abort (j_common_ptr cinfo)$/;"	f
jpeg_abort	jpeg/jpeglib.h	877;"	d
jpeg_abort_compress	jpeg/jcapimin.c	/^jpeg_abort_compress (j_compress_ptr cinfo)$/;"	f
jpeg_abort_compress	jpeg/jpeglib.h	875;"	d
jpeg_abort_decompress	jpeg/jdapimin.c	/^jpeg_abort_decompress (j_decompress_ptr cinfo)$/;"	f
jpeg_abort_decompress	jpeg/jpeglib.h	876;"	d
jpeg_add_quant_table	jpeg/jcparam.c	/^jpeg_add_quant_table (j_compress_ptr cinfo, int which_tbl,$/;"	f
jpeg_add_quant_table	jpeg/jpeglib.h	844;"	d
jpeg_alloc_huff_table	jpeg/jcomapi.c	/^jpeg_alloc_huff_table (j_common_ptr cinfo)$/;"	f
jpeg_alloc_huff_table	jpeg/jpeglib.h	849;"	d
jpeg_alloc_quant_table	jpeg/jcomapi.c	/^jpeg_alloc_quant_table (j_common_ptr cinfo)$/;"	f
jpeg_alloc_quant_table	jpeg/jpeglib.h	848;"	d
jpeg_c_coef_controller	jpeg/jpegint.h	/^struct jpeg_c_coef_controller {$/;"	s
jpeg_c_coef_controller	jpeg/jpeglib.h	/^struct jpeg_c_coef_controller { long dummy; };$/;"	s
jpeg_c_main_controller	jpeg/jpegint.h	/^struct jpeg_c_main_controller {$/;"	s
jpeg_c_main_controller	jpeg/jpeglib.h	/^struct jpeg_c_main_controller { long dummy; };$/;"	s
jpeg_c_prep_controller	jpeg/jpegint.h	/^struct jpeg_c_prep_controller {$/;"	s
jpeg_c_prep_controller	jpeg/jpeglib.h	/^struct jpeg_c_prep_controller { long dummy; };$/;"	s
jpeg_calc_output_dimensions	jpeg/jdmaster.c	/^jpeg_calc_output_dimensions (j_decompress_ptr cinfo)$/;"	f
jpeg_calc_output_dimensions	jpeg/jpeglib.h	869;"	d
jpeg_color_converter	jpeg/jpegint.h	/^struct jpeg_color_converter {$/;"	s
jpeg_color_converter	jpeg/jpeglib.h	/^struct jpeg_color_converter { long dummy; };$/;"	s
jpeg_color_deconverter	jpeg/jpegint.h	/^struct jpeg_color_deconverter {$/;"	s
jpeg_color_deconverter	jpeg/jpeglib.h	/^struct jpeg_color_deconverter { long dummy; };$/;"	s
jpeg_color_quantizer	jpeg/jpegint.h	/^struct jpeg_color_quantizer {$/;"	s
jpeg_color_quantizer	jpeg/jpeglib.h	/^struct jpeg_color_quantizer { long dummy; };$/;"	s
jpeg_color_space	jpeg/jpeglib.h	/^  J_COLOR_SPACE jpeg_color_space; \/* colorspace of JPEG image *\/$/;"	m	struct:jpeg_compress_struct
jpeg_color_space	jpeg/jpeglib.h	/^  J_COLOR_SPACE jpeg_color_space; \/* colorspace of JPEG image *\/$/;"	m	struct:jpeg_decompress_struct
jpeg_common_fields	jpeg/jpeglib.h	/^  jpeg_common_fields;		\/* Fields common to both master struct types *\/$/;"	m	struct:jpeg_common_struct
jpeg_common_fields	jpeg/jpeglib.h	/^  jpeg_common_fields;		\/* Fields shared with jpeg_compress_struct *\/$/;"	m	struct:jpeg_decompress_struct
jpeg_common_fields	jpeg/jpeglib.h	/^  jpeg_common_fields;		\/* Fields shared with jpeg_decompress_struct *\/$/;"	m	struct:jpeg_compress_struct
jpeg_common_fields	jpeg/jpeglib.h	241;"	d
jpeg_common_struct	jpeg/jpeglib.h	/^struct jpeg_common_struct {$/;"	s
jpeg_comp_master	jpeg/jpegint.h	/^struct jpeg_comp_master {$/;"	s
jpeg_comp_master	jpeg/jpeglib.h	/^struct jpeg_comp_master { long dummy; };$/;"	s
jpeg_component_info	jpeg/jpeglib.h	/^} jpeg_component_info;$/;"	t	typeref:struct:__anon53
jpeg_compress_struct	jpeg/jpeglib.h	/^struct jpeg_compress_struct {$/;"	s
jpeg_consume_input	jpeg/jdapimin.c	/^jpeg_consume_input (j_decompress_ptr cinfo)$/;"	f
jpeg_consume_input	jpeg/jpeglib.h	868;"	d
jpeg_copy_critical_parameters	jpeg/jctrans.c	/^jpeg_copy_critical_parameters (j_decompress_ptr srcinfo,$/;"	f
jpeg_copy_critical_parameters	jpeg/jpeglib.h	874;"	d
jpeg_create_compress	jpeg/jpeglib.h	894;"	d
jpeg_create_decompress	jpeg/jpeglib.h	897;"	d
jpeg_d_coef_controller	jpeg/jpegint.h	/^struct jpeg_d_coef_controller {$/;"	s
jpeg_d_coef_controller	jpeg/jpeglib.h	/^struct jpeg_d_coef_controller { long dummy; };$/;"	s
jpeg_d_main_controller	jpeg/jpegint.h	/^struct jpeg_d_main_controller {$/;"	s
jpeg_d_main_controller	jpeg/jpeglib.h	/^struct jpeg_d_main_controller { long dummy; };$/;"	s
jpeg_d_post_controller	jpeg/jpegint.h	/^struct jpeg_d_post_controller {$/;"	s
jpeg_d_post_controller	jpeg/jpeglib.h	/^struct jpeg_d_post_controller { long dummy; };$/;"	s
jpeg_decomp_master	jpeg/jpegint.h	/^struct jpeg_decomp_master {$/;"	s
jpeg_decomp_master	jpeg/jpeglib.h	/^struct jpeg_decomp_master { long dummy; };$/;"	s
jpeg_decompress_struct	jpeg/jpeglib.h	/^struct jpeg_decompress_struct {$/;"	s
jpeg_default_colorspace	jpeg/jcparam.c	/^jpeg_default_colorspace (j_compress_ptr cinfo)$/;"	f
jpeg_default_colorspace	jpeg/jpeglib.h	841;"	d
jpeg_destination_mgr	jpeg/jpeglib.h	/^struct jpeg_destination_mgr {$/;"	s
jpeg_destroy	jpeg/jcomapi.c	/^jpeg_destroy (j_common_ptr cinfo)$/;"	f
jpeg_destroy	jpeg/jpeglib.h	878;"	d
jpeg_destroy_compress	jpeg/jcapimin.c	/^jpeg_destroy_compress (j_compress_ptr cinfo)$/;"	f
jpeg_destroy_compress	jpeg/jpeglib.h	835;"	d
jpeg_destroy_decompress	jpeg/jdapimin.c	/^jpeg_destroy_decompress (j_decompress_ptr cinfo)$/;"	f
jpeg_destroy_decompress	jpeg/jpeglib.h	836;"	d
jpeg_downsampler	jpeg/jpegint.h	/^struct jpeg_downsampler {$/;"	s
jpeg_downsampler	jpeg/jpeglib.h	/^struct jpeg_downsampler { long dummy; };$/;"	s
jpeg_entropy_decoder	jpeg/jpegint.h	/^struct jpeg_entropy_decoder {$/;"	s
jpeg_entropy_decoder	jpeg/jpeglib.h	/^struct jpeg_entropy_decoder { long dummy; };$/;"	s
jpeg_entropy_encoder	jpeg/jpegint.h	/^struct jpeg_entropy_encoder {$/;"	s
jpeg_entropy_encoder	jpeg/jpeglib.h	/^struct jpeg_entropy_encoder { long dummy; };$/;"	s
jpeg_error_mgr	jpeg/jpeglib.h	/^struct jpeg_error_mgr {$/;"	s
jpeg_fdct_float	jpeg/jdct.h	86;"	d
jpeg_fdct_float	jpeg/jfdctflt.c	/^jpeg_fdct_float (FAST_FLOAT * data)$/;"	f
jpeg_fdct_ifast	jpeg/jdct.h	85;"	d
jpeg_fdct_ifast	jpeg/jfdctfst.c	/^jpeg_fdct_ifast (DCTELEM * data)$/;"	f
jpeg_fdct_islow	jpeg/jdct.h	84;"	d
jpeg_fdct_islow	jpeg/jfdctint.c	/^jpeg_fdct_islow (DCTELEM * data)$/;"	f
jpeg_fill_bit_buffer	jpeg/jdhuff.h	17;"	d
jpeg_finish_compress	jpeg/jcapimin.c	/^jpeg_finish_compress (j_compress_ptr cinfo)$/;"	f
jpeg_finish_compress	jpeg/jpeglib.h	852;"	d
jpeg_finish_decompress	jpeg/jpeglib.h	861;"	d
jpeg_finish_output	jpeg/jpeglib.h	865;"	d
jpeg_forward_dct	jpeg/jpegint.h	/^struct jpeg_forward_dct {$/;"	s
jpeg_forward_dct	jpeg/jpeglib.h	/^struct jpeg_forward_dct { long dummy; };$/;"	s
jpeg_free_large	jpeg/jmemansi.c	/^jpeg_free_large (j_common_ptr cinfo, void FAR * object, size_t sizeofobject)$/;"	f
jpeg_free_large	jpeg/jmemdos.c	/^jpeg_free_large (j_common_ptr cinfo, void FAR * object, size_t sizeofobject)$/;"	f
jpeg_free_large	jpeg/jmemmac.c	/^jpeg_free_large (j_common_ptr cinfo, void FAR * object, size_t sizeofobject)$/;"	f
jpeg_free_large	jpeg/jmemname.c	/^jpeg_free_large (j_common_ptr cinfo, void FAR * object, size_t sizeofobject)$/;"	f
jpeg_free_large	jpeg/jmemnobs.c	/^jpeg_free_large (j_common_ptr cinfo, void FAR * object, size_t sizeofobject)$/;"	f
jpeg_free_large	jpeg/jmemsys.h	28;"	d
jpeg_free_small	jpeg/jmemansi.c	/^jpeg_free_small (j_common_ptr cinfo, void * object, size_t sizeofobject)$/;"	f
jpeg_free_small	jpeg/jmemdos.c	/^jpeg_free_small (j_common_ptr cinfo, void * object, size_t sizeofobject)$/;"	f
jpeg_free_small	jpeg/jmemmac.c	/^jpeg_free_small (j_common_ptr cinfo, void * object, size_t sizeofobject)$/;"	f
jpeg_free_small	jpeg/jmemname.c	/^jpeg_free_small (j_common_ptr cinfo, void * object, size_t sizeofobject)$/;"	f
jpeg_free_small	jpeg/jmemnobs.c	/^jpeg_free_small (j_common_ptr cinfo, void * object, size_t sizeofobject)$/;"	f
jpeg_free_small	jpeg/jmemsys.h	26;"	d
jpeg_gen_optimal_table	jpeg/jchuff.c	/^jpeg_gen_optimal_table (j_compress_ptr cinfo, JHUFF_TBL * htbl, long freq[])$/;"	f
jpeg_gen_optimal_table	jpeg/jchuff.h	37;"	d
jpeg_get_large	jpeg/jmemansi.c	/^jpeg_get_large (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_large	jpeg/jmemdos.c	/^jpeg_get_large (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_large	jpeg/jmemmac.c	/^jpeg_get_large (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_large	jpeg/jmemname.c	/^jpeg_get_large (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_large	jpeg/jmemnobs.c	/^jpeg_get_large (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_large	jpeg/jmemsys.h	27;"	d
jpeg_get_small	jpeg/jmemansi.c	/^jpeg_get_small (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_small	jpeg/jmemdos.c	/^jpeg_get_small (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_small	jpeg/jmemmac.c	/^jpeg_get_small (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_small	jpeg/jmemname.c	/^jpeg_get_small (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_small	jpeg/jmemnobs.c	/^jpeg_get_small (j_common_ptr cinfo, size_t sizeofobject)$/;"	f
jpeg_get_small	jpeg/jmemsys.h	25;"	d
jpeg_getc	jpeg/djpeg.c	/^jpeg_getc (j_decompress_ptr cinfo)$/;"	f
jpeg_has_multiple_scans	jpeg/jpeglib.h	863;"	d
jpeg_huff_decode	jpeg/jdhuff.c	/^jpeg_huff_decode (bitread_working_state * state,$/;"	f
jpeg_huff_decode	jpeg/jdhuff.h	18;"	d
jpeg_idct_1x1	jpeg/jdct.h	92;"	d
jpeg_idct_1x1	jpeg/jidctred.c	/^jpeg_idct_1x1 (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
jpeg_idct_2x2	jpeg/jdct.h	91;"	d
jpeg_idct_2x2	jpeg/jidctred.c	/^jpeg_idct_2x2 (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
jpeg_idct_4x4	jpeg/jdct.h	90;"	d
jpeg_idct_4x4	jpeg/jidctred.c	/^jpeg_idct_4x4 (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
jpeg_idct_float	jpeg/jdct.h	89;"	d
jpeg_idct_float	jpeg/jidctflt.c	/^jpeg_idct_float (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
jpeg_idct_ifast	jpeg/jdct.h	88;"	d
jpeg_idct_ifast	jpeg/jidctfst.c	/^jpeg_idct_ifast (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
jpeg_idct_islow	jpeg/jdct.h	87;"	d
jpeg_idct_islow	jpeg/jidctint.c	/^jpeg_idct_islow (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
jpeg_input_complete	jpeg/jpeglib.h	866;"	d
jpeg_input_controller	jpeg/jpegint.h	/^struct jpeg_input_controller {$/;"	s
jpeg_input_controller	jpeg/jpeglib.h	/^struct jpeg_input_controller { long dummy; };$/;"	s
jpeg_inverse_dct	jpeg/jpegint.h	/^struct jpeg_inverse_dct {$/;"	s
jpeg_inverse_dct	jpeg/jpeglib.h	/^struct jpeg_inverse_dct { long dummy; };$/;"	s
jpeg_make_c_derived_tbl	jpeg/jchuff.c	/^jpeg_make_c_derived_tbl (j_compress_ptr cinfo, jboolean isDC, int tblno,$/;"	f
jpeg_make_c_derived_tbl	jpeg/jchuff.h	36;"	d
jpeg_make_d_derived_tbl	jpeg/jdhuff.c	/^jpeg_make_d_derived_tbl (j_decompress_ptr cinfo, jboolean isDC, int tblno,$/;"	f
jpeg_make_d_derived_tbl	jpeg/jdhuff.h	16;"	d
jpeg_marker_reader	jpeg/jpegint.h	/^struct jpeg_marker_reader {$/;"	s
jpeg_marker_reader	jpeg/jpeglib.h	/^struct jpeg_marker_reader { long dummy; };$/;"	s
jpeg_marker_struct	jpeg/jpeglib.h	/^struct jpeg_marker_struct {$/;"	s
jpeg_marker_writer	jpeg/jpegint.h	/^struct jpeg_marker_writer {$/;"	s
jpeg_marker_writer	jpeg/jpeglib.h	/^struct jpeg_marker_writer { long dummy; };$/;"	s
jpeg_mem_available	jpeg/jmemansi.c	/^jpeg_mem_available (j_common_ptr cinfo, long min_bytes_needed,$/;"	f
jpeg_mem_available	jpeg/jmemdos.c	/^jpeg_mem_available (j_common_ptr cinfo, long min_bytes_needed,$/;"	f
jpeg_mem_available	jpeg/jmemmac.c	/^jpeg_mem_available (j_common_ptr cinfo, long min_bytes_needed,$/;"	f
jpeg_mem_available	jpeg/jmemname.c	/^jpeg_mem_available (j_common_ptr cinfo, long min_bytes_needed,$/;"	f
jpeg_mem_available	jpeg/jmemnobs.c	/^jpeg_mem_available (j_common_ptr cinfo, long min_bytes_needed,$/;"	f
jpeg_mem_available	jpeg/jmemsys.h	29;"	d
jpeg_mem_init	jpeg/jmemansi.c	/^jpeg_mem_init (j_common_ptr cinfo)$/;"	f
jpeg_mem_init	jpeg/jmemdos.c	/^jpeg_mem_init (j_common_ptr cinfo)$/;"	f
jpeg_mem_init	jpeg/jmemmac.c	/^jpeg_mem_init (j_common_ptr cinfo)$/;"	f
jpeg_mem_init	jpeg/jmemname.c	/^jpeg_mem_init (j_common_ptr cinfo)$/;"	f
jpeg_mem_init	jpeg/jmemnobs.c	/^jpeg_mem_init (j_common_ptr cinfo)$/;"	f
jpeg_mem_init	jpeg/jmemsys.h	31;"	d
jpeg_mem_term	jpeg/jmemansi.c	/^jpeg_mem_term (j_common_ptr cinfo)$/;"	f
jpeg_mem_term	jpeg/jmemdos.c	/^jpeg_mem_term (j_common_ptr cinfo)$/;"	f
jpeg_mem_term	jpeg/jmemmac.c	/^jpeg_mem_term (j_common_ptr cinfo)$/;"	f
jpeg_mem_term	jpeg/jmemname.c	/^jpeg_mem_term (j_common_ptr cinfo)$/;"	f
jpeg_mem_term	jpeg/jmemnobs.c	/^jpeg_mem_term (j_common_ptr cinfo)$/;"	f
jpeg_mem_term	jpeg/jmemsys.h	32;"	d
jpeg_memory_mgr	jpeg/jpeglib.h	/^struct jpeg_memory_mgr {$/;"	s
jpeg_message_table	jpeg/jpeglib.h	/^  const char * const * jpeg_message_table; \/* Library errors *\/$/;"	m	struct:jpeg_error_mgr
jpeg_natural_order	jpeg/jpegint.h	329;"	d
jpeg_natural_order	jpeg/jutils.c	/^const int jpeg_natural_order[DCTSIZE2+16] = {$/;"	v
jpeg_new_colormap	jpeg/jdmaster.c	/^jpeg_new_colormap (j_decompress_ptr cinfo)$/;"	f
jpeg_new_colormap	jpeg/jpeglib.h	867;"	d
jpeg_open_backing_store	jpeg/jmemansi.c	/^jpeg_open_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
jpeg_open_backing_store	jpeg/jmemdos.c	/^jpeg_open_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
jpeg_open_backing_store	jpeg/jmemmac.c	/^jpeg_open_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
jpeg_open_backing_store	jpeg/jmemname.c	/^jpeg_open_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
jpeg_open_backing_store	jpeg/jmemnobs.c	/^jpeg_open_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
jpeg_open_backing_store	jpeg/jmemsys.h	30;"	d
jpeg_progress_mgr	jpeg/jpeglib.h	/^struct jpeg_progress_mgr {$/;"	s
jpeg_quality_scaling	jpeg/jcparam.c	/^jpeg_quality_scaling (int quality)$/;"	f
jpeg_quality_scaling	jpeg/jpeglib.h	845;"	d
jpeg_read_coefficients	jpeg/jdtrans.c	/^jpeg_read_coefficients (j_decompress_ptr cinfo)$/;"	f
jpeg_read_coefficients	jpeg/jpeglib.h	872;"	d
jpeg_read_header	jpeg/jdapimin.c	/^jpeg_read_header (j_decompress_ptr cinfo, jboolean require_image)$/;"	f
jpeg_read_header	jpeg/jpeglib.h	858;"	d
jpeg_read_raw_data	jpeg/jpeglib.h	862;"	d
jpeg_read_scanlines	jpeg/jpeglib.h	860;"	d
jpeg_resync_to_restart	jpeg/jpeglib.h	879;"	d
jpeg_save_markers	jpeg/jdmarker.c	/^jpeg_save_markers (j_decompress_ptr cinfo, int marker_code,$/;"	f
jpeg_save_markers	jpeg/jpeglib.h	870;"	d
jpeg_saved_marker_ptr	jpeg/jpeglib.h	/^typedef struct jpeg_marker_struct FAR * jpeg_saved_marker_ptr;$/;"	t	typeref:struct:FAR
jpeg_scan_info	jpeg/jpeglib.h	/^} jpeg_scan_info;$/;"	t	typeref:struct:__anon54
jpeg_set_colorspace	jpeg/jcparam.c	/^jpeg_set_colorspace (j_compress_ptr cinfo, J_COLOR_SPACE colorspace)$/;"	f
jpeg_set_colorspace	jpeg/jpeglib.h	840;"	d
jpeg_set_defaults	jpeg/jcparam.c	/^jpeg_set_defaults (j_compress_ptr cinfo)$/;"	f
jpeg_set_defaults	jpeg/jpeglib.h	839;"	d
jpeg_set_linear_quality	jpeg/jcparam.c	/^jpeg_set_linear_quality (j_compress_ptr cinfo, int scale_factor,$/;"	f
jpeg_set_linear_quality	jpeg/jpeglib.h	843;"	d
jpeg_set_marker_processor	jpeg/jdmarker.c	/^jpeg_set_marker_processor (j_decompress_ptr cinfo, int marker_code,$/;"	f
jpeg_set_marker_processor	jpeg/jpeglib.h	871;"	d
jpeg_set_quality	jpeg/jcparam.c	/^jpeg_set_quality (j_compress_ptr cinfo, int quality, jboolean force_baseline)$/;"	f
jpeg_set_quality	jpeg/jpeglib.h	842;"	d
jpeg_simple_progression	jpeg/jcparam.c	/^jpeg_simple_progression (j_compress_ptr cinfo)$/;"	f
jpeg_simple_progression	jpeg/jpeglib.h	846;"	d
jpeg_source_mgr	jpeg/jpeglib.h	/^struct jpeg_source_mgr {$/;"	s
jpeg_start_compress	jpeg/jcapistd.c	/^jpeg_start_compress (j_compress_ptr cinfo, jboolean write_all_tables)$/;"	f
jpeg_start_compress	jpeg/jpeglib.h	850;"	d
jpeg_start_decompress	jpeg/jpeglib.h	859;"	d
jpeg_start_output	jpeg/jpeglib.h	864;"	d
jpeg_std_error	jpeg/jerror.c	/^jpeg_std_error (struct jpeg_error_mgr * err)$/;"	f
jpeg_std_error	jpeg/jpeglib.h	832;"	d
jpeg_std_message_table	jpeg/jerror.c	/^const char * const jpeg_std_message_table[] = {$/;"	v
jpeg_std_message_table	jpeg/jerror.c	45;"	d	file:
jpeg_stdio_dest	jpeg/jdatadst.c	/^jpeg_stdio_dest (j_compress_ptr cinfo, FILE * outfile)$/;"	f
jpeg_stdio_dest	jpeg/jpeglib.h	837;"	d
jpeg_stdio_src	jpeg/jdatasrc.c	/^jpeg_stdio_src (j_decompress_ptr cinfo, FILE * infile)$/;"	f
jpeg_stdio_src	jpeg/jpeglib.h	838;"	d
jpeg_suppress_tables	jpeg/jcapimin.c	/^jpeg_suppress_tables (j_compress_ptr cinfo, jboolean suppress)$/;"	f
jpeg_suppress_tables	jpeg/jpeglib.h	847;"	d
jpeg_transform_info	jpeg/transupp.h	/^} jpeg_transform_info;$/;"	t	typeref:struct:__anon44
jpeg_upsampler	jpeg/jpegint.h	/^struct jpeg_upsampler {$/;"	s
jpeg_upsampler	jpeg/jpeglib.h	/^struct jpeg_upsampler { long dummy; };$/;"	s
jpeg_write_coefficients	jpeg/jctrans.c	/^jpeg_write_coefficients (j_compress_ptr cinfo, jvirt_barray_ptr * coef_arrays)$/;"	f
jpeg_write_coefficients	jpeg/jpeglib.h	873;"	d
jpeg_write_m_byte	jpeg/jcapimin.c	/^jpeg_write_m_byte (j_compress_ptr cinfo, int val)$/;"	f
jpeg_write_m_byte	jpeg/jpeglib.h	856;"	d
jpeg_write_m_header	jpeg/jcapimin.c	/^jpeg_write_m_header (j_compress_ptr cinfo, int marker, unsigned int datalen)$/;"	f
jpeg_write_m_header	jpeg/jpeglib.h	855;"	d
jpeg_write_marker	jpeg/jcapimin.c	/^jpeg_write_marker (j_compress_ptr cinfo, int marker,$/;"	f
jpeg_write_marker	jpeg/jpeglib.h	854;"	d
jpeg_write_raw_data	jpeg/jpeglib.h	853;"	d
jpeg_write_scanlines	jpeg/jpeglib.h	851;"	d
jpeg_write_tables	jpeg/jcapimin.c	/^jpeg_write_tables (j_compress_ptr cinfo)$/;"	f
jpeg_write_tables	jpeg/jpeglib.h	857;"	d
jpeg_zigzag_order	jpeg/jpegint.h	328;"	d
jround_up	jpeg/jpegint.h	324;"	d
jround_up	jpeg/jutils.c	/^jround_up (long a, long b)$/;"	f
jtransform_adjust_parameters	jpeg/transupp.c	/^jtransform_adjust_parameters (j_decompress_ptr srcinfo,$/;"	f
jtransform_adjust_parameters	jpeg/transupp.h	29;"	d
jtransform_execute_transformation	jpeg/transupp.c	/^jtransform_execute_transformation (j_decompress_ptr srcinfo,$/;"	f
jtransform_execute_transformation	jpeg/transupp.h	30;"	d
jtransform_request_workspace	jpeg/transupp.c	/^jtransform_request_workspace (j_decompress_ptr srcinfo,$/;"	f
jtransform_request_workspace	jpeg/transupp.h	28;"	d
jvirt_barray_control	jpeg/jmemmgr.c	/^struct jvirt_barray_control {$/;"	s	file:
jvirt_barray_control	jpeg/jpegint.h	/^struct jvirt_barray_control { long dummy; };$/;"	s
jvirt_barray_control	jpeg/jpeglib.h	/^struct jvirt_barray_control { long dummy; };$/;"	s
jvirt_barray_ptr	jpeg/jpeglib.h	/^typedef struct jvirt_barray_control * jvirt_barray_ptr;$/;"	t	typeref:struct:jvirt_barray_control
jvirt_sarray_control	jpeg/jmemmgr.c	/^struct jvirt_sarray_control {$/;"	s	file:
jvirt_sarray_control	jpeg/jpegint.h	/^struct jvirt_sarray_control { long dummy; };$/;"	s
jvirt_sarray_control	jpeg/jpeglib.h	/^struct jvirt_sarray_control { long dummy; };$/;"	s
jvirt_sarray_ptr	jpeg/jpeglib.h	/^typedef struct jvirt_sarray_control * jvirt_sarray_ptr;$/;"	t	typeref:struct:jvirt_sarray_control
jzero_far	jpeg/jpegint.h	327;"	d
jzero_far	jpeg/jutils.c	/^jzero_far (void FAR * target, size_t bytestozero)$/;"	f
ka	R3Scene.h	/^  R3Rgb ka;$/;"	m	struct:R3Material
kd	R3Scene.h	/^  R3Rgb kd;$/;"	m	struct:R3Material
keymatch	jpeg/rdjpgcom.c	/^keymatch (char * arg, const char * keyword, int minchars)$/;"	f	file:
keymatch	jpeg/wrjpgcom.c	/^keymatch (char * arg, const char * keyword, int minchars)$/;"	f	file:
ks	R3Scene.h	/^  R3Rgb ks;$/;"	m	struct:R3Material
kt	R3Scene.h	/^  R3Rgb kt;$/;"	m	struct:R3Material
large_list	jpeg/jmemmgr.c	/^  large_pool_ptr large_list[JPOOL_NUMPOOLS];$/;"	m	struct:__anon30	file:
large_pool_hdr	jpeg/jmemmgr.c	/^} large_pool_hdr;$/;"	t	typeref:union:large_pool_struct	file:
large_pool_ptr	jpeg/jmemmgr.c	/^typedef union large_pool_struct FAR * large_pool_ptr;$/;"	t	typeref:union:FAR	file:
large_pool_struct	jpeg/jmemmgr.c	/^typedef union large_pool_struct {$/;"	u	file:
largest_input_value	jpeg/jquant1.c	/^largest_input_value (j_decompress_ptr cinfo, int ci, int j, int maxj)$/;"	f
last_addon_message	jpeg/jpeglib.h	/^  int last_addon_message;	\/* code for last string in addon table *\/$/;"	m	struct:jpeg_error_mgr
last_col_width	jpeg/jpeglib.h	/^  int last_col_width;		\/* # of non-dummy blocks across in last MCU *\/$/;"	m	struct:__anon53
last_dc_val	jpeg/jchuff.c	/^  int last_dc_val[MAX_COMPS_IN_SCAN]; \/* last DC coef for each component *\/$/;"	m	struct:__anon13	file:
last_dc_val	jpeg/jcphuff.c	/^  int last_dc_val[MAX_COMPS_IN_SCAN]; \/* last DC coef for each component *\/$/;"	m	struct:__anon60	file:
last_dc_val	jpeg/jdhuff.c	/^  int last_dc_val[MAX_COMPS_IN_SCAN]; \/* last DC coef for each component *\/$/;"	m	struct:__anon66	file:
last_dc_val	jpeg/jdphuff.c	/^  int last_dc_val[MAX_COMPS_IN_SCAN];	\/* last DC coef for each component *\/$/;"	m	struct:__anon2	file:
last_jpeg_message	jpeg/jpeglib.h	/^  int last_jpeg_message;    \/* Table contains strings 0..last_jpeg_message *\/$/;"	m	struct:jpeg_error_mgr
last_restart_interval	jpeg/jcmarker.c	/^  unsigned int last_restart_interval; \/* last DRI value emitted; 0 after SOI *\/$/;"	m	struct:__anon6	file:
last_row_height	jpeg/jpeglib.h	/^  int last_row_height;		\/* # of non-dummy blocks down in last MCU *\/$/;"	m	struct:__anon53
last_rowsperchunk	jpeg/jmemmgr.c	/^  JDIMENSION last_rowsperchunk;	\/* from most recent alloc_sarray\/barray *\/$/;"	m	struct:__anon30	file:
latch_quant_tables	jpeg/jdinput.c	/^latch_quant_tables (j_decompress_ptr cinfo)$/;"	f
length	R2/R2Segment.h	/^  double length;$/;"	m	class:R2Segment
length	R3/R3Segment.h	/^  double length;$/;"	m	class:R3Segment
length	jpeg/jmemdos.c	/^	long length;		\/* It's easy to access first 4 bytes *\/$/;"	m	union:__anon23	file:
length	jpeg/jmemdos.c	/^	long length;$/;"	m	struct:__anon22	file:
length_limit_APPn	jpeg/jdmarker.c	/^  unsigned int length_limit_APPn[16];$/;"	m	struct:__anon42	file:
length_limit_COM	jpeg/jdmarker.c	/^  unsigned int length_limit_COM;$/;"	m	struct:__anon42	file:
libdir	jpeg/Makefile	/^libdir = $(exec_prefix)\/lib$/;"	m
lights	R3Scene.h	/^  vector<R3Light *> lights;$/;"	m	struct:R3Scene
line	R2/R2Segment.h	/^  R2Line line;$/;"	m	class:R2Segment
line	R3/R3Ray.h	/^  R3Line line;$/;"	m	class:R3Ray
linear_attenuation	R3Scene.h	/^  double linear_attenuation;$/;"	m	struct:R3Light
look_nbits	jpeg/jdhuff.h	/^  int look_nbits[1<<HUFF_LOOKAHEAD]; \/* # bits, or 0 if too long *\/$/;"	m	struct:__anon31
look_sym	jpeg/jdhuff.h	/^  UINT8 look_sym[1<<HUFF_LOOKAHEAD]; \/* symbol, or unused *\/$/;"	m	struct:__anon31
m	R3/R3Matrix.h	/^  double m[4][4];$/;"	m	class:R3Matrix
main	jpeg/ansi2knr.c	/^main(argc, argv)$/;"	f
main	jpeg/cjpeg.c	/^main (int argc, char **argv)$/;"	f
main	jpeg/ckconfig.c	/^int main (int argc, char ** argv)$/;"	f
main	jpeg/djpeg.c	/^main (int argc, char **argv)$/;"	f
main	jpeg/jpeglib.h	/^  struct jpeg_c_main_controller * main;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_c_main_controller
main	jpeg/jpeglib.h	/^  struct jpeg_d_main_controller * main;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_d_main_controller
main	jpeg/jpegtran.c	/^main (int argc, char **argv)$/;"	f
main	jpeg/rdjpgcom.c	/^main (int argc, char **argv)$/;"	f
main	jpeg/wrjpgcom.c	/^main (int argc, char **argv)$/;"	f
main	minecraft.cpp	/^int main(int argc, char **argv)$/;"	f
main	raypro.cpp	/^main(int argc, char **argv)$/;"	f
main_pass	jpeg/jcmaster.c	/^	main_pass,		\/* input data, also do first output step *\/$/;"	e	enum:__anon63	file:
make_funny_pointers	jpeg/jdmainct.c	/^make_funny_pointers (j_decompress_ptr cinfo)$/;"	f
mandir	jpeg/Makefile	/^mandir = $(prefix)\/man\/man$(manext)$/;"	m
manext	jpeg/Makefile	/^manext = 1$/;"	m
manprefix	jpeg/Makefile	/^manprefix =$/;"	m
marker	jpeg/jpeglib.h	/^  UINT8 marker;			\/* marker code: JPEG_COM, or JPEG_APP0+n *\/$/;"	m	struct:jpeg_marker_struct
marker	jpeg/jpeglib.h	/^  struct jpeg_marker_reader * marker;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_marker_reader
marker	jpeg/jpeglib.h	/^  struct jpeg_marker_writer * marker;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_marker_writer
marker_list	jpeg/jpeglib.h	/^  jpeg_saved_marker_ptr marker_list; \/* Head of list of saved markers *\/$/;"	m	struct:jpeg_decompress_struct
master	jpeg/jpeglib.h	/^  struct jpeg_comp_master * master;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_comp_master
master	jpeg/jpeglib.h	/^  struct jpeg_decomp_master * master;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_decomp_master
master_selection	jpeg/jdmaster.c	/^master_selection (j_decompress_ptr cinfo)$/;"	f
material	R3Scene.h	/^  R3Material *material;$/;"	m	struct:R3Node
max_alloc_chunk	jpeg/jpeglib.h	/^  long max_alloc_chunk;$/;"	m	struct:jpeg_memory_mgr
max_h_samp_factor	jpeg/jpeglib.h	/^  int max_h_samp_factor;	\/* largest h_samp_factor *\/$/;"	m	struct:jpeg_compress_struct
max_h_samp_factor	jpeg/jpeglib.h	/^  int max_h_samp_factor;	\/* largest h_samp_factor *\/$/;"	m	struct:jpeg_decompress_struct
max_memory_to_use	jpeg/jpeglib.h	/^  long max_memory_to_use;$/;"	m	struct:jpeg_memory_mgr
max_v_samp_factor	jpeg/jpeglib.h	/^  int max_v_samp_factor;	\/* largest v_samp_factor *\/$/;"	m	struct:jpeg_compress_struct
max_v_samp_factor	jpeg/jpeglib.h	/^  int max_v_samp_factor;	\/* largest v_samp_factor *\/$/;"	m	struct:jpeg_decompress_struct
maxaccess	jpeg/jmemmgr.c	/^  JDIMENSION maxaccess;		\/* max rows accessed by access_virt_barray *\/$/;"	m	struct:jvirt_barray_control	file:
maxaccess	jpeg/jmemmgr.c	/^  JDIMENSION maxaccess;		\/* max rows accessed by access_virt_sarray *\/$/;"	m	struct:jvirt_sarray_control	file:
maxcode	jpeg/jdhuff.h	/^  INT32 maxcode[18];		\/* largest code of length k (-1 if none) *\/$/;"	m	struct:__anon31
maxcode	jpeg/wrgif.c	/^  int maxcode;			\/* maximum code, given n_bits *\/$/;"	m	struct:__anon50	file:
maxpt	R3/R3Box.h	/^  R3Point maxpt;$/;"	m	class:R3Box
mcu_ctr	jpeg/jccoefct.c	/^  JDIMENSION mcu_ctr;		\/* counts MCUs processed in current row *\/$/;"	m	struct:__anon62	file:
mcu_ctr	jpeg/jctrans.c	/^  JDIMENSION mcu_ctr;		\/* counts MCUs processed in current row *\/$/;"	m	struct:__anon39	file:
median_cut	jpeg/jquant2.c	/^median_cut (j_decompress_ptr cinfo, boxptr boxlist, int numboxes,$/;"	f
mem_buffer	jpeg/jmemmgr.c	/^  JBLOCKARRAY mem_buffer;	\/* => the in-memory buffer *\/$/;"	m	struct:jvirt_barray_control	file:
mem_buffer	jpeg/jmemmgr.c	/^  JSAMPARRAY mem_buffer;	\/* => the in-memory buffer *\/$/;"	m	struct:jvirt_sarray_control	file:
merged_1v_upsample	jpeg/jdmerge.c	/^merged_1v_upsample (j_decompress_ptr cinfo,$/;"	f
merged_2v_upsample	jpeg/jdmerge.c	/^merged_2v_upsample (j_decompress_ptr cinfo,$/;"	f
mesh	R3Scene.h	/^  R3Mesh *mesh;$/;"	m	struct:R3Shape
methods	jpeg/jcsample.c	/^  downsample1_ptr methods[MAX_COMPONENTS];$/;"	m	struct:__anon35	file:
methods	jpeg/jdsample.c	/^  upsample1_ptr methods[MAX_COMPONENTS];$/;"	m	struct:__anon11	file:
methods_struct	jpeg/ckconfig.c	/^struct methods_struct {		\/* check method-pointer declarations *\/$/;"	s	file:
min_DCT_scaled_size	jpeg/jpeglib.h	/^  int min_DCT_scaled_size;	\/* smallest DCT_scaled_size of any component *\/$/;"	m	struct:jpeg_decompress_struct
minpt	R3/R3Box.h	/^  R3Point minpt;$/;"	m	class:R3Box
msg_code	jpeg/jpeglib.h	/^  int msg_code;$/;"	m	struct:jpeg_error_mgr
msg_parm	jpeg/jpeglib.h	/^  } msg_parm;$/;"	m	struct:jpeg_error_mgr	typeref:union:jpeg_error_mgr::__anon58
multiplier_table	jpeg/jddctmgr.c	/^} multiplier_table;$/;"	t	typeref:union:__anon71	file:
my_cconvert_ptr	jpeg/jccolor.c	/^typedef my_color_converter * my_cconvert_ptr;$/;"	t	file:
my_cconvert_ptr	jpeg/jdcolor.c	/^typedef my_color_deconverter * my_cconvert_ptr;$/;"	t	file:
my_coef_controller	jpeg/jccoefct.c	/^} my_coef_controller;$/;"	t	typeref:struct:__anon62	file:
my_coef_controller	jpeg/jctrans.c	/^} my_coef_controller;$/;"	t	typeref:struct:__anon39	file:
my_coef_controller	jpeg/jdcoefct.c	/^} my_coef_controller;$/;"	t	typeref:struct:__anon16	file:
my_coef_ptr	jpeg/jccoefct.c	/^typedef my_coef_controller * my_coef_ptr;$/;"	t	file:
my_coef_ptr	jpeg/jctrans.c	/^typedef my_coef_controller * my_coef_ptr;$/;"	t	file:
my_coef_ptr	jpeg/jdcoefct.c	/^typedef my_coef_controller * my_coef_ptr;$/;"	t	file:
my_color_converter	jpeg/jccolor.c	/^} my_color_converter;$/;"	t	typeref:struct:__anon9	file:
my_color_deconverter	jpeg/jdcolor.c	/^} my_color_deconverter;$/;"	t	typeref:struct:__anon38	file:
my_comp_master	jpeg/jcmaster.c	/^} my_comp_master;$/;"	t	typeref:struct:__anon64	file:
my_cquantize_ptr	jpeg/jquant1.c	/^typedef my_cquantizer * my_cquantize_ptr;$/;"	t	file:
my_cquantize_ptr	jpeg/jquant2.c	/^typedef my_cquantizer * my_cquantize_ptr;$/;"	t	file:
my_cquantizer	jpeg/jquant1.c	/^} my_cquantizer;$/;"	t	typeref:struct:__anon24	file:
my_cquantizer	jpeg/jquant2.c	/^} my_cquantizer;$/;"	t	typeref:struct:__anon26	file:
my_decomp_master	jpeg/jdmaster.c	/^} my_decomp_master;$/;"	t	typeref:struct:__anon61	file:
my_dest_ptr	jpeg/jdatadst.c	/^typedef my_destination_mgr * my_dest_ptr;$/;"	t	file:
my_destination_mgr	jpeg/jdatadst.c	/^} my_destination_mgr;$/;"	t	typeref:struct:__anon18	file:
my_downsample_ptr	jpeg/jcsample.c	/^typedef my_downsampler * my_downsample_ptr;$/;"	t	file:
my_downsampler	jpeg/jcsample.c	/^} my_downsampler;$/;"	t	typeref:struct:__anon35	file:
my_error_exit	jpeg/example.c	/^my_error_exit (j_common_ptr cinfo)$/;"	f
my_error_mgr	jpeg/example.c	/^struct my_error_mgr {$/;"	s	file:
my_error_ptr	jpeg/example.c	/^typedef struct my_error_mgr * my_error_ptr;$/;"	t	typeref:struct:my_error_mgr	file:
my_fdct_controller	jpeg/jcdctmgr.c	/^} my_fdct_controller;$/;"	t	typeref:struct:__anon1	file:
my_fdct_ptr	jpeg/jcdctmgr.c	/^typedef my_fdct_controller * my_fdct_ptr;$/;"	t	file:
my_idct_controller	jpeg/jddctmgr.c	/^} my_idct_controller;$/;"	t	typeref:struct:__anon70	file:
my_idct_ptr	jpeg/jddctmgr.c	/^typedef my_idct_controller * my_idct_ptr;$/;"	t	file:
my_input_controller	jpeg/jdinput.c	/^} my_input_controller;$/;"	t	typeref:struct:__anon12	file:
my_inputctl_ptr	jpeg/jdinput.c	/^typedef my_input_controller * my_inputctl_ptr;$/;"	t	file:
my_main_controller	jpeg/jcmainct.c	/^} my_main_controller;$/;"	t	typeref:struct:__anon4	file:
my_main_controller	jpeg/jdmainct.c	/^} my_main_controller;$/;"	t	typeref:struct:__anon17	file:
my_main_ptr	jpeg/jcmainct.c	/^typedef my_main_controller * my_main_ptr;$/;"	t	file:
my_main_ptr	jpeg/jdmainct.c	/^typedef my_main_controller * my_main_ptr;$/;"	t	file:
my_marker_ptr	jpeg/jcmarker.c	/^typedef my_marker_writer * my_marker_ptr;$/;"	t	file:
my_marker_ptr	jpeg/jdmarker.c	/^typedef my_marker_reader * my_marker_ptr;$/;"	t	file:
my_marker_reader	jpeg/jdmarker.c	/^} my_marker_reader;$/;"	t	typeref:struct:__anon42	file:
my_marker_writer	jpeg/jcmarker.c	/^} my_marker_writer;$/;"	t	typeref:struct:__anon6	file:
my_master_ptr	jpeg/jcmaster.c	/^typedef my_comp_master * my_master_ptr;$/;"	t	file:
my_master_ptr	jpeg/jdmaster.c	/^typedef my_decomp_master * my_master_ptr;$/;"	t	file:
my_mem_ptr	jpeg/jmemmgr.c	/^typedef my_memory_mgr * my_mem_ptr;$/;"	t	file:
my_memory_mgr	jpeg/jmemmgr.c	/^} my_memory_mgr;$/;"	t	typeref:struct:__anon30	file:
my_post_controller	jpeg/jdpostct.c	/^} my_post_controller;$/;"	t	typeref:struct:__anon36	file:
my_post_ptr	jpeg/jdpostct.c	/^typedef my_post_controller * my_post_ptr;$/;"	t	file:
my_prep_controller	jpeg/jcprepct.c	/^} my_prep_controller;$/;"	t	typeref:struct:__anon46	file:
my_prep_ptr	jpeg/jcprepct.c	/^typedef my_prep_controller * my_prep_ptr;$/;"	t	file:
my_size_t	jpeg/ckconfig.c	/^typedef size_t my_size_t;	\/* The payoff: do we have size_t now? *\/$/;"	t	file:
my_source_mgr	jpeg/jdatasrc.c	/^} my_source_mgr;$/;"	t	typeref:struct:__anon69	file:
my_src_ptr	jpeg/jdatasrc.c	/^typedef my_source_mgr * my_src_ptr;$/;"	t	file:
my_upsample_ptr	jpeg/jdmerge.c	/^typedef my_upsampler * my_upsample_ptr;$/;"	t	file:
my_upsample_ptr	jpeg/jdsample.c	/^typedef my_upsampler * my_upsample_ptr;$/;"	t	file:
my_upsampler	jpeg/jdmerge.c	/^} my_upsampler;$/;"	t	typeref:struct:__anon7	file:
my_upsampler	jpeg/jdsample.c	/^} my_upsampler;$/;"	t	typeref:struct:__anon11	file:
n_bits	jpeg/wrgif.c	/^  int n_bits;			\/* current number of bits\/code *\/$/;"	m	struct:__anon50	file:
neardist	R3Scene.h	/^  double neardist, fardist;$/;"	m	struct:R3Camera
need_context_rows	jpeg/jpegint.h	/^  jboolean need_context_rows;	\/* TRUE if need rows above & below *\/$/;"	m	struct:jpeg_downsampler
need_context_rows	jpeg/jpegint.h	/^  jboolean need_context_rows;	\/* TRUE if need rows above & below *\/$/;"	m	struct:jpeg_upsampler
needs_zeroed	jpeg/jquant2.c	/^  jboolean needs_zeroed;		\/* TRUE if next pass must zero histogram *\/$/;"	m	struct:__anon26	file:
new_color_map_1_quant	jpeg/jquant1.c	/^new_color_map_1_quant (j_decompress_ptr cinfo)$/;"	f
new_color_map_2_quant	jpeg/jquant2.c	/^new_color_map_2_quant (j_decompress_ptr cinfo)$/;"	f
next	jpeg/jmemmgr.c	/^    large_pool_ptr next;	\/* next in list of pools *\/$/;"	m	struct:large_pool_struct::__anon29	file:
next	jpeg/jmemmgr.c	/^    small_pool_ptr next;	\/* next in list of pools *\/$/;"	m	struct:small_pool_struct::__anon28	file:
next	jpeg/jmemmgr.c	/^  jvirt_barray_ptr next;	\/* link to next virtual barray control block *\/$/;"	m	struct:jvirt_barray_control	file:
next	jpeg/jmemmgr.c	/^  jvirt_sarray_ptr next;	\/* link to next virtual sarray control block *\/$/;"	m	struct:jvirt_sarray_control	file:
next	jpeg/jpeglib.h	/^  jpeg_saved_marker_ptr next;	\/* next in list, or NULL *\/$/;"	m	struct:jpeg_marker_struct
next_buf_row	jpeg/jcprepct.c	/^  int next_buf_row;		\/* index of next row to store in color_buf *\/$/;"	m	struct:__anon46	file:
next_buf_stop	jpeg/jcprepct.c	/^  int next_buf_stop;		\/* downsample when we reach this index *\/$/;"	m	struct:__anon46	file:
next_file_num	jpeg/jmemdos.c	/^static int next_file_num;	\/* to distinguish among several temp files *\/$/;"	v	file:
next_file_num	jpeg/jmemmac.c	/^static int next_file_num;	\/* to distinguish among several temp files *\/$/;"	v	file:
next_file_num	jpeg/jmemname.c	/^static int next_file_num;	\/* to distinguish among several temp files *\/$/;"	v	file:
next_input_byte	jpeg/jdhuff.h	/^  const JOCTET * next_input_byte; \/* => next byte to read from source *\/$/;"	m	struct:__anon33
next_input_byte	jpeg/jpeglib.h	/^  const JOCTET * next_input_byte; \/* => next byte to read from buffer *\/$/;"	m	struct:jpeg_source_mgr
next_marker	jpeg/rdjpgcom.c	/^next_marker (void)$/;"	f	file:
next_marker	jpeg/wrjpgcom.c	/^next_marker (void)$/;"	f	file:
next_output_byte	jpeg/jchuff.c	/^  JOCTET * next_output_byte;	\/* => next byte to write in buffer *\/$/;"	m	struct:__anon15	file:
next_output_byte	jpeg/jcphuff.c	/^  JOCTET * next_output_byte;	\/* => next byte to write in buffer *\/$/;"	m	struct:__anon60	file:
next_output_byte	jpeg/jpeglib.h	/^  JOCTET * next_output_byte;	\/* => next byte to write in buffer *\/$/;"	m	struct:jpeg_destination_mgr
next_restart_num	jpeg/jchuff.c	/^  int next_restart_num;		\/* next restart number to write (0-7) *\/$/;"	m	struct:__anon14	file:
next_restart_num	jpeg/jcphuff.c	/^  int next_restart_num;		\/* next restart number to write (0-7) *\/$/;"	m	struct:__anon60	file:
next_restart_num	jpeg/jpegint.h	/^  int next_restart_num;		\/* next restart number expected (0-7) *\/$/;"	m	struct:jpeg_marker_reader
next_row	jpeg/jdpostct.c	/^  JDIMENSION next_row;		\/* index of next row to fill\/empty in strip *\/$/;"	m	struct:__anon36	file:
next_row_out	jpeg/jdsample.c	/^  int next_row_out;		\/* counts rows emitted from color_buf *\/$/;"	m	struct:__anon11	file:
next_scanline	jpeg/jpeglib.h	/^  JDIMENSION next_scanline;	\/* 0 .. image_height-1  *\/$/;"	m	struct:jpeg_compress_struct
no_ems	jpeg/jmemdosa.asm	/^no_ems:		xor	ax,ax			; it's not there$/;"	l
node	raytrace.h	/^    R3Node *node;$/;"	m	struct:R3Intersection
noop_upsample	jpeg/jdsample.c	/^noop_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,$/;"	f
normal	R2/R2Line.h	/^  R2Vector normal;$/;"	m	class:R2Line
normal	R3/R3Mesh.h	/^  R3Vector normal;$/;"	m	struct:R3MeshVertex
normal	raytrace.h	/^    R3Vector normal;$/;"	m	struct:R3Intersection
npixels	R2/R2Image.h	/^  int npixels;$/;"	m	class:R2Image
null_convert	jpeg/jccolor.c	/^null_convert (j_compress_ptr cinfo,$/;"	f
null_convert	jpeg/jdcolor.c	/^null_convert (j_decompress_ptr cinfo,$/;"	f
null_method	jpeg/jccolor.c	/^null_method (j_compress_ptr cinfo)$/;"	f
num_components	jpeg/jpeglib.h	/^  int num_components;		\/* # of color components in JPEG image *\/$/;"	m	struct:jpeg_compress_struct
num_components	jpeg/jpeglib.h	/^  int num_components;		\/* # of color components in JPEG image *\/$/;"	m	struct:jpeg_decompress_struct
num_components	jpeg/transupp.h	/^  int num_components;		\/* # of components in workspace *\/$/;"	m	struct:__anon44
num_scans	jpeg/jpeglib.h	/^  int num_scans;		\/* # of entries in scan_info array *\/$/;"	m	struct:jpeg_compress_struct
num_warnings	jpeg/jpeglib.h	/^  long num_warnings;		\/* number of corrupt-data warnings *\/$/;"	m	struct:jpeg_error_mgr
odither	jpeg/jquant1.c	/^  ODITHER_MATRIX_PTR odither[MAX_Q_COMPS]; \/* one dither array per component *\/$/;"	m	struct:__anon24	file:
offset	jpeg/jmemdos.c	/^	long offset;$/;"	m	union:__anon21	file:
on_odd_row	jpeg/jquant1.c	/^  jboolean on_odd_row;		\/* flag to remember which row we are on *\/$/;"	m	struct:__anon24	file:
on_odd_row	jpeg/jquant2.c	/^  jboolean on_odd_row;		\/* flag to remember which row we are on *\/$/;"	m	struct:__anon26	file:
open_err	jpeg/jmemdosa.asm	/^open_err:	pop	ds			; restore registers and exit$/;"	l
operator !=	R2/R2Line.h	/^operator!=(const R2Line& line) const$/;"	f	class:R2Line
operator !=	R2/R2Pixel.h	/^operator!=(const R2Pixel& pixel) const$/;"	f	class:R2Pixel
operator !=	R2/R2Point.h	/^operator!=(const R2Point& point) const$/;"	f	class:R2Point
operator !=	R2/R2Segment.h	/^operator!=(const R2Segment& segment) const$/;"	f	class:R2Segment
operator !=	R2/R2Vector.h	/^operator!=(const R2Vector& vector) const$/;"	f	class:R2Vector
operator !=	R3/R3Box.h	/^operator!=(const R3Box& box) const$/;"	f	class:R3Box
operator !=	R3/R3Line.h	/^operator!=(const R3Line& line) const$/;"	f	class:R3Line
operator !=	R3/R3Matrix.h	/^operator!=(const R3Matrix& matrix) const$/;"	f	class:R3Matrix
operator !=	R3/R3Plane.h	/^operator!=(const R3Plane& plane) const$/;"	f	class:R3Plane
operator !=	R3/R3Point.h	/^operator!=(const R3Point& point) const$/;"	f	class:R3Point
operator !=	R3/R3Ray.h	/^operator!=(const R3Ray& ray) const$/;"	f	class:R3Ray
operator !=	R3/R3Segment.h	/^operator!=(const R3Segment& segment) const$/;"	f	class:R3Segment
operator !=	R3/R3Vector.h	/^operator!=(const R3Vector& vector) const$/;"	f	class:R3Vector
operator %	R2/R2Vector.cpp	/^operator%(const R2Vector& vector1, const R2Vector& vector2)$/;"	f
operator %	R3/R3Vector.cpp	/^operator%(const R3Vector& vector1, const R3Vector& vector2)$/;"	f
operator *	R2/R2Pixel.h	/^operator*(const R2Pixel& pixel, double scale)$/;"	f
operator *	R2/R2Pixel.h	/^operator*(const R2Pixel& pixel1, const R2Pixel& pixel2)$/;"	f
operator *	R2/R2Pixel.h	/^operator*(double scale, const R2Pixel& pixel)$/;"	f
operator *	R2/R2Point.cpp	/^operator*(const R2Point& point, double a)$/;"	f
operator *	R2/R2Point.cpp	/^operator*(double a, const R2Point& point)$/;"	f
operator *	R2/R2Vector.cpp	/^operator*(const R2Vector& vector, double a)$/;"	f
operator *	R2/R2Vector.cpp	/^operator*(const R2Vector& vector1, const R2Vector& vector2)$/;"	f
operator *	R2/R2Vector.h	/^operator*(double a, const R2Vector& vector) $/;"	f
operator *	R3/R3Matrix.cpp	/^operator*(const R3Matrix& a, const R3Matrix& b) $/;"	f
operator *	R3/R3Matrix.cpp	/^operator*(const R3Matrix& a, const R3Point& p)$/;"	f
operator *	R3/R3Matrix.cpp	/^operator*(const R3Matrix& a, const R3Vector& v)$/;"	f
operator *	R3/R3Matrix.cpp	/^operator*(const R3Matrix& a, double b)$/;"	f
operator *	R3/R3Point.cpp	/^operator*(const R3Point& point, const double a)$/;"	f
operator *	R3/R3Point.cpp	/^operator*(const double a, const R3Point& point)$/;"	f
operator *	R3/R3Vector.cpp	/^operator*(const R3Vector& vector, const double a)$/;"	f
operator *	R3/R3Vector.cpp	/^operator*(const R3Vector& vector1, const R3Vector& vector2)$/;"	f
operator *	R3/R3Vector.cpp	/^operator*(const double a, const R3Vector& vector)$/;"	f
operator *=	R2/R2Pixel.h	/^operator*=(const R2Pixel& pixel)$/;"	f	class:R2Pixel
operator *=	R2/R2Pixel.h	/^operator*=(double a)$/;"	f	class:R2Pixel
operator *=	R2/R2Point.cpp	/^operator*=(double a)$/;"	f	class:R2Point
operator *=	R2/R2Vector.cpp	/^operator*=(const R2Vector& vector)$/;"	f	class:R2Vector
operator *=	R2/R2Vector.cpp	/^operator*=(double a)$/;"	f	class:R2Vector
operator *=	R3/R3Matrix.cpp	/^operator*=(double a)$/;"	f	class:R3Matrix
operator *=	R3/R3Matrix.h	/^operator*=(const R3Matrix& a)$/;"	f	class:R3Matrix
operator *=	R3/R3Point.cpp	/^operator*=(const double a)$/;"	f	class:R3Point
operator *=	R3/R3Vector.cpp	/^operator*=(const R3Vector& vector)$/;"	f	class:R3Vector
operator *=	R3/R3Vector.cpp	/^operator*=(const double a)$/;"	f	class:R3Vector
operator +	R2/R2Pixel.h	/^operator+(const R2Pixel& pixel1, const R2Pixel& pixel2)$/;"	f
operator +	R2/R2Point.cpp	/^operator+(const R2Point& point) $/;"	f
operator +	R2/R2Point.cpp	/^operator+(const R2Point& point, const R2Vector& vector)$/;"	f
operator +	R2/R2Point.cpp	/^operator+(const R2Point& point1, const R2Point& point2)$/;"	f
operator +	R2/R2Point.cpp	/^operator+(const R2Vector& vector, const R2Point& point)$/;"	f
operator +	R2/R2Vector.cpp	/^operator+(const R2Vector& vector) $/;"	f
operator +	R2/R2Vector.cpp	/^operator+(const R2Vector& vector1, const R2Vector& vector2)$/;"	f
operator +	R3/R3Matrix.cpp	/^operator+(const R3Matrix& a, const R3Matrix& b) $/;"	f
operator +	R3/R3Point.cpp	/^operator+(const R3Point& point, const R3Vector& vector)$/;"	f
operator +	R3/R3Point.cpp	/^operator+(const R3Point& point1, const R3Point& point2)$/;"	f
operator +	R3/R3Point.cpp	/^operator+(const R3Vector& vector, const R3Point& point)$/;"	f
operator +	R3/R3Vector.cpp	/^operator+(const R3Vector& vector)$/;"	f
operator +	R3/R3Vector.cpp	/^operator+(const R3Vector& vector1, const R3Vector& vector2)$/;"	f
operator +=	R2/R2Pixel.h	/^operator+=(const R2Pixel& pixel)$/;"	f	class:R2Pixel
operator +=	R2/R2Point.cpp	/^operator+=(const R2Point& point)$/;"	f	class:R2Point
operator +=	R2/R2Point.cpp	/^operator+=(const R2Vector& vector)$/;"	f	class:R2Point
operator +=	R2/R2Vector.cpp	/^operator+=(const R2Vector& vector)$/;"	f	class:R2Vector
operator +=	R3/R3Matrix.h	/^operator+=(const R3Matrix& a)$/;"	f	class:R3Matrix
operator +=	R3/R3Point.cpp	/^operator+=(const R3Point& point)$/;"	f	class:R3Point
operator +=	R3/R3Point.cpp	/^operator+=(const R3Vector& vector)$/;"	f	class:R3Point
operator +=	R3/R3Vector.cpp	/^operator+=(const R3Vector& vector)$/;"	f	class:R3Vector
operator -	R2/R2Line.cpp	/^operator-(void)$/;"	f	class:R2Line
operator -	R2/R2Pixel.h	/^operator-(const R2Pixel& pixel1, const R2Pixel& pixel2)$/;"	f
operator -	R2/R2Point.cpp	/^operator-(const R2Point& point)$/;"	f
operator -	R2/R2Point.cpp	/^operator-(const R2Point& point, const R2Vector& vector)$/;"	f
operator -	R2/R2Point.cpp	/^operator-(const R2Point& point1, const R2Point& point2)$/;"	f
operator -	R2/R2Segment.cpp	/^operator-(void)$/;"	f	class:R2Segment
operator -	R2/R2Vector.cpp	/^operator-(const R2Vector& vector)$/;"	f
operator -	R2/R2Vector.cpp	/^operator-(const R2Vector& vector1, const R2Vector& vector2)$/;"	f
operator -	R3/R3Line.h	/^operator-(void) const$/;"	f	class:R3Line
operator -	R3/R3Matrix.cpp	/^operator-(const R3Matrix& a)$/;"	f
operator -	R3/R3Matrix.cpp	/^operator-(const R3Matrix& a, const R3Matrix& b) $/;"	f
operator -	R3/R3Plane.h	/^operator-(void) const$/;"	f	class:R3Plane
operator -	R3/R3Point.cpp	/^operator-(const R3Point& point)$/;"	f
operator -	R3/R3Point.cpp	/^operator-(const R3Point& point, const R3Vector& vector)$/;"	f
operator -	R3/R3Point.cpp	/^operator-(const R3Point& point1, const R3Point& point2)$/;"	f
operator -	R3/R3Ray.h	/^operator-(void) const$/;"	f	class:R3Ray
operator -	R3/R3Segment.h	/^operator-(void) const$/;"	f	class:R3Segment
operator -	R3/R3Vector.cpp	/^operator-(const R3Vector& vector)$/;"	f
operator -	R3/R3Vector.cpp	/^operator-(const R3Vector& vector1, const R3Vector& vector2)$/;"	f
operator -=	R2/R2Pixel.h	/^operator-=(const R2Pixel& pixel)$/;"	f	class:R2Pixel
operator -=	R2/R2Point.cpp	/^operator-=(const R2Vector& vector)$/;"	f	class:R2Point
operator -=	R2/R2Vector.cpp	/^operator-=(const R2Vector& vector)$/;"	f	class:R2Vector
operator -=	R3/R3Matrix.h	/^operator-=(const R3Matrix& a)$/;"	f	class:R3Matrix
operator -=	R3/R3Point.cpp	/^operator-=(const R3Vector& vector)$/;"	f	class:R3Point
operator -=	R3/R3Vector.cpp	/^operator-=(const R3Vector& vector)$/;"	f	class:R3Vector
operator /	R2/R2Pixel.h	/^operator\/(const R2Pixel& pixel, double scale)$/;"	f
operator /	R2/R2Point.cpp	/^operator\/(const R2Point& point, double a)$/;"	f
operator /	R2/R2Vector.cpp	/^operator\/(const R2Vector& vector, double a)$/;"	f
operator /	R2/R2Vector.cpp	/^operator\/(const R2Vector& vector1, const R2Vector& vector2)$/;"	f
operator /	R3/R3Matrix.cpp	/^operator\/(const R3Matrix& a, double b) $/;"	f
operator /	R3/R3Point.cpp	/^operator\/(const R3Point& point, const double a)$/;"	f
operator /	R3/R3Vector.cpp	/^operator\/(const R3Vector& vector, const double a)$/;"	f
operator /	R3/R3Vector.cpp	/^operator\/(const R3Vector& vector1, const R3Vector& vector2)$/;"	f
operator /=	R2/R2Pixel.h	/^operator\/=(double a)$/;"	f	class:R2Pixel
operator /=	R2/R2Point.cpp	/^operator\/=(double a)$/;"	f	class:R2Point
operator /=	R2/R2Vector.cpp	/^operator\/=(const R2Vector& vector)$/;"	f	class:R2Vector
operator /=	R2/R2Vector.cpp	/^operator\/=(double a)$/;"	f	class:R2Vector
operator /=	R3/R3Matrix.cpp	/^operator\/=(double a)$/;"	f	class:R3Matrix
operator /=	R3/R3Point.cpp	/^operator\/=(const double a)$/;"	f	class:R3Point
operator /=	R3/R3Vector.cpp	/^operator\/=(const R3Vector& vector)$/;"	f	class:R3Vector
operator /=	R3/R3Vector.cpp	/^operator\/=(const double a)$/;"	f	class:R3Vector
operator =	R2/R2Image.cpp	/^operator=(const R2Image& image)$/;"	f	class:R2Image
operator =	R2/R2Line.cpp	/^operator=(const R2Line& line)$/;"	f	class:R2Line
operator =	R2/R2Pixel.h	/^operator=(const R2Pixel& pixel)$/;"	f	class:R2Pixel
operator =	R2/R2Point.cpp	/^operator=(const R2Point& point)$/;"	f	class:R2Point
operator =	R2/R2Vector.cpp	/^operator=(const R2Vector& vector)$/;"	f	class:R2Vector
operator =	R3/R3Matrix.cpp	/^operator=(const R3Matrix& a)$/;"	f	class:R3Matrix
operator =	R3/R3Point.cpp	/^operator=(const R3Point& point)$/;"	f	class:R3Point
operator =	R3/R3Vector.cpp	/^operator=(const R3Vector& vector)$/;"	f	class:R3Vector
operator ==	R2/R2Line.h	/^operator==(const R2Line& line) const$/;"	f	class:R2Line
operator ==	R2/R2Pixel.h	/^operator==(const R2Pixel& pixel) const$/;"	f	class:R2Pixel
operator ==	R2/R2Point.h	/^operator==(const R2Point& point) const$/;"	f	class:R2Point
operator ==	R2/R2Segment.h	/^operator==(const R2Segment& segment) const$/;"	f	class:R2Segment
operator ==	R2/R2Vector.h	/^operator==(const R2Vector& vector) const$/;"	f	class:R2Vector
operator ==	R3/R3Box.h	/^operator==(const R3Box& box) const$/;"	f	class:R3Box
operator ==	R3/R3Line.cpp	/^operator==(const R3Line& line) const$/;"	f	class:R3Line
operator ==	R3/R3Matrix.h	/^operator==(const R3Matrix& matrix) const$/;"	f	class:R3Matrix
operator ==	R3/R3Plane.h	/^operator==(const R3Plane& plane) const$/;"	f	class:R3Plane
operator ==	R3/R3Point.h	/^operator==(const R3Point& point) const$/;"	f	class:R3Point
operator ==	R3/R3Ray.h	/^operator==(const R3Ray& ray) const$/;"	f	class:R3Ray
operator ==	R3/R3Segment.cpp	/^operator==(const R3Segment& segment) const$/;"	f	class:R3Segment
operator ==	R3/R3Vector.h	/^operator==(const R3Vector& vector) const$/;"	f	class:R3Vector
operator []	R2/R2Image.h	/^operator[](int x) $/;"	f	class:R2Image
operator []	R2/R2Image.h	/^operator[](int x) const$/;"	f	class:R2Image
operator []	R2/R2Pixel.h	/^operator[] (int i) $/;"	f	class:R2Pixel
operator []	R2/R2Pixel.h	/^operator[](int i) const$/;"	f	class:R2Pixel
operator []	R2/R2Point.h	/^operator[](int dim) const$/;"	f	class:R2Point
operator []	R2/R2Point.h	/^operator[](int dim)$/;"	f	class:R2Point
operator []	R2/R2Segment.h	/^operator[] (int k) const$/;"	f	class:R2Segment
operator []	R2/R2Vector.h	/^operator[] (int dim) $/;"	f	class:R2Vector
operator []	R2/R2Vector.h	/^operator[] (int dim) const$/;"	f	class:R2Vector
operator []	R3/R3Box.h	/^operator[] (int dir) $/;"	f	class:R3Box
operator []	R3/R3Box.h	/^operator[] (int dir) const$/;"	f	class:R3Box
operator []	R3/R3Matrix.h	/^operator[] (int i) $/;"	f	class:R3Matrix
operator []	R3/R3Matrix.h	/^operator[] (int i) const$/;"	f	class:R3Matrix
operator []	R3/R3Plane.h	/^operator[](int i) $/;"	f	class:R3Plane
operator []	R3/R3Plane.h	/^operator[](int i) const$/;"	f	class:R3Plane
operator []	R3/R3Point.h	/^operator[] (int dim) $/;"	f	class:R3Point
operator []	R3/R3Point.h	/^operator[](int dim) const$/;"	f	class:R3Point
operator []	R3/R3Segment.h	/^operator[] (int k) const$/;"	f	class:R3Segment
operator []	R3/R3Vector.h	/^operator[] (int dim) $/;"	f	class:R3Vector
operator []	R3/R3Vector.h	/^operator[](int dim) const$/;"	f	class:R3Vector
optimize_coding	jpeg/jpeglib.h	/^  jboolean optimize_coding;	\/* TRUE=optimize entropy encoding parms *\/$/;"	m	struct:jpeg_compress_struct
options	raypro.cpp	/^static char options[] =$/;"	v	file:
original_length	jpeg/jpeglib.h	/^  unsigned int original_length;	\/* # bytes of data in the file *\/$/;"	m	struct:jpeg_marker_struct
out_color_components	jpeg/jpeglib.h	/^  int out_color_components;	\/* # of color components in out_color_space *\/$/;"	m	struct:jpeg_decompress_struct
out_color_space	jpeg/jpeglib.h	/^  J_COLOR_SPACE out_color_space; \/* colorspace for output *\/$/;"	m	struct:jpeg_decompress_struct
out_of_memory	jpeg/jmemmgr.c	/^out_of_memory (j_common_ptr cinfo, int which)$/;"	f
out_row_width	jpeg/jdmerge.c	/^  JDIMENSION out_row_width;	\/* samples per output row *\/$/;"	m	struct:__anon7	file:
outfile	jpeg/jdatadst.c	/^  FILE * outfile;		\/* target stream *\/$/;"	m	struct:__anon18	file:
outfile	jpeg/wrjpgcom.c	/^static FILE * outfile;		\/* output JPEG file *\/$/;"	v	file:
outfilename	jpeg/cjpeg.c	/^static char * outfilename;	\/* for -outfile switch *\/$/;"	v	file:
outfilename	jpeg/djpeg.c	/^static char * outfilename;	\/* for -outfile switch *\/$/;"	v	file:
outfilename	jpeg/jpegtran.c	/^static char * outfilename;	\/* for -outfile switch *\/$/;"	v	file:
output	jpeg/wrgif.c	/^output (gif_dest_ptr dinfo, int code)$/;"	f
output_components	jpeg/jpeglib.h	/^  int output_components;	\/* # of color components returned *\/$/;"	m	struct:jpeg_decompress_struct
output_file	jpeg/cdjpeg.h	/^  FILE * output_file;$/;"	m	struct:djpeg_dest_struct
output_gamma	jpeg/jpeglib.h	/^  double output_gamma;		\/* image gamma wanted in output *\/$/;"	m	struct:jpeg_decompress_struct
output_height	jpeg/jpeglib.h	/^  JDIMENSION output_height;	\/* scaled image height *\/$/;"	m	struct:jpeg_decompress_struct
output_iMCU_row	jpeg/jpeglib.h	/^  JDIMENSION output_iMCU_row;	\/* Number of iMCU rows read *\/$/;"	m	struct:jpeg_decompress_struct
output_image_name	minecraft.cpp	/^static char *output_image_name = NULL;$/;"	v	file:
output_message	jpeg/jerror.c	/^output_message (j_common_ptr cinfo)$/;"	f
output_pass	jpeg/jcmaster.c	/^	output_pass		\/* data output pass *\/$/;"	e	enum:__anon63	file:
output_scan_number	jpeg/jpeglib.h	/^  int output_scan_number;	\/* Nominal scan number being displayed *\/$/;"	m	struct:jpeg_decompress_struct
output_scanline	jpeg/jpeglib.h	/^  JDIMENSION output_scanline;	\/* 0 .. output_height-1  *\/$/;"	m	struct:jpeg_decompress_struct
output_value	jpeg/jquant1.c	/^output_value (j_decompress_ptr cinfo, int ci, int j, int maxj)$/;"	f
output_width	jpeg/jpeglib.h	/^  JDIMENSION output_width;	\/* scaled image width *\/$/;"	m	struct:jpeg_decompress_struct
packetbuf	jpeg/wrgif.c	/^  char packetbuf[256];		\/* workspace for accumulating packet *\/$/;"	m	struct:__anon50	file:
pad_bytes	jpeg/wrbmp.c	/^  int pad_bytes;		\/* number of padding bytes needed per row *\/$/;"	m	struct:__anon47	file:
parent	R3Scene.h	/^  struct R3Node *parent;$/;"	m	struct:R3Node	typeref:struct:R3Node::R3Node
parse_switches	jpeg/cjpeg.c	/^parse_switches (j_compress_ptr cinfo, int argc, char **argv,$/;"	f
parse_switches	jpeg/djpeg.c	/^parse_switches (j_decompress_ptr cinfo, int argc, char **argv,$/;"	f
parse_switches	jpeg/jpegtran.c	/^parse_switches (j_compress_ptr cinfo, int argc, char **argv,$/;"	f
pass2_fs_dither	jpeg/jquant2.c	/^pass2_fs_dither (j_decompress_ptr cinfo,$/;"	f
pass2_no_dither	jpeg/jquant2.c	/^pass2_no_dither (j_decompress_ptr cinfo,$/;"	f
pass_counter	jpeg/jpeglib.h	/^  long pass_counter;		\/* work units completed in this pass *\/$/;"	m	struct:jpeg_progress_mgr
pass_limit	jpeg/jpeglib.h	/^  long pass_limit;		\/* total number of work units in this pass *\/$/;"	m	struct:jpeg_progress_mgr
pass_mode	jpeg/jcmainct.c	/^  J_BUF_MODE pass_mode;		\/* current operating mode *\/$/;"	m	struct:__anon4	file:
pass_number	jpeg/jcmaster.c	/^  int pass_number;		\/* # of passes completed *\/$/;"	m	struct:__anon64	file:
pass_number	jpeg/jdmaster.c	/^  int pass_number;		\/* # of passes completed *\/$/;"	m	struct:__anon61	file:
pass_startup	jpeg/jcmaster.c	/^pass_startup (j_compress_ptr cinfo)$/;"	f
pass_type	jpeg/jcmaster.c	/^  c_pass_type pass_type;	\/* the type of the current pass *\/$/;"	m	struct:__anon64	file:
pbm_getc	jpeg/rdcolmap.c	/^pbm_getc (FILE * infile)$/;"	f
pbm_getc	jpeg/rdppm.c	/^pbm_getc (FILE * infile)$/;"	f
per_scan_setup	jpeg/jcmaster.c	/^per_scan_setup (j_compress_ptr cinfo)$/;"	f
per_scan_setup	jpeg/jdinput.c	/^per_scan_setup (j_decompress_ptr cinfo)$/;"	f
percent_done	jpeg/cdjpeg.h	/^  int percent_done;$/;"	m	struct:cdjpeg_progress_mgr
phuff_entropy_decoder	jpeg/jdphuff.c	/^} phuff_entropy_decoder;$/;"	t	typeref:struct:__anon3	file:
phuff_entropy_encoder	jpeg/jcphuff.c	/^} phuff_entropy_encoder;$/;"	t	typeref:struct:__anon60	file:
phuff_entropy_ptr	jpeg/jcphuff.c	/^typedef phuff_entropy_encoder * phuff_entropy_ptr;$/;"	t	file:
phuff_entropy_ptr	jpeg/jdphuff.c	/^typedef phuff_entropy_decoder * phuff_entropy_ptr;$/;"	t	file:
picker_height	minecraft.cpp	/^static float picker_height = 10;$/;"	v	file:
picker_width	minecraft.cpp	/^static float picker_width = 10;$/;"	v	file:
pixel_size	jpeg/rdtarga.c	/^  int pixel_size;		\/* Bytes per Targa pixel (1 to 4) *\/$/;"	m	struct:_tga_source_struct	file:
pixels	R2/R2Image.h	/^  R2Pixel *pixels;$/;"	m	class:R2Image
pixrow	jpeg/rdppm.c	/^  JSAMPROW pixrow;		\/* FAR pointer to same *\/$/;"	m	struct:__anon48	file:
pixrow	jpeg/wrppm.c	/^  JSAMPROW pixrow;		\/* decompressor output buffer *\/$/;"	m	struct:__anon40	file:
plane	R3/R3Mesh.h	/^  R3Plane plane;$/;"	m	struct:R3MeshFace
point	R3/R3Line.h	/^  R3Point point;$/;"	m	class:R3Line
points	R2/R2Segment.h	/^  R2Point points[2];$/;"	m	class:R2Segment
pop	jpeg/jmemdosa.asm	/^		pop	di$/;"	d
pop	jpeg/jmemdosa.asm	/^		pop	ds			; restore registers and exit$/;"	d
pop	jpeg/jmemdosa.asm	/^		pop	ds$/;"	d
pop	jpeg/jmemdosa.asm	/^		pop	dx$/;"	d
position	R3/R3Mesh.h	/^  R3Point position;$/;"	m	struct:R3MeshVertex
position	R3Scene.h	/^  R3Point position;$/;"	m	struct:R3Light
position	raytrace.h	/^    R3Point position;$/;"	m	struct:R3Intersection
possibly_dupli_function	jpeg/ckconfig.c	/^int possibly_dupli_function ()$/;"	f
possibly_duplicate_function	jpeg/ckconfig.c	/^int possibly_duplicate_function ()$/;"	f
post	jpeg/jpeglib.h	/^  struct jpeg_d_post_controller * post;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_d_post_controller
post_process_1pass	jpeg/jdpostct.c	/^post_process_1pass (j_decompress_ptr cinfo,$/;"	f
post_process_2pass	jpeg/jdpostct.c	/^post_process_2pass (j_decompress_ptr cinfo,$/;"	f
post_process_prepass	jpeg/jdpostct.c	/^post_process_prepass (j_decompress_ptr cinfo,$/;"	f
ppm_dest_ptr	jpeg/wrppm.c	/^typedef ppm_dest_struct * ppm_dest_ptr;$/;"	t	file:
ppm_dest_struct	jpeg/wrppm.c	/^} ppm_dest_struct;$/;"	t	typeref:struct:__anon40	file:
ppm_source_ptr	jpeg/rdppm.c	/^typedef ppm_source_struct * ppm_source_ptr;$/;"	t	file:
ppm_source_struct	jpeg/rdppm.c	/^} ppm_source_struct;$/;"	t	typeref:struct:__anon48	file:
pre_process_context	jpeg/jcprepct.c	/^pre_process_context (j_compress_ptr cinfo,$/;"	f
pre_process_data	jpeg/jcprepct.c	/^pre_process_data (j_compress_ptr cinfo,$/;"	f
pre_zero	jpeg/jmemmgr.c	/^  jboolean pre_zero;		\/* pre-zero mode requested? *\/$/;"	m	struct:jvirt_barray_control	file:
pre_zero	jpeg/jmemmgr.c	/^  jboolean pre_zero;		\/* pre-zero mode requested? *\/$/;"	m	struct:jvirt_sarray_control	file:
prefix	jpeg/Makefile	/^prefix = \/usr\/local$/;"	m
prep	jpeg/jpeglib.h	/^  struct jpeg_c_prep_controller * prep;$/;"	m	struct:jpeg_compress_struct	typeref:struct:jpeg_compress_struct::jpeg_c_prep_controller
prepare_for_output_pass	jpeg/jdmaster.c	/^prepare_for_output_pass (j_decompress_ptr cinfo)$/;"	f
prepare_for_pass	jpeg/jcmaster.c	/^prepare_for_pass (j_compress_ptr cinfo)$/;"	f
prepare_range_limit_table	jpeg/jdmaster.c	/^prepare_range_limit_table (j_decompress_ptr cinfo)$/;"	f
prescan_quantize	jpeg/jquant2.c	/^prescan_quantize (j_decompress_ptr cinfo, JSAMPARRAY input_buf,$/;"	f
print_mem_stats	jpeg/jmemmgr.c	/^print_mem_stats (j_common_ptr cinfo, int pool_id)$/;"	f
process_APPn	jpeg/jdmarker.c	/^  jpeg_marker_parser_method process_APPn[16];$/;"	m	struct:__anon42	file:
process_COM	jpeg/jdmarker.c	/^  jpeg_marker_parser_method process_COM;$/;"	m	struct:__anon42	file:
process_COM	jpeg/rdjpgcom.c	/^process_COM (void)$/;"	f	file:
process_SOFn	jpeg/rdjpgcom.c	/^process_SOFn (int marker)$/;"	f	file:
process_data_buffer_main	jpeg/jcmainct.c	/^process_data_buffer_main (j_compress_ptr cinfo,$/;"	f
process_data_context_main	jpeg/jdmainct.c	/^process_data_context_main (j_decompress_ptr cinfo,$/;"	f
process_data_crank_post	jpeg/jdmainct.c	/^process_data_crank_post (j_decompress_ptr cinfo,$/;"	f
process_data_simple_main	jpeg/jcmainct.c	/^process_data_simple_main (j_compress_ptr cinfo,$/;"	f
process_data_simple_main	jpeg/jdmainct.c	/^process_data_simple_main (j_decompress_ptr cinfo,$/;"	f
progname	jpeg/cjpeg.c	/^static const char * progname;	\/* program name for error messages *\/$/;"	v	file:
progname	jpeg/djpeg.c	/^static const char * progname;	\/* program name for error messages *\/$/;"	v	file:
progname	jpeg/jpegtran.c	/^static const char * progname;	\/* program name for error messages *\/$/;"	v	file:
progname	jpeg/rdjpgcom.c	/^static const char * progname;	\/* program name for error messages *\/$/;"	v	file:
progname	jpeg/wrjpgcom.c	/^static const char * progname;	\/* program name for error messages *\/$/;"	v	file:
progress_monitor	jpeg/cdjpeg.c	/^progress_monitor (j_common_ptr cinfo)$/;"	f
progressive_mode	jpeg/jpeglib.h	/^  jboolean progressive_mode;	\/* TRUE if SOFn specifies progressive mode *\/$/;"	m	struct:jpeg_decompress_struct
progressive_mode	jpeg/jpeglib.h	/^  jboolean progressive_mode;	\/* TRUE if scan script uses progressive mode *\/$/;"	m	struct:jpeg_compress_struct
ptr	jpeg/jmemdos.c	/^	void far * ptr;$/;"	m	union:__anon21	file:
pub	jpeg/cdjpeg.h	/^  struct jpeg_progress_mgr pub;	\/* fields known to JPEG library *\/$/;"	m	struct:cdjpeg_progress_mgr	typeref:struct:cdjpeg_progress_mgr::jpeg_progress_mgr
pub	jpeg/example.c	/^  struct jpeg_error_mgr pub;	\/* "public" fields *\/$/;"	m	struct:my_error_mgr	typeref:struct:my_error_mgr::jpeg_error_mgr	file:
pub	jpeg/jccoefct.c	/^  struct jpeg_c_coef_controller pub; \/* public fields *\/$/;"	m	struct:__anon62	typeref:struct:__anon62::jpeg_c_coef_controller	file:
pub	jpeg/jccolor.c	/^  struct jpeg_color_converter pub; \/* public fields *\/$/;"	m	struct:__anon9	typeref:struct:__anon9::jpeg_color_converter	file:
pub	jpeg/jcdctmgr.c	/^  struct jpeg_forward_dct pub;	\/* public fields *\/$/;"	m	struct:__anon1	typeref:struct:__anon1::jpeg_forward_dct	file:
pub	jpeg/jchuff.c	/^  struct jpeg_entropy_encoder pub; \/* public fields *\/$/;"	m	struct:__anon14	typeref:struct:__anon14::jpeg_entropy_encoder	file:
pub	jpeg/jcmainct.c	/^  struct jpeg_c_main_controller pub; \/* public fields *\/$/;"	m	struct:__anon4	typeref:struct:__anon4::jpeg_c_main_controller	file:
pub	jpeg/jcmarker.c	/^  struct jpeg_marker_writer pub; \/* public fields *\/$/;"	m	struct:__anon6	typeref:struct:__anon6::jpeg_marker_writer	file:
pub	jpeg/jcmaster.c	/^  struct jpeg_comp_master pub;	\/* public fields *\/$/;"	m	struct:__anon64	typeref:struct:__anon64::jpeg_comp_master	file:
pub	jpeg/jcphuff.c	/^  struct jpeg_entropy_encoder pub; \/* public fields *\/$/;"	m	struct:__anon60	typeref:struct:__anon60::jpeg_entropy_encoder	file:
pub	jpeg/jcprepct.c	/^  struct jpeg_c_prep_controller pub; \/* public fields *\/$/;"	m	struct:__anon46	typeref:struct:__anon46::jpeg_c_prep_controller	file:
pub	jpeg/jcsample.c	/^  struct jpeg_downsampler pub;	\/* public fields *\/$/;"	m	struct:__anon35	typeref:struct:__anon35::jpeg_downsampler	file:
pub	jpeg/jctrans.c	/^  struct jpeg_c_coef_controller pub; \/* public fields *\/$/;"	m	struct:__anon39	typeref:struct:__anon39::jpeg_c_coef_controller	file:
pub	jpeg/jdatadst.c	/^  struct jpeg_destination_mgr pub; \/* public fields *\/$/;"	m	struct:__anon18	typeref:struct:__anon18::jpeg_destination_mgr	file:
pub	jpeg/jdatasrc.c	/^  struct jpeg_source_mgr pub;	\/* public fields *\/$/;"	m	struct:__anon69	typeref:struct:__anon69::jpeg_source_mgr	file:
pub	jpeg/jdcoefct.c	/^  struct jpeg_d_coef_controller pub; \/* public fields *\/$/;"	m	struct:__anon16	typeref:struct:__anon16::jpeg_d_coef_controller	file:
pub	jpeg/jdcolor.c	/^  struct jpeg_color_deconverter pub; \/* public fields *\/$/;"	m	struct:__anon38	typeref:struct:__anon38::jpeg_color_deconverter	file:
pub	jpeg/jddctmgr.c	/^  struct jpeg_inverse_dct pub;	\/* public fields *\/$/;"	m	struct:__anon70	typeref:struct:__anon70::jpeg_inverse_dct	file:
pub	jpeg/jdhuff.c	/^  struct jpeg_entropy_decoder pub; \/* public fields *\/$/;"	m	struct:__anon67	typeref:struct:__anon67::jpeg_entropy_decoder	file:
pub	jpeg/jdhuff.h	/^  JHUFF_TBL *pub;$/;"	m	struct:__anon31
pub	jpeg/jdinput.c	/^  struct jpeg_input_controller pub; \/* public fields *\/$/;"	m	struct:__anon12	typeref:struct:__anon12::jpeg_input_controller	file:
pub	jpeg/jdmainct.c	/^  struct jpeg_d_main_controller pub; \/* public fields *\/$/;"	m	struct:__anon17	typeref:struct:__anon17::jpeg_d_main_controller	file:
pub	jpeg/jdmarker.c	/^  struct jpeg_marker_reader pub; \/* public fields *\/$/;"	m	struct:__anon42	typeref:struct:__anon42::jpeg_marker_reader	file:
pub	jpeg/jdmaster.c	/^  struct jpeg_decomp_master pub; \/* public fields *\/$/;"	m	struct:__anon61	typeref:struct:__anon61::jpeg_decomp_master	file:
pub	jpeg/jdmerge.c	/^  struct jpeg_upsampler pub;	\/* public fields *\/$/;"	m	struct:__anon7	typeref:struct:__anon7::jpeg_upsampler	file:
pub	jpeg/jdphuff.c	/^  struct jpeg_entropy_decoder pub; \/* public fields *\/$/;"	m	struct:__anon3	typeref:struct:__anon3::jpeg_entropy_decoder	file:
pub	jpeg/jdpostct.c	/^  struct jpeg_d_post_controller pub; \/* public fields *\/$/;"	m	struct:__anon36	typeref:struct:__anon36::jpeg_d_post_controller	file:
pub	jpeg/jdsample.c	/^  struct jpeg_upsampler pub;	\/* public fields *\/$/;"	m	struct:__anon11	typeref:struct:__anon11::jpeg_upsampler	file:
pub	jpeg/jmemmgr.c	/^  struct jpeg_memory_mgr pub;	\/* public fields *\/$/;"	m	struct:__anon30	typeref:struct:__anon30::jpeg_memory_mgr	file:
pub	jpeg/jquant1.c	/^  struct jpeg_color_quantizer pub; \/* public fields *\/$/;"	m	struct:__anon24	typeref:struct:__anon24::jpeg_color_quantizer	file:
pub	jpeg/jquant2.c	/^  struct jpeg_color_quantizer pub; \/* public fields *\/$/;"	m	struct:__anon26	typeref:struct:__anon26::jpeg_color_quantizer	file:
pub	jpeg/rdbmp.c	/^  struct cjpeg_source_struct pub; \/* public fields *\/$/;"	m	struct:_bmp_source_struct	typeref:struct:_bmp_source_struct::cjpeg_source_struct	file:
pub	jpeg/rdppm.c	/^  struct cjpeg_source_struct pub; \/* public fields *\/$/;"	m	struct:__anon48	typeref:struct:__anon48::cjpeg_source_struct	file:
pub	jpeg/rdrle.c	/^  struct cjpeg_source_struct pub; \/* public fields *\/$/;"	m	struct:_rle_source_struct	typeref:struct:_rle_source_struct::cjpeg_source_struct	file:
pub	jpeg/rdtarga.c	/^  struct cjpeg_source_struct pub; \/* public fields *\/$/;"	m	struct:_tga_source_struct	typeref:struct:_tga_source_struct::cjpeg_source_struct	file:
pub	jpeg/wrbmp.c	/^  struct djpeg_dest_struct pub;	\/* public fields *\/$/;"	m	struct:__anon47	typeref:struct:__anon47::djpeg_dest_struct	file:
pub	jpeg/wrgif.c	/^  struct djpeg_dest_struct pub;	\/* public fields *\/$/;"	m	struct:__anon50	typeref:struct:__anon50::djpeg_dest_struct	file:
pub	jpeg/wrppm.c	/^  struct djpeg_dest_struct pub;	\/* public fields *\/$/;"	m	struct:__anon40	typeref:struct:__anon40::djpeg_dest_struct	file:
pub	jpeg/wrrle.c	/^  struct djpeg_dest_struct pub; \/* public fields *\/$/;"	m	struct:__anon10	typeref:struct:__anon10::djpeg_dest_struct	file:
pub	jpeg/wrtarga.c	/^  struct djpeg_dest_struct pub;	\/* public fields *\/$/;"	m	struct:__anon59	typeref:struct:__anon59::djpeg_dest_struct	file:
push	jpeg/jmemdosa.asm	/^		push	di$/;"	d
push	jpeg/jmemdosa.asm	/^		push	ds$/;"	d
push	jpeg/jmemdosa.asm	/^		push	dx$/;"	d
put_3bytes	jpeg/wrgif.c	/^put_3bytes (gif_dest_ptr dinfo, int val)$/;"	f
put_bits	jpeg/jchuff.c	/^  int put_bits;			\/* # of bits now in it *\/$/;"	m	struct:__anon13	file:
put_bits	jpeg/jcphuff.c	/^  int put_bits;			\/* # of bits now in it *\/$/;"	m	struct:__anon60	file:
put_buffer	jpeg/jchuff.c	/^  INT32 put_buffer;		\/* current bit-accumulation buffer *\/$/;"	m	struct:__anon13	file:
put_buffer	jpeg/jcphuff.c	/^  INT32 put_buffer;		\/* current bit-accumulation buffer *\/$/;"	m	struct:__anon60	file:
put_demapped_gray	jpeg/wrppm.c	/^put_demapped_gray (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_demapped_gray	jpeg/wrtarga.c	/^put_demapped_gray (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_demapped_rgb	jpeg/wrppm.c	/^put_demapped_rgb (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_gray_rows	jpeg/wrbmp.c	/^put_gray_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_gray_rows	jpeg/wrtarga.c	/^put_gray_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_pixel_rows	jpeg/wrbmp.c	/^put_pixel_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_pixel_rows	jpeg/wrgif.c	/^put_pixel_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_pixel_rows	jpeg/wrppm.c	/^put_pixel_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_pixel_rows	jpeg/wrtarga.c	/^put_pixel_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
put_word	jpeg/wrgif.c	/^put_word (gif_dest_ptr dinfo, unsigned int w)$/;"	f
quadratic_attenuation	R3Scene.h	/^  double quadratic_attenuation;$/;"	m	struct:R3Light
quant_table	jpeg/jpeglib.h	/^  JQUANT_TBL * quant_table;$/;"	m	struct:__anon53
quant_tbl_no	jpeg/jpeglib.h	/^  int quant_tbl_no;		\/* quantization table selector (0..3) *\/$/;"	m	struct:__anon53
quant_tbl_ptrs	jpeg/jpeglib.h	/^  JQUANT_TBL * quant_tbl_ptrs[NUM_QUANT_TBLS];$/;"	m	struct:jpeg_compress_struct
quant_tbl_ptrs	jpeg/jpeglib.h	/^  JQUANT_TBL * quant_tbl_ptrs[NUM_QUANT_TBLS];$/;"	m	struct:jpeg_decompress_struct
quantize3_ord_dither	jpeg/jquant1.c	/^quantize3_ord_dither (j_decompress_ptr cinfo, JSAMPARRAY input_buf,$/;"	f
quantize_colors	jpeg/jpeglib.h	/^  jboolean quantize_colors;	\/* TRUE=colormapped output wanted *\/$/;"	m	struct:jpeg_decompress_struct
quantize_fs_dither	jpeg/jquant1.c	/^quantize_fs_dither (j_decompress_ptr cinfo, JSAMPARRAY input_buf,$/;"	f
quantize_ord_dither	jpeg/jquant1.c	/^quantize_ord_dither (j_decompress_ptr cinfo, JSAMPARRAY input_buf,$/;"	f
quantizer_1pass	jpeg/jdmaster.c	/^  struct jpeg_color_quantizer * quantizer_1pass;$/;"	m	struct:__anon61	typeref:struct:__anon61::jpeg_color_quantizer	file:
quantizer_2pass	jpeg/jdmaster.c	/^  struct jpeg_color_quantizer * quantizer_2pass;$/;"	m	struct:__anon61	typeref:struct:__anon61::jpeg_color_quantizer	file:
quantval	jpeg/jpeglib.h	/^  UINT16 quantval[DCTSIZE2];	\/* quantization step for each coefficient *\/$/;"	m	struct:__anon51
quit	minecraft.cpp	/^static int quit = 0;$/;"	v	file:
radius	R3/R3Cone.h	/^  double radius;$/;"	m	class:R3Cone
radius	R3/R3Cylinder.h	/^  double radius;$/;"	m	class:R3Cylinder
radius	R3/R3Sphere.h	/^  double radius;$/;"	m	class:R3Sphere
radius	R3Scene.h	/^  double radius;$/;"	m	struct:R3Light
raw_data_in	jpeg/jpeglib.h	/^  jboolean raw_data_in;		\/* TRUE=caller supplies downsampled data *\/$/;"	m	struct:jpeg_compress_struct
raw_data_out	jpeg/jpeglib.h	/^  jboolean raw_data_out;		\/* TRUE=downsampled data wanted *\/$/;"	m	struct:jpeg_decompress_struct
ray	R3/R3Segment.h	/^  R3Ray ray;$/;"	m	class:R3Segment
read_1_byte	jpeg/rdjpgcom.c	/^read_1_byte (void)$/;"	f	file:
read_1_byte	jpeg/wrjpgcom.c	/^read_1_byte (void)$/;"	f	file:
read_2_bytes	jpeg/rdjpgcom.c	/^read_2_bytes (void)$/;"	f	file:
read_2_bytes	jpeg/wrjpgcom.c	/^read_2_bytes (void)$/;"	f	file:
read_JPEG_file	jpeg/example.c	/^read_JPEG_file (char * filename)$/;"	f
read_backing_store	jpeg/jmemansi.c	/^read_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
read_backing_store	jpeg/jmemmac.c	/^read_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
read_backing_store	jpeg/jmemname.c	/^read_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
read_byte	jpeg/rdbmp.c	/^read_byte (bmp_source_ptr sinfo)$/;"	f
read_byte	jpeg/rdtarga.c	/^read_byte (tga_source_ptr sinfo)$/;"	f
read_color_map	jpeg/cdjpeg.h	109;"	d
read_color_map	jpeg/rdcolmap.c	/^read_color_map (j_decompress_ptr cinfo, FILE * infile)$/;"	f
read_colormap	jpeg/rdbmp.c	/^read_colormap (bmp_source_ptr sinfo, int cmaplen, int mapentrysize)$/;"	f
read_colormap	jpeg/rdtarga.c	/^read_colormap (tga_source_ptr sinfo, int cmaplen, int mapentrysize)$/;"	f
read_ems_store	jpeg/jmemdos.c	/^read_ems_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
read_err	jpeg/jmemdosa.asm	/^read_err:	pop	ds			; restore registers and exit$/;"	l
read_file_store	jpeg/jmemdos.c	/^read_file_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
read_gif_map	jpeg/rdcolmap.c	/^read_gif_map (j_decompress_ptr cinfo, FILE * infile)$/;"	f
read_markers	jpeg/jdmarker.c	/^read_markers (j_decompress_ptr cinfo)$/;"	f
read_non_rle_pixel	jpeg/rdtarga.c	/^read_non_rle_pixel (tga_source_ptr sinfo)$/;"	f
read_ok	jpeg/jmemdosa.asm	/^read_ok:	xor	ax,ax			; return zero for OK$/;"	l
read_pbm_integer	jpeg/rdcolmap.c	/^read_pbm_integer (j_decompress_ptr cinfo, FILE * infile)$/;"	f
read_pbm_integer	jpeg/rdppm.c	/^read_pbm_integer (j_compress_ptr cinfo, FILE * infile)$/;"	f
read_ppm_map	jpeg/rdcolmap.c	/^read_ppm_map (j_decompress_ptr cinfo, FILE * infile)$/;"	f
read_quant_tables	jpeg/cdjpeg.h	105;"	d
read_restart_marker	jpeg/jpegint.h	/^  jpeg_marker_parser_method read_restart_marker;$/;"	m	struct:jpeg_marker_reader
read_rle_pixel	jpeg/rdtarga.c	/^read_rle_pixel (tga_source_ptr sinfo)$/;"	f
read_scan_script	jpeg/cdjpeg.h	106;"	d
read_stdin	jpeg/cdjpeg.c	/^read_stdin (void)$/;"	f
read_stdin	jpeg/cdjpeg.h	113;"	d
read_xms_store	jpeg/jmemdos.c	/^read_xms_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
realize_virt_arrays	jpeg/jmemmgr.c	/^realize_virt_arrays (j_common_ptr cinfo)$/;"	f
rec_outbuf_height	jpeg/jpeglib.h	/^  int rec_outbuf_height;	\/* min recommended height of scanline buffer *\/$/;"	m	struct:jpeg_decompress_struct
requested_fmt	jpeg/djpeg.c	/^static IMAGE_FORMATS requested_fmt;$/;"	v	file:
rescale	jpeg/rdppm.c	/^  JSAMPLE *rescale;		\/* => maxval-remapping array, or NULL *\/$/;"	m	struct:__anon48	file:
reset_error_mgr	jpeg/jerror.c	/^reset_error_mgr (j_common_ptr cinfo)$/;"	f
reset_input_controller	jpeg/jdinput.c	/^reset_input_controller (j_decompress_ptr cinfo)$/;"	f
reset_marker_reader	jpeg/jdmarker.c	/^reset_marker_reader (j_decompress_ptr cinfo)$/;"	f
restart_in_rows	jpeg/jpeglib.h	/^  int restart_in_rows;		\/* if > 0, MCU rows per restart interval *\/$/;"	m	struct:jpeg_compress_struct
restart_interval	jpeg/jpeglib.h	/^  unsigned int restart_interval; \/* MCUs per restart interval, or 0 for no restart *\/$/;"	m	struct:jpeg_decompress_struct
restart_interval	jpeg/jpeglib.h	/^  unsigned int restart_interval; \/* MCUs per restart, or 0 for no restart *\/$/;"	m	struct:jpeg_compress_struct
restarts_to_go	jpeg/jchuff.c	/^  unsigned int restarts_to_go;	\/* MCUs left in this restart interval *\/$/;"	m	struct:__anon14	file:
restarts_to_go	jpeg/jcphuff.c	/^  unsigned int restarts_to_go;	\/* MCUs left in this restart interval *\/$/;"	m	struct:__anon60	file:
restarts_to_go	jpeg/jdhuff.c	/^  unsigned int restarts_to_go;	\/* MCUs left in this restart interval *\/$/;"	m	struct:__anon67	file:
restarts_to_go	jpeg/jdphuff.c	/^  unsigned int restarts_to_go;	\/* MCUs left in this restart interval *\/$/;"	m	struct:__anon3	file:
rgbBlue	R2/R2Image.cpp	/^  unsigned char rgbBlue;$/;"	m	struct:tagRGBQUAD	file:
rgbGreen	R2/R2Image.cpp	/^  unsigned char rgbGreen;$/;"	m	struct:tagRGBQUAD	file:
rgbRed	R2/R2Image.cpp	/^  unsigned char rgbRed;$/;"	m	struct:tagRGBQUAD	file:
rgbReserved	R2/R2Image.cpp	/^  unsigned char rgbReserved;$/;"	m	struct:tagRGBQUAD	file:
rgb_gray_convert	jpeg/jccolor.c	/^rgb_gray_convert (j_compress_ptr cinfo,$/;"	f
rgb_ycc_convert	jpeg/jccolor.c	/^rgb_ycc_convert (j_compress_ptr cinfo,$/;"	f
rgb_ycc_start	jpeg/jccolor.c	/^rgb_ycc_start (j_compress_ptr cinfo)$/;"	f
rgb_ycc_tab	jpeg/jccolor.c	/^  INT32 * rgb_ycc_tab;		\/* => table for RGB to YCbCr conversion *\/$/;"	m	struct:__anon9	file:
rgbtBlue	R2/R2Image.cpp	/^  unsigned char rgbtBlue;$/;"	m	struct:tagRGBTRIPLE	file:
rgbtGreen	R2/R2Image.cpp	/^  unsigned char rgbtGreen;$/;"	m	struct:tagRGBTRIPLE	file:
rgbtRed	R2/R2Image.cpp	/^  unsigned char rgbtRed;$/;"	m	struct:tagRGBTRIPLE	file:
right	R3Scene.h	/^  R3Vector right;$/;"	m	struct:R3Camera
rle_dest_ptr	jpeg/wrrle.c	/^typedef rle_dest_struct * rle_dest_ptr;$/;"	t	file:
rle_dest_struct	jpeg/wrrle.c	/^} rle_dest_struct;$/;"	t	typeref:struct:__anon10	file:
rle_kind	jpeg/rdrle.c	/^  { GRAYSCALE, MAPPEDGRAY, PSEUDOCOLOR, TRUECOLOR, DIRECTCOLOR } rle_kind;$/;"	t	typeref:enum:__anon37	file:
rle_put_pixel_rows	jpeg/wrrle.c	/^rle_put_pixel_rows (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo,$/;"	f
rle_row	jpeg/rdrle.c	/^  rle_pixel** rle_row;          \/* holds a row returned by rle_getrow() *\/$/;"	m	struct:_rle_source_struct	file:
rle_row	jpeg/wrrle.c	/^  rle_pixel **rle_row;		\/* To pass rows to rle_putrow() *\/$/;"	m	struct:__anon10	file:
rle_source_ptr	jpeg/rdrle.c	/^typedef struct _rle_source_struct * rle_source_ptr;$/;"	t	typeref:struct:_rle_source_struct	file:
rle_source_struct	jpeg/rdrle.c	/^} rle_source_struct;$/;"	t	typeref:struct:_rle_source_struct	file:
root	R3Scene.h	/^  R3Node *root;$/;"	m	struct:R3Scene
row	jpeg/rdrle.c	/^  JDIMENSION row;		\/* current row # in the virtual array *\/$/;"	m	struct:_rle_source_struct	file:
row_index	jpeg/jquant1.c	/^  int row_index;		\/* cur row's vertical index in dither matrix *\/$/;"	m	struct:__anon24	file:
row_width	jpeg/rdbmp.c	/^  JDIMENSION row_width;		\/* Physical width of scanlines in file *\/$/;"	m	struct:_bmp_source_struct	file:
row_width	jpeg/wrbmp.c	/^  JDIMENSION row_width;		\/* physical width of one row in the BMP file *\/$/;"	m	struct:__anon47	file:
rowgroup_ctr	jpeg/jcmainct.c	/^  JDIMENSION rowgroup_ctr;	\/* counts row groups received in iMCU row *\/$/;"	m	struct:__anon4	file:
rowgroup_ctr	jpeg/jdmainct.c	/^  JDIMENSION rowgroup_ctr;	\/* counts row groups output to postprocessor *\/$/;"	m	struct:__anon17	file:
rowgroup_height	jpeg/jdsample.c	/^  int rowgroup_height[MAX_COMPONENTS];$/;"	m	struct:__anon11	file:
rowgroups_avail	jpeg/jdmainct.c	/^  JDIMENSION rowgroups_avail;	\/* row groups available to postprocessor *\/$/;"	m	struct:__anon17	file:
rows_in_array	jpeg/jmemmgr.c	/^  JDIMENSION rows_in_array;	\/* total virtual array height *\/$/;"	m	struct:jvirt_barray_control	file:
rows_in_array	jpeg/jmemmgr.c	/^  JDIMENSION rows_in_array;	\/* total virtual array height *\/$/;"	m	struct:jvirt_sarray_control	file:
rows_in_mem	jpeg/jmemmgr.c	/^  JDIMENSION rows_in_mem;	\/* height of memory buffer *\/$/;"	m	struct:jvirt_barray_control	file:
rows_in_mem	jpeg/jmemmgr.c	/^  JDIMENSION rows_in_mem;	\/* height of memory buffer *\/$/;"	m	struct:jvirt_sarray_control	file:
rows_to_go	jpeg/jcprepct.c	/^  JDIMENSION rows_to_go;	\/* counts rows remaining in source image *\/$/;"	m	struct:__anon46	file:
rows_to_go	jpeg/jdmerge.c	/^  JDIMENSION rows_to_go;	\/* counts rows remaining in image *\/$/;"	m	struct:__anon7	file:
rows_to_go	jpeg/jdsample.c	/^  JDIMENSION rows_to_go;	\/* counts rows remaining in image *\/$/;"	m	struct:__anon11	file:
rowsperchunk	jpeg/jmemmgr.c	/^  JDIMENSION rowsperchunk;	\/* allocation chunk size in mem_buffer *\/$/;"	m	struct:jvirt_barray_control	file:
rowsperchunk	jpeg/jmemmgr.c	/^  JDIMENSION rowsperchunk;	\/* allocation chunk size in mem_buffer *\/$/;"	m	struct:jvirt_sarray_control	file:
s	jpeg/jpeglib.h	/^    char s[JMSG_STR_PARM_MAX];$/;"	m	union:jpeg_error_mgr::__anon58
sample_range_limit	jpeg/jpeglib.h	/^  JSAMPLE * sample_range_limit; \/* table for fast range-limiting *\/$/;"	m	struct:jpeg_decompress_struct
samples_per_row	jpeg/wrppm.c	/^  JDIMENSION samples_per_row;	\/* JSAMPLEs per output row *\/$/;"	m	struct:__anon40	file:
samplesperrow	jpeg/jmemmgr.c	/^  JDIMENSION samplesperrow;	\/* width of array (and of memory buffer) *\/$/;"	m	struct:jvirt_sarray_control	file:
savable_state	jpeg/jchuff.c	/^} savable_state;$/;"	t	typeref:struct:__anon13	file:
savable_state	jpeg/jdhuff.c	/^} savable_state;$/;"	t	typeref:struct:__anon66	file:
savable_state	jpeg/jdphuff.c	/^} savable_state;$/;"	t	typeref:struct:__anon2	file:
save_image	minecraft.cpp	/^static int save_image = 0;$/;"	v	file:
saved	jpeg/jchuff.c	/^  savable_state saved;		\/* Bit buffer & DC state at start of MCU *\/$/;"	m	struct:__anon14	file:
saved	jpeg/jdhuff.c	/^  savable_state saved;		\/* Other state at start of MCU *\/$/;"	m	struct:__anon67	file:
saved	jpeg/jdphuff.c	/^  savable_state saved;		\/* Other state at start of MCU *\/$/;"	m	struct:__anon3	file:
saw_Adobe_marker	jpeg/jpeglib.h	/^  jboolean saw_Adobe_marker;	\/* TRUE iff an Adobe APP14 marker was found *\/$/;"	m	struct:jpeg_decompress_struct
saw_JFIF_marker	jpeg/jpeglib.h	/^  jboolean saw_JFIF_marker;	\/* TRUE iff a JFIF APP0 marker was found *\/$/;"	m	struct:jpeg_decompress_struct
saw_SOF	jpeg/jpegint.h	/^  jboolean saw_SOF;		\/* found SOF? *\/$/;"	m	struct:jpeg_marker_reader
saw_SOI	jpeg/jpegint.h	/^  jboolean saw_SOI;		\/* found SOI? *\/$/;"	m	struct:jpeg_marker_reader
scale_denom	jpeg/jpeglib.h	/^  unsigned int scale_num, scale_denom; \/* fraction by which to scale image *\/$/;"	m	struct:jpeg_decompress_struct
scale_num	jpeg/jpeglib.h	/^  unsigned int scale_num, scale_denom; \/* fraction by which to scale image *\/$/;"	m	struct:jpeg_decompress_struct
scan_JPEG_header	jpeg/rdjpgcom.c	/^scan_JPEG_header (int verbose)$/;"	f	file:
scan_JPEG_header	jpeg/wrjpgcom.c	/^scan_JPEG_header (int keep_COM)$/;"	f	file:
scan_info	jpeg/jpeglib.h	/^  const jpeg_scan_info * scan_info; \/* script for multi-scan file, or NULL *\/$/;"	m	struct:jpeg_compress_struct
scan_number	jpeg/jcmaster.c	/^  int scan_number;		\/* current index in scan_info[] *\/$/;"	m	struct:__anon64	file:
scene	minecraft.cpp	/^static R3Scene *scene = NULL;$/;"	v	file:
script_space	jpeg/jpeglib.h	/^  jpeg_scan_info * script_space; \/* workspace for jpeg_simple_progression *\/$/;"	m	struct:jpeg_compress_struct
script_space_size	jpeg/jpeglib.h	/^  int script_space_size;$/;"	m	struct:jpeg_compress_struct
seek_err	jpeg/jmemdosa.asm	/^seek_err:	pop	ds			; restore registers and exit$/;"	l
segment	R3Scene.h	/^  R3Segment *segment;$/;"	m	struct:R3Shape
select_colors	jpeg/jquant2.c	/^select_colors (j_decompress_ptr cinfo, int desired_colors)$/;"	f
select_file_name	jpeg/jmemdos.c	/^select_file_name (char * fname)$/;"	f
select_file_name	jpeg/jmemname.c	/^select_file_name (char * fname)$/;"	f
select_ncolors	jpeg/jquant1.c	/^select_ncolors (j_decompress_ptr cinfo, int Ncolors[])$/;"	f
select_scan_parameters	jpeg/jcmaster.c	/^select_scan_parameters (j_compress_ptr cinfo)$/;"	f
select_transform	jpeg/jpegtran.c	/^select_transform (JXFORM_CODE transform)$/;"	f
selected	R3Scene.h	/^  bool selected;$/;"	m	struct:R3Node
self_destruct	jpeg/jmemmgr.c	/^self_destruct (j_common_ptr cinfo)$/;"	f
sent_table	jpeg/jpeglib.h	/^  jboolean sent_table;		\/* TRUE when table has been output *\/$/;"	m	struct:__anon51
sent_table	jpeg/jpeglib.h	/^  jboolean sent_table;		\/* TRUE when table has been output *\/$/;"	m	struct:__anon52
sep_downsample	jpeg/jcsample.c	/^sep_downsample (j_compress_ptr cinfo,$/;"	f
sep_upsample	jpeg/jdsample.c	/^sep_upsample (j_decompress_ptr cinfo,$/;"	f
set_bottom_pointers	jpeg/jdmainct.c	/^set_bottom_pointers (j_decompress_ptr cinfo)$/;"	f
set_quant_slots	jpeg/cdjpeg.h	107;"	d
set_sample_factors	jpeg/cdjpeg.h	108;"	d
set_wraparound_pointers	jpeg/jdmainct.c	/^set_wraparound_pointers (j_decompress_ptr cinfo)$/;"	f
setjmp_buffer	jpeg/example.c	/^  jmp_buf setjmp_buffer;	\/* for return to caller *\/$/;"	m	struct:my_error_mgr	file:
shape	R3Scene.h	/^  R3Shape *shape;$/;"	m	struct:R3Node
shininess	R3Scene.h	/^  double shininess;$/;"	m	struct:R3Material
show_bboxes	minecraft.cpp	/^static int show_bboxes = 0;$/;"	v	file:
show_camera	minecraft.cpp	/^static int show_camera = 0;$/;"	v	file:
show_edges	minecraft.cpp	/^static int show_edges = 0;$/;"	v	file:
show_faces	minecraft.cpp	/^static int show_faces = 1;$/;"	v	file:
show_lights	minecraft.cpp	/^static int show_lights = 0;$/;"	v	file:
sig_cinfo	jpeg/cdjpeg.c	/^static j_common_ptr sig_cinfo;$/;"	v	file:
signal_catcher	jpeg/cdjpeg.c	/^signal_catcher (int signum)$/;"	f
skip_input_data	jpeg/jdatasrc.c	/^skip_input_data (j_decompress_ptr cinfo, long num_bytes)$/;"	f
skip_variable	jpeg/rdjpgcom.c	/^skip_variable (void)$/;"	f	file:
skip_variable	jpeg/wrjpgcom.c	/^skip_variable (void)$/;"	f	file:
skipspace	jpeg/ansi2knr.c	/^skipspace(p, dir)$/;"	f
small_list	jpeg/jmemmgr.c	/^  small_pool_ptr small_list[JPOOL_NUMPOOLS];$/;"	m	struct:__anon30	file:
small_pool_hdr	jpeg/jmemmgr.c	/^} small_pool_hdr;$/;"	t	typeref:union:small_pool_struct	file:
small_pool_ptr	jpeg/jmemmgr.c	/^typedef union small_pool_struct * small_pool_ptr;$/;"	t	typeref:union:small_pool_struct	file:
small_pool_struct	jpeg/jmemmgr.c	/^typedef union small_pool_struct {$/;"	u	file:
smoothing_factor	jpeg/jpeglib.h	/^  int smoothing_factor;		\/* 1..100, or 0 for no input smoothing *\/$/;"	m	struct:jpeg_compress_struct
source_row	jpeg/rdbmp.c	/^  JDIMENSION source_row;	\/* Current source row number *\/$/;"	m	struct:_bmp_source_struct	file:
spare_full	jpeg/jdmerge.c	/^  jboolean spare_full;		\/* T if spare buffer is occupied *\/$/;"	m	struct:__anon7	file:
spare_row	jpeg/jdmerge.c	/^  JSAMPROW spare_row;$/;"	m	struct:__anon7	file:
sphere	R3Scene.h	/^  R3Sphere *sphere;$/;"	m	struct:R3Shape
src	jpeg/jmemdos.c	/^	XMSPTR src;$/;"	m	struct:__anon22	file:
src	jpeg/jpeglib.h	/^  struct jpeg_source_mgr * src;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_source_mgr
src_handle	jpeg/jmemdos.c	/^	XMSH src_handle;$/;"	m	struct:__anon22	file:
srcdir	jpeg/Makefile	/^srcdir = .$/;"	m
start_iMCU_row	jpeg/jctrans.c	/^start_iMCU_row (j_compress_ptr cinfo)$/;"	f
start_iMCU_row	jpeg/jdcoefct.c	/^start_iMCU_row (j_decompress_ptr cinfo)$/;"	f
start_input_bmp	jpeg/rdbmp.c	/^start_input_bmp (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
start_input_pass	jpeg/jdcoefct.c	/^start_input_pass (j_decompress_ptr cinfo)$/;"	f
start_input_pass	jpeg/jdinput.c	/^start_input_pass (j_decompress_ptr cinfo)$/;"	f
start_input_ppm	jpeg/rdppm.c	/^start_input_ppm (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
start_input_rle	jpeg/rdrle.c	/^start_input_rle (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
start_input_tga	jpeg/rdtarga.c	/^start_input_tga (j_compress_ptr cinfo, cjpeg_source_ptr sinfo)$/;"	f
start_of_file	jpeg/jdatasrc.c	/^  jboolean start_of_file;	\/* have we gotten any data yet? *\/$/;"	m	struct:__anon69	file:
start_output_bmp	jpeg/wrbmp.c	/^start_output_bmp (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
start_output_gif	jpeg/wrgif.c	/^start_output_gif (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
start_output_pass	jpeg/jdcoefct.c	/^start_output_pass (j_decompress_ptr cinfo)$/;"	f
start_output_ppm	jpeg/wrppm.c	/^start_output_ppm (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
start_output_rle	jpeg/wrrle.c	/^start_output_rle (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
start_output_tga	jpeg/wrtarga.c	/^start_output_tga (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo)$/;"	f
start_pass	jpeg/jddctmgr.c	/^start_pass (j_decompress_ptr cinfo)$/;"	f
start_pass_1_quant	jpeg/jquant1.c	/^start_pass_1_quant (j_decompress_ptr cinfo, jboolean is_pre_scan)$/;"	f
start_pass_2_quant	jpeg/jquant2.c	/^start_pass_2_quant (j_decompress_ptr cinfo, jboolean is_pre_scan)$/;"	f
start_pass_coef	jpeg/jccoefct.c	/^start_pass_coef (j_compress_ptr cinfo, J_BUF_MODE pass_mode)$/;"	f
start_pass_coef	jpeg/jctrans.c	/^start_pass_coef (j_compress_ptr cinfo, J_BUF_MODE pass_mode)$/;"	f
start_pass_dcolor	jpeg/jdcolor.c	/^start_pass_dcolor (j_decompress_ptr cinfo)$/;"	f
start_pass_downsample	jpeg/jcsample.c	/^start_pass_downsample (j_compress_ptr cinfo)$/;"	f
start_pass_dpost	jpeg/jdpostct.c	/^start_pass_dpost (j_decompress_ptr cinfo, J_BUF_MODE pass_mode)$/;"	f
start_pass_fdctmgr	jpeg/jcdctmgr.c	/^start_pass_fdctmgr (j_compress_ptr cinfo)$/;"	f
start_pass_huff	jpeg/jchuff.c	/^start_pass_huff (j_compress_ptr cinfo, jboolean gather_statistics)$/;"	f
start_pass_huff_decoder	jpeg/jdhuff.c	/^start_pass_huff_decoder (j_decompress_ptr cinfo)$/;"	f
start_pass_main	jpeg/jcmainct.c	/^start_pass_main (j_compress_ptr cinfo, J_BUF_MODE pass_mode)$/;"	f
start_pass_main	jpeg/jdmainct.c	/^start_pass_main (j_decompress_ptr cinfo, J_BUF_MODE pass_mode)$/;"	f
start_pass_merged_upsample	jpeg/jdmerge.c	/^start_pass_merged_upsample (j_decompress_ptr cinfo)$/;"	f
start_pass_phuff	jpeg/jcphuff.c	/^start_pass_phuff (j_compress_ptr cinfo, jboolean gather_statistics)$/;"	f
start_pass_phuff_decoder	jpeg/jdphuff.c	/^start_pass_phuff_decoder (j_decompress_ptr cinfo)$/;"	f
start_pass_prep	jpeg/jcprepct.c	/^start_pass_prep (j_compress_ptr cinfo, J_BUF_MODE pass_mode)$/;"	f
start_pass_upsample	jpeg/jdsample.c	/^start_pass_upsample (j_decompress_ptr cinfo)$/;"	f
start_progress_monitor	jpeg/cdjpeg.c	/^start_progress_monitor (j_common_ptr cinfo, cd_progress_ptr progress)$/;"	f
start_progress_monitor	jpeg/cdjpeg.h	111;"	d
starting_row	jpeg/jdpostct.c	/^  JDIMENSION starting_row;	\/* row # of first row in current strip *\/$/;"	m	struct:__anon36	file:
std_huff_tables	jpeg/jcparam.c	/^std_huff_tables (j_compress_ptr cinfo)$/;"	f
strip_height	jpeg/jdpostct.c	/^  JDIMENSION strip_height;	\/* buffer size in rows *\/$/;"	m	struct:__anon36	file:
suspended	jpeg/jcmainct.c	/^  jboolean suspended;		\/* remember if we suspended output *\/$/;"	m	struct:__anon4	file:
sv_actual	jpeg/jquant1.c	/^  int sv_actual;		\/* number of entries in use *\/$/;"	m	struct:__anon24	file:
sv_colormap	jpeg/jquant1.c	/^  JSAMPARRAY sv_colormap;	\/* The color map as a 2-D pixel array *\/$/;"	m	struct:__anon24	file:
sv_colormap	jpeg/jquant2.c	/^  JSAMPARRAY sv_colormap;	\/* colormap allocated at init time *\/$/;"	m	struct:__anon26	file:
t	raytrace.h	/^    double t;$/;"	m	struct:R3Intersection
tagBITMAPFILEHEADER	R2/R2Image.cpp	/^typedef struct tagBITMAPFILEHEADER {$/;"	s	file:
tagBITMAPINFOHEADER	R2/R2Image.cpp	/^typedef struct tagBITMAPINFOHEADER {$/;"	s	file:
tagRGBQUAD	R2/R2Image.cpp	/^typedef struct tagRGBQUAD {$/;"	s	file:
tagRGBTRIPLE	R2/R2Image.cpp	/^typedef struct tagRGBTRIPLE {$/;"	s	file:
tempSpec	jpeg/jmemsys.h	/^  FSSpec tempSpec;		\/* the FSSpec for the temp file *\/$/;"	m	struct:backing_store_struct
temp_file	jpeg/jmemsys.h	/^  FILE * temp_file;		\/* stdio reference to temp file *\/$/;"	m	struct:backing_store_struct
temp_file	jpeg/jmemsys.h	/^  short temp_file;		\/* file reference number to temp file *\/$/;"	m	struct:backing_store_struct
temp_name	jpeg/jmemsys.h	/^  char temp_name[TEMP_NAME_LENGTH]; \/* name if it's a file *\/$/;"	m	struct:backing_store_struct
temp_name	jpeg/jmemsys.h	/^  char temp_name[TEMP_NAME_LENGTH]; \/* name of temp file *\/$/;"	m	struct:backing_store_struct
term_destination	jpeg/jdatadst.c	/^term_destination (j_compress_ptr cinfo)$/;"	f
term_source	jpeg/jdatasrc.c	/^term_source (j_decompress_ptr cinfo)$/;"	f
test1	jpeg/ansi2knr.c	/^test1(buf)$/;"	f
test2function	jpeg/ckconfig.c	/^int test2function (void)	\/* check void arg list *\/$/;"	f
test3function	jpeg/ckconfig.c	/^void test3function (void_ptr arg1, void_func arg2)$/;"	f
test4function	jpeg/ckconfig.c	/^int test4function (const int arg1)$/;"	f
testfunction	jpeg/ckconfig.c	/^int testfunction (int arg1, int * arg2) \/* check definitions *\/$/;"	f
texcoords	R3/R3Mesh.h	/^  R2Point texcoords;$/;"	m	struct:R3MeshVertex
text_getc	jpeg/rdswitch.c	/^text_getc (FILE * file)$/;"	f
texture	R3Scene.h	/^  R2Image *texture;$/;"	m	struct:R3Material
texture_index	R3Scene.h	/^  int texture_index;$/;"	m	struct:R3Material
tga_dest_ptr	jpeg/wrtarga.c	/^typedef tga_dest_struct * tga_dest_ptr;$/;"	t	file:
tga_dest_struct	jpeg/wrtarga.c	/^} tga_dest_struct;$/;"	t	typeref:struct:__anon59	file:
tga_pixel	jpeg/rdtarga.c	/^  U_CHAR tga_pixel[4];$/;"	m	struct:_tga_source_struct	file:
tga_source_ptr	jpeg/rdtarga.c	/^typedef struct _tga_source_struct * tga_source_ptr;$/;"	t	typeref:struct:_tga_source_struct	file:
tga_source_struct	jpeg/rdtarga.c	/^} tga_source_struct;$/;"	t	typeref:struct:_tga_source_struct	file:
this_row_group	jpeg/jcprepct.c	/^  int this_row_group;		\/* starting row index of group to process *\/$/;"	m	struct:__anon46	file:
total_extra_passes	jpeg/cdjpeg.h	/^  int total_extra_passes;	\/* total extra *\/$/;"	m	struct:cdjpeg_progress_mgr
total_iMCU_rows	jpeg/jpeglib.h	/^  JDIMENSION total_iMCU_rows;	\/* # of iMCU rows in image *\/$/;"	m	struct:jpeg_decompress_struct
total_iMCU_rows	jpeg/jpeglib.h	/^  JDIMENSION total_iMCU_rows;	\/* # of iMCU rows to be input to coef ctlr *\/$/;"	m	struct:jpeg_compress_struct
total_passes	jpeg/jcmaster.c	/^  int total_passes;		\/* total # of passes needed *\/$/;"	m	struct:__anon64	file:
total_passes	jpeg/jpeglib.h	/^  int total_passes;		\/* total number of passes expected *\/$/;"	m	struct:jpeg_progress_mgr
total_space_allocated	jpeg/jmemmgr.c	/^  long total_space_allocated;$/;"	m	struct:__anon30	file:
towards	R3Scene.h	/^  R3Vector towards;$/;"	m	struct:R3Camera
trace_level	jpeg/jpeglib.h	/^  int trace_level;		\/* max msg_level that will be displayed *\/$/;"	m	struct:jpeg_error_mgr
trace_message	jpeg/ckconfig.c	/^  int (*trace_message) (char *msgtext);$/;"	m	struct:methods_struct	file:
transdecode_master_selection	jpeg/jdtrans.c	/^transdecode_master_selection (j_decompress_ptr cinfo)$/;"	f
transencode_coef_controller	jpeg/jctrans.c	/^transencode_coef_controller (j_compress_ptr cinfo,$/;"	f
transencode_master_selection	jpeg/jctrans.c	/^transencode_master_selection (j_compress_ptr cinfo,$/;"	f
transform	jpeg/transupp.h	/^  JXFORM_CODE transform;	\/* image transform operator *\/$/;"	m	struct:__anon44
transformation	R3Scene.h	/^  R3Matrix transformation;$/;"	m	struct:R3Node
transformoption	jpeg/jpegtran.c	/^static jpeg_transform_info transformoption; \/* image transformation options *\/$/;"	v	file:
transpose_critical_parameters	jpeg/transupp.c	/^transpose_critical_parameters (j_compress_ptr dstinfo)$/;"	f
trim	jpeg/transupp.h	/^  jboolean trim;			\/* if TRUE, trim partial MCUs as needed *\/$/;"	m	struct:__anon44
trim_bottom_edge	jpeg/transupp.c	/^trim_bottom_edge (j_compress_ptr dstinfo)$/;"	f
trim_right_edge	jpeg/transupp.c	/^trim_right_edge (j_compress_ptr dstinfo)$/;"	f
two_pass_quantize	jpeg/jpeglib.h	/^  jboolean two_pass_quantize;	\/* TRUE=use two-pass color quantization *\/$/;"	m	struct:jpeg_decompress_struct
type	R3Scene.h	/^  R3LightType type;$/;"	m	struct:R3Light
type	R3Scene.h	/^  R3ShapeType type;$/;"	m	struct:R3Shape
un_char	jpeg/ckconfig.c	/^unsigned char un_char;$/;"	v
un_short	jpeg/ckconfig.c	/^unsigned short un_short;$/;"	v
undef_struct_ptr	jpeg/ckconfig.c	/^typedef struct undefined_structure * undef_struct_ptr;$/;"	t	typeref:struct:undefined_structure	file:
unread_marker	jpeg/jpeglib.h	/^  int unread_marker;$/;"	m	struct:jpeg_decompress_struct
up	R3Scene.h	/^  R3Vector up;$/;"	m	struct:R3Camera
update_box	jpeg/jquant2.c	/^update_box (j_decompress_ptr cinfo, boxptr boxp)$/;"	f
upsample	jpeg/jpeglib.h	/^  struct jpeg_upsampler * upsample;$/;"	m	struct:jpeg_decompress_struct	typeref:struct:jpeg_decompress_struct::jpeg_upsampler
usage	jpeg/cjpeg.c	/^usage (void)$/;"	f
usage	jpeg/djpeg.c	/^usage (void)$/;"	f
usage	jpeg/jpegtran.c	/^usage (void)$/;"	f
usage	jpeg/rdjpgcom.c	/^usage (void)$/;"	f	file:
usage	jpeg/wrjpgcom.c	/^usage (void)$/;"	f	file:
using_merged_upsample	jpeg/jdmaster.c	/^  jboolean using_merged_upsample; \/* TRUE if using merged upsample\/cconvert *\/$/;"	m	struct:__anon61	file:
v	R2/R2Point.h	/^  double v[2];$/;"	m	class:R2Point
v	R2/R2Vector.h	/^  double v[2];$/;"	m	class:R2Vector
v	R3/R3Plane.h	/^  R3Vector v;$/;"	m	class:R3Plane
v	R3/R3Point.h	/^  double v[3];$/;"	m	class:R3Point
v	R3/R3Vector.h	/^  double v[3];$/;"	m	class:R3Vector
v_expand	jpeg/jdsample.c	/^  UINT8 v_expand[MAX_COMPONENTS];$/;"	m	struct:__anon11	file:
v_samp_factor	jpeg/jpeglib.h	/^  int v_samp_factor;		\/* vertical sampling factor (1..4) *\/$/;"	m	struct:__anon53
validate_script	jpeg/jcmaster.c	/^validate_script (j_compress_ptr cinfo)$/;"	f
valoffset	jpeg/jdhuff.h	/^  INT32 valoffset[17];		\/* huffval[] offset for codes of length k *\/$/;"	m	struct:__anon31
vector	R2/R2Line.h	/^  R2Vector vector;$/;"	m	class:R2Line
vector	R3/R3Line.h	/^  R3Vector vector;$/;"	m	class:R3Line
vertices	R3/R3Mesh.h	/^  vector<R3MeshVertex *> vertices;$/;"	m	struct:R3Mesh
vertices	R3/R3Mesh.h	/^  vector<R3MeshVertex *> vertices;$/;"	m	struct:R3MeshFace
virt_barray_list	jpeg/jmemmgr.c	/^  jvirt_barray_ptr virt_barray_list;$/;"	m	struct:__anon30	file:
virt_sarray_list	jpeg/jmemmgr.c	/^  jvirt_sarray_ptr virt_sarray_list;$/;"	m	struct:__anon30	file:
visual	jpeg/rdrle.c	/^  rle_kind visual;              \/* actual type of input file *\/$/;"	m	struct:_rle_source_struct	file:
void	jpeg/jconfig.h	8;"	d
void_func	jpeg/ckconfig.c	/^typedef void (*void_func) ();$/;"	t	file:
void_func	jpeg/ckconfig.c	/^typedef void (*void_func) (int a, int b);$/;"	t	file:
void_ptr	jpeg/ckconfig.c	/^typedef void * void_ptr;	\/* check void * *\/$/;"	t	file:
volume	jpeg/jquant2.c	/^  INT32 volume;$/;"	m	struct:__anon27	file:
whichptr	jpeg/jdmainct.c	/^  int whichptr;			\/* indicates which pointer set is now in use *\/$/;"	m	struct:__anon17	file:
whole_image	jpeg/jccoefct.c	/^  jvirt_barray_ptr whole_image[MAX_COMPONENTS];$/;"	m	struct:__anon62	file:
whole_image	jpeg/jcmainct.c	/^  jvirt_sarray_ptr whole_image[MAX_COMPONENTS];$/;"	m	struct:__anon4	file:
whole_image	jpeg/jctrans.c	/^  jvirt_barray_ptr * whole_image;$/;"	m	struct:__anon39	file:
whole_image	jpeg/jdcoefct.c	/^  jvirt_barray_ptr whole_image[MAX_COMPONENTS];$/;"	m	struct:__anon16	file:
whole_image	jpeg/jdpostct.c	/^  jvirt_sarray_ptr whole_image;	\/* virtual array, or NULL if one-pass *\/$/;"	m	struct:__anon36	file:
whole_image	jpeg/rdbmp.c	/^  jvirt_sarray_ptr whole_image;	\/* Needed to reverse row order *\/$/;"	m	struct:_bmp_source_struct	file:
whole_image	jpeg/rdtarga.c	/^  jvirt_sarray_ptr whole_image;	\/* Needed if funny input row order *\/$/;"	m	struct:_tga_source_struct	file:
whole_image	jpeg/wrbmp.c	/^  jvirt_sarray_ptr whole_image;	\/* needed to reverse row order *\/$/;"	m	struct:__anon47	file:
width	R2/R2Image.h	/^  int width;$/;"	m	class:R2Image
width_in_blocks	jpeg/jpeglib.h	/^  JDIMENSION width_in_blocks;$/;"	m	struct:__anon53
working_state	jpeg/jchuff.c	/^} working_state;$/;"	t	typeref:struct:__anon15	file:
workspace_coef_arrays	jpeg/transupp.h	/^  jvirt_barray_ptr * workspace_coef_arrays; \/* workspace for transformations *\/$/;"	m	struct:__anon44
write_1_byte	jpeg/wrjpgcom.c	/^write_1_byte (int c)$/;"	f	file:
write_2_bytes	jpeg/wrjpgcom.c	/^write_2_bytes (unsigned int val)$/;"	f	file:
write_Adobe_marker	jpeg/jpeglib.h	/^  jboolean write_Adobe_marker;	\/* should an Adobe marker be written? *\/$/;"	m	struct:jpeg_compress_struct
write_JFIF_header	jpeg/jpeglib.h	/^  jboolean write_JFIF_header;	\/* should a JFIF marker be written? *\/$/;"	m	struct:jpeg_compress_struct
write_JPEG_file	jpeg/example.c	/^write_JPEG_file (char * filename, int quality)$/;"	f
write_backing_store	jpeg/jmemansi.c	/^write_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
write_backing_store	jpeg/jmemmac.c	/^write_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
write_backing_store	jpeg/jmemname.c	/^write_backing_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
write_bmp_header	jpeg/wrbmp.c	/^write_bmp_header (j_decompress_ptr cinfo, bmp_dest_ptr dest)$/;"	f
write_colormap	jpeg/wrbmp.c	/^write_colormap (j_decompress_ptr cinfo, bmp_dest_ptr dest,$/;"	f
write_ems_store	jpeg/jmemdos.c	/^write_ems_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
write_err	jpeg/jmemdosa.asm	/^write_err:	pop	ds			; restore registers and exit$/;"	l
write_file_header	jpeg/jcmarker.c	/^write_file_header (j_compress_ptr cinfo)$/;"	f
write_file_store	jpeg/jmemdos.c	/^write_file_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
write_file_trailer	jpeg/jcmarker.c	/^write_file_trailer (j_compress_ptr cinfo)$/;"	f
write_frame_header	jpeg/jcmarker.c	/^write_frame_header (j_compress_ptr cinfo)$/;"	f
write_header	jpeg/wrtarga.c	/^write_header (j_decompress_ptr cinfo, djpeg_dest_ptr dinfo, int num_colors)$/;"	f
write_marker	jpeg/wrjpgcom.c	/^write_marker (int marker)$/;"	f	file:
write_marker_byte	jpeg/jcmarker.c	/^write_marker_byte (j_compress_ptr cinfo, int val)$/;"	f
write_marker_header	jpeg/jcmarker.c	/^write_marker_header (j_compress_ptr cinfo, int marker, unsigned int datalen)$/;"	f
write_ok	jpeg/jmemdosa.asm	/^write_ok:	xor	ax,ax			; return zero for OK$/;"	l
write_os2_header	jpeg/wrbmp.c	/^write_os2_header (j_decompress_ptr cinfo, bmp_dest_ptr dest)$/;"	f
write_scan_header	jpeg/jcmarker.c	/^write_scan_header (j_compress_ptr cinfo)$/;"	f
write_stdout	jpeg/cdjpeg.c	/^write_stdout (void)$/;"	f
write_stdout	jpeg/cdjpeg.h	114;"	d
write_tables_only	jpeg/jcmarker.c	/^write_tables_only (j_compress_ptr cinfo)$/;"	f
write_xms_store	jpeg/jmemdos.c	/^write_xms_store (j_common_ptr cinfo, backing_store_ptr info,$/;"	f
writeblanks	jpeg/ansi2knr.c	/^writeblanks(start, end)$/;"	f
xbuffer	jpeg/jdmainct.c	/^  JSAMPIMAGE xbuffer[2];	\/* pointers to weird pointer lists *\/$/;"	m	struct:__anon17	file:
xfov	R3Scene.h	/^  double xfov, yfov;$/;"	m	struct:R3Camera
xms_driver	jpeg/jmemdos.c	/^static XMSDRIVER xms_driver;	\/* saved address of XMS driver *\/$/;"	v	file:
xms_handle	jpeg/jmemsys.h	/^  XMSH xms_handle;		\/* handle if it's a chunk of XMS *\/$/;"	m	union:__anon8
xmsavail	jpeg/jmemdosa.asm	/^xmsavail:	mov 	ax,4310h		; fetch driver address with$/;"	l
xmsavail_done	jpeg/jmemdosa.asm	/^xmsavail_done:	les 	bx,dword ptr [bp+6]	; get pointer to return value$/;"	l
ycc_rgb_convert	jpeg/jdcolor.c	/^ycc_rgb_convert (j_decompress_ptr cinfo,$/;"	f
ycck_cmyk_convert	jpeg/jdcolor.c	/^ycck_cmyk_convert (j_decompress_ptr cinfo,$/;"	f
yfov	R3Scene.h	/^  double xfov, yfov;$/;"	m	struct:R3Camera
~R2Image	R2/R2Image.cpp	/^~R2Image(void)$/;"	f	class:R2Image
~R3Mesh	R3/R3Mesh.cpp	/^~R3Mesh(void)$/;"	f	class:R3Mesh
